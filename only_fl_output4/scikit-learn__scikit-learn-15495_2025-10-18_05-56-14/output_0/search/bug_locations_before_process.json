[
    {
        "file": "sklearn/calibration.py",
        "class": "CalibratedClassifierCV",
        "method": "fit",
        "intended_behavior": "Instead of directly using check_array(sample_weight, ensure_2d=False) and manual checks (if sample_weight is not None), replace these with _check_sample_weight(X, sample_weight) from utils.validation. This change should make sample_weight validation consistent with the project standards. Ensure that all functionality allowing for sample_weight to be None or array-like is preserved."
    },
    {
        "file": "sklearn/cluster/_dbscan.py",
        "class": "DBSCAN",
        "method": "fit",
        "intended_behavior": "Replace manual array conversion and length checking of sample_weight (np.asarray(sample_weight) and check_consistent_length(X, sample_weight)) with _check_sample_weight(X, sample_weight) ensuring sample_weight validation aligns with the unified approach. Ensure the existing logic of how sample_weight affects core sample determination remains intact."
    },
    {
        "file": "sklearn/dummy.py",
        "class": "DummyClassifier",
        "method": "fit",
        "intended_behavior": "Replace manual use of check_consistent_length(X, y, sample_weight) with _check_sample_weight(y, sample_weight), assuming this also manages consistency validation internally. Ensure the method continues to correctly account for sample_weight in its calculations related to class distribution, constant strategy, or any other logic where sample_weight is relevant."
    }
]