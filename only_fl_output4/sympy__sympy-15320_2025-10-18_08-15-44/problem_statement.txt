RootOf might ignore generator
This is related to #8551 but a little different. I'm not sure of all the ramifications but just want to document this.

Note how feeding RootOf an expression in terms of a new generator might ignore that generator if the form of the polynomial is the same

```
>>> RootOf(x**3+x-1,0)
RootOf(x**3 + x - 1, 0)
>>> RootOf((x**3+x-1).subs(x,tan(x)),0)
RootOf(x**3 + x - 1, 0)
>>> _.poly.gen
x  <----------------/!\ When you solve for RootOf values you will be getting tan(x) values
```

```
>>> RootOf(tan(x)**3 + 2*tan(x) - 1, 0)  # a new form
RootOf(tan(x)**3 + 2*tan(x) - 1, 0)
>>> RootOf((x**3+2*x-1),0)  # same form but new generator (x instead of tan(x)
RootOf(tan(x)**3 + 2*tan(x) - 1, 0)  <--------/!\ generator is tan(x) instead of x
>>> _.poly.gen
tan(x)
```

