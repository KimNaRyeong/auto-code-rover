.. py:data:: :type: option does not correctly link to type supplied
### Describe the bug

when using the .. py:data:: directive there is the :type: option to specify the type for the data being stored in the module level attribute. It does not work within the context of the module.  What I mean by that is I have to key out the entire module path and the class for the type instead of importing the type into the module and only having to type in the type class name.


### How to Reproduce

say I have the following in the module "my_library.module1"

``` python
"""
.. py:data:: mol
    :type: Unit
    :value: 'mol'

    mole
"""

from .module2 import Unit

mol = Unit('mol')
```

The output I get when building the docs is this.
```
mol: Unit = 'mol'

    mole
```
and "Unit" is not a clickable link.

However if I have the following in the module "my_library.module1"

``` python
"""
.. py:data:: mol
    :type: my_library.module2.Unit
    :value: 'mol'

    mole
"""

from .module2 import Unit

mol = Unit('mol')
```

I get this for an output

```
mol: my_library.module2.Unit = 'mol'

    mole
```

and "my_library.module2.Unit" is a clickable link that brings up the documentation for the Unit class


### Expected behavior

to be able to do the following

``` python
"""
.. py:data:: mol
    :type: Unit
    :value: 'mol'

    mole
"""

from .module2 import Unit

mol = Unit('mol')
```

and have the output be 
```
mol: Unit = 'mol'

    mole
```

and "Unit" be a clickable link that leads to the class that is specified in :type:


### Your project

https://github.com/kdschlosser/python-utils/tree/unit_conversion

### Screenshots

_No response_

### OS

Windows

### Python version

3.8

### Sphinx version

4.2

### Sphinx extensions

sphinx.ext.autodoc

### Extra tools

_No response_

### Additional context

_No response_
