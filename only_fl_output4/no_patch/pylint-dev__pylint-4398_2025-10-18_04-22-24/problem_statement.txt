Add --fail-on option to always return error code if specific issues (or issue types) are found
We're using pylint in CI with two primary goals:

1. Ensure there are no error-category issues - this can be achieved by looking at the exit code
2. Ensure the overall linting score doesn't deteriorate too much - this can be achieved by using `--fail-under=8`

However if `--fail-under` is used, and the score is above that, then it passes even if there are error-category issues detected. Essentially it's acting as a "only throw fail (non-zero) codes if under this", instead of a "fail if under this, otherwise change nothing".

Two possible solutions I can think of here are:

1. Have a configuration option to prevent `--fail-under` from consuming other exit statuses. I.e. a way to say "if score is under N, return error code X, regardless of all else, otherwise change nothing".
2. Add a new option like `--fail-on=E,unused-import` which means that if there are any `E*` code (error-category) issues, or any `unused-error` issues, then fail, otherwise change nothing.
