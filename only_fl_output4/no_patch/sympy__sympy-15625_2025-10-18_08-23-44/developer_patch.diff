diff --git a/sympy/core/basic.py b/sympy/core/basic.py
--- a/sympy/core/basic.py
+++ b/sympy/core/basic.py
@@ -424,9 +424,8 @@ def _repr_latex_(self):
         SymPy objects, like lists and dictionaries of expressions.
         """
         from sympy.printing.latex import latex
-        s = latex(self, mode='equation*')
-        s = s.strip('$')
-        return "$$%s$$" % s
+        s = latex(self, mode='plain')
+        return "$\\displaystyle %s$" % s
 
     _repr_latex_orig = _repr_latex_
 
diff --git a/sympy/interactive/printing.py b/sympy/interactive/printing.py
--- a/sympy/interactive/printing.py
+++ b/sympy/interactive/printing.py
@@ -148,6 +148,8 @@ def _print_latex_png(o):
         """
         if _can_print_latex(o):
             s = latex(o, mode=latex_mode, **settings)
+            if latex_mode == 'plain':
+                s = '$\\displaystyle %s$' % s
             try:
                 return _preview_wrapper(s)
             except RuntimeError as e:
@@ -171,8 +173,9 @@ def _print_latex_text(o):
         """
         if _can_print_latex(o):
             s = latex(o, mode=latex_mode, **settings)
-            s = s.strip('$')
-            return '$$%s$$' % s
+            if latex_mode == 'plain':
+                return '$\\displaystyle %s$' % s
+            return s
 
     def _result_display(self, arg):
         """IPython's pretty-printer display hook, for use in IPython 0.10
@@ -269,7 +272,7 @@ def init_printing(pretty_print=True, order=None, use_unicode=None,
                   use_latex=None, wrap_line=None, num_columns=None,
                   no_global=False, ip=None, euler=False, forecolor='Black',
                   backcolor='Transparent', fontsize='10pt',
-                  latex_mode='equation*', print_builtin=True,
+                  latex_mode='plain', print_builtin=True,
                   str_printer=None, pretty_printer=None,
                   latex_printer=None, **settings):
     r"""
@@ -325,7 +328,7 @@ def init_printing(pretty_print=True, order=None, use_unicode=None,
     fontsize: string, optional, default='10pt'
         A font size to pass to the LaTeX documentclass function in the
         preamble.
-    latex_mode: string, optional, default='equation*'
+    latex_mode: string, optional, default='plain'
         The mode used in the LaTeX printer. Can be one of:
         {'inline'|'plain'|'equation'|'equation*'}.
     print_builtin: boolean, optional, default=True
diff --git a/sympy/matrices/matrices.py b/sympy/matrices/matrices.py
--- a/sympy/matrices/matrices.py
+++ b/sympy/matrices/matrices.py
@@ -2052,9 +2052,8 @@ def _repr_latex_(self):
         SymPy objects, like lists and dictionaries of expressions.
         """
         from sympy.printing.latex import latex
-        s = latex(self, mode='equation*')
-        s = s.strip('$')
-        return "$$%s$$" % s
+        s = latex(self, mode='plain')
+        return "$\\displaystyle %s$" % s
 
     _repr_latex_orig = _repr_latex_
 
diff --git a/sympy/physics/vector/dyadic.py b/sympy/physics/vector/dyadic.py
--- a/sympy/physics/vector/dyadic.py
+++ b/sympy/physics/vector/dyadic.py
@@ -387,9 +387,8 @@ def _repr_latex_(self):
         SymPy objects, like lists and dictionaries of expressions.
         """
         from sympy.printing.latex import latex
-        s = latex(self, mode='equation*')
-        s = s.strip('$')
-        return "$$%s$$" % s
+        s = latex(self, mode='plain')
+        return "$\\displaystyle %s$" % s
 
     _repr_latex_orig = _repr_latex_
 
diff --git a/sympy/physics/vector/vector.py b/sympy/physics/vector/vector.py
--- a/sympy/physics/vector/vector.py
+++ b/sympy/physics/vector/vector.py
@@ -463,9 +463,8 @@ def _repr_latex_(self):
         SymPy objects, like lists and dictionaries of expressions.
         """
         from sympy.printing.latex import latex
-        s = latex(self, mode='equation*')
-        s = s.strip('$')
-        return "$$%s$$" % s
+        s = latex(self, mode='plain')
+        return "$\\displaystyle %s$" % s
 
     _repr_latex_orig = _repr_latex_
 
diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py
--- a/sympy/printing/latex.py
+++ b/sympy/printing/latex.py
@@ -669,7 +669,7 @@ def _print_Integral(self, expr):
                 tex += r"\int"
 
                 if len(lim) > 1:
-                    if self._settings['mode'] in ['equation', 'equation*'] \
+                    if self._settings['mode'] != 'inline' \
                             and not self._settings['itex']:
                         tex += r"\limits"
 
diff --git a/sympy/printing/preview.py b/sympy/printing/preview.py
--- a/sympy/printing/preview.py
+++ b/sympy/printing/preview.py
@@ -180,7 +180,9 @@ def preview(expr, output='png', viewer=None, euler=True, packages=(),
     if isinstance(expr, str):
         latex_string = expr
     else:
-        latex_string = latex(expr, mode='inline', **latex_settings)
+        latex_string = ('$\\displaystyle ' +
+                        latex(expr, mode='plain', **latex_settings) +
+                        '$')
 
     try:
         workdir = tempfile.mkdtemp()
diff --git a/sympy/tensor/array/ndim_array.py b/sympy/tensor/array/ndim_array.py
--- a/sympy/tensor/array/ndim_array.py
+++ b/sympy/tensor/array/ndim_array.py
@@ -307,9 +307,8 @@ def _repr_latex_(self):
         SymPy objects, like lists and dictionaries of expressions.
         """
         from sympy.printing.latex import latex
-        s = latex(self, mode='equation*')
-        s = s.strip('$')
-        return "$$%s$$" % s
+        s = latex(self, mode='plain')
+        return "$\\displaystyle %s$" % s
 
     _repr_latex_orig = _repr_latex_
 
