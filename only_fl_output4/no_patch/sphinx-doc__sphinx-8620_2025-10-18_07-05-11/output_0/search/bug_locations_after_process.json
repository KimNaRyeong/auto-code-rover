[
    {
        "rel_file_path": "sphinx/builders/html/transforms.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5/sphinx/builders/html/transforms.py",
        "start": 21,
        "end": 59,
        "class_name": "KeyboardTransform",
        "method_name": null,
        "code": "21 class KeyboardTransform(SphinxPostTransform):\n22     \"\"\"Transform :kbd: role to more detailed form.\n23 \n24     Before::\n25 \n26         <literal class=\"kbd\">\n27             Control-x\n28 \n29     After::\n30 \n31         <literal class=\"kbd\">\n32             <literal class=\"kbd\">\n33                 Control\n34             -\n35             <literal class=\"kbd\">\n36                 x\n37     \"\"\"\n38     default_priority = 400\n39     builders = ('html',)\n40     pattern = re.compile(r'(-|\\+|\\^|\\s+)')\n41 \n42     def run(self, **kwargs: Any) -> None:\n43         matcher = NodeMatcher(nodes.literal, classes=[\"kbd\"])\n44         for node in self.document.traverse(matcher):  # type: nodes.literal\n45             parts = self.pattern.split(node[-1].astext())\n46             if len(parts) == 1:\n47                 continue\n48 \n49             node.pop()\n50             while parts:\n51                 key = parts.pop(0)\n52                 node += nodes.literal('', key, classes=[\"kbd\"])\n53 \n54                 try:\n55                     # key separator (ex. -, +, ^)\n56                     sep = parts.pop(0)\n57                     node += nodes.Text(sep)\n58                 except IndexError:\n59                     pass\n",
        "intended_behavior": "The behavior of the `KeyboardTransform` class needs to be modified to distinguish between single keystroke `<kbd>` elements and container `<kbd>` elements for compound keystrokes. This can be achieved by implementing the following logic within the class's methods responsible for generating `<kbd>` HTML elements: \n\n- **For single keystrokes** (currently represented correctly): No change is needed. The existing functionality, which assigns the class `kbd docutils literal notranslate` to `<kbd>` elements should be preserved.\n  \n- **For compound keystrokes**: Modify the generation of the container `<kbd>` element to include an additional CSS class, such as `compound`. The resulting HTML should look like this for compound keystrokes:\n  ```html\n  <kbd class=\"kbd compound docutils literal notranslate\">\n  <kbd class=\"kbd docutils literal notranslate\">Shift</kbd>+\n  <kbd class=\"kbd docutils literal notranslate\">X</kbd>\n  </kbd>\n  ```\n  This distinguishes the container `<kbd>` elements from their child keystroke `<kbd>` elements, thus allowing for differential styling via CSS. The existing functionality for the child elements remains unchanged.\n\nThe **modification** requires examining and adjusting the method(s) within `KeyboardTransform` class that are responsible for generating the `<kbd>` HTML elements. The goal is to implement a conditional logic where, if a `<kbd>` element represents a compound keystroke (i.e., it wraps other `<kbd>` elements), an additional CSS class (`compound`) is added to it. This change ensures the structure and styling potential described in the issue is achieved without affecting the current presentation for single keystrokes."
    }
]