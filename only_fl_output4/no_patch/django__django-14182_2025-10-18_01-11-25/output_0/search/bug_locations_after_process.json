[
    {
        "rel_file_path": "django/db/models/functions/math.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/django__django/setup_django__django__4.0/django/db/models/functions/math.py",
        "start": 161,
        "end": 163,
        "class_name": "Round",
        "method_name": null,
        "code": "161 class Round(Transform):\n162     function = 'ROUND'\n163     lookup_name = 'round'\n",
        "intended_behavior": "The `Round` class should be extended to accept an optional precision argument which defines the number of decimal places to round the number to. This argument must be handled in such a way that it constructs the appropriate SQL query based on the backend being used (PostgreSQL, SQLite, MySQL, Oracle) to utilize the native `ROUND` function's capability of accepting precision. The change must ensure that:\n- If a precision argument is provided, it is used to round the value to the specified number of decimal places across all supported database backends.\n- If no precision argument is provided, the behavior defaults to rounding to the nearest integer, preserving the current functionality for backward compatibility.\n- The modification considers the compatibility with Django\u2019s ORM and does not break the existing API contracts of the `Round` class."
    }
]