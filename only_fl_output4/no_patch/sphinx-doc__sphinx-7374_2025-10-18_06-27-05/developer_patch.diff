diff --git a/sphinx/builders/_epub_base.py b/sphinx/builders/_epub_base.py
--- a/sphinx/builders/_epub_base.py
+++ b/sphinx/builders/_epub_base.py
@@ -259,6 +259,15 @@ def fix_ids(self, tree: nodes.document) -> None:
         Some readers crash because they interpret the part as a
         transport protocol specification.
         """
+        def update_node_id(node: Element) -> None:
+            """Update IDs of given *node*."""
+            new_ids = []
+            for node_id in node['ids']:
+                new_id = self.fix_fragment('', node_id)
+                if new_id not in new_ids:
+                    new_ids.append(new_id)
+            node['ids'] = new_ids
+
         for reference in tree.traverse(nodes.reference):
             if 'refuri' in reference:
                 m = self.refuri_re.match(reference['refuri'])
@@ -268,22 +277,14 @@ def fix_ids(self, tree: nodes.document) -> None:
                 reference['refid'] = self.fix_fragment('', reference['refid'])
 
         for target in tree.traverse(nodes.target):
-            for i, node_id in enumerate(target['ids']):
-                if ':' in node_id:
-                    target['ids'][i] = self.fix_fragment('', node_id)
+            update_node_id(target)
 
             next_node = target.next_node(ascend=True)  # type: Node
             if isinstance(next_node, nodes.Element):
-                for i, node_id in enumerate(next_node['ids']):
-                    if ':' in node_id:
-                        next_node['ids'][i] = self.fix_fragment('', node_id)
+                update_node_id(next_node)
 
         for desc_signature in tree.traverse(addnodes.desc_signature):
-            ids = desc_signature.attributes['ids']
-            newids = []
-            for id in ids:
-                newids.append(self.fix_fragment('', id))
-            desc_signature.attributes['ids'] = newids
+            update_node_id(desc_signature)
 
     def add_visible_links(self, tree: nodes.document, show_urls: str = 'inline') -> None:
         """Add visible link targets for external links"""
diff --git a/sphinx/util/nodes.py b/sphinx/util/nodes.py
--- a/sphinx/util/nodes.py
+++ b/sphinx/util/nodes.py
@@ -445,6 +445,7 @@ def _make_id(string: str) -> str:
 
     Changes:
 
+    * Allow to use capital alphabet characters
     * Allow to use dots (".") and underscores ("_") for an identifier
       without a leading character.
 
@@ -452,8 +453,7 @@ def _make_id(string: str) -> str:
     # Maintainer: docutils-develop@lists.sourceforge.net
     # Copyright: This module has been placed in the public domain.
     """
-    id = string.lower()
-    id = id.translate(_non_id_translate_digraphs)
+    id = string.translate(_non_id_translate_digraphs)
     id = id.translate(_non_id_translate)
     # get rid of non-ascii characters.
     # 'ascii' lowercase to prevent problems with turkish locale.
@@ -464,7 +464,7 @@ def _make_id(string: str) -> str:
     return str(id)
 
 
-_non_id_chars = re.compile('[^a-z0-9._]+')
+_non_id_chars = re.compile('[^a-zA-Z0-9._]+')
 _non_id_at_ends = re.compile('^[-0-9._]+|-+$')
 _non_id_translate = {
     0x00f8: u'o',       # o with stroke
