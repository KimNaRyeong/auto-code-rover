[
    {
        "file": "django/db/models/lookups.py",
        "class": "Lookup",
        "method": "",
        "intended_behavior": "The `Lookup` class should be modified to ensure that when `__isnull` is processed, the value provided (`rhs` in the context of the class) is verified to be a Boolean. This could be achieved by implementing a new method or adjusting an existing one, such as `get_prep_lookup` or `__init__`, to include a validation step. If a non-Boolean value is detected for `__isnull`, an appropriate exception (e.g., `ValueError`) should be raised. This validation will enforce the usage of `__isnull` strictly with Boolean values, eliminating the undocumented and potentially confusing behavior of accepting truthy/falsy values."
    },
    {
        "file": "django/db/models/query.py",
        "class": "QuerySet",
        "method": "",
        "intended_behavior": "Although the `QuerySet` class might not directly handle the validation of lookup values, ensuring that all methods constructing queries with `__isnull` (such as `filter`, `exclude`, etc.) properly document and, indirectly through the use of `Lookup`, enforce the Boolean constraint of `__isnull` values. This would enhance clarity for developers and maintain consistency across the ORM. The documentation should explicitly mention the required type of `__isnull` to prevent misuse."
    }
]