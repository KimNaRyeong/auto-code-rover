[
    {
        "rel_file_path": "django/utils/dateparse.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/django__django/setup_django__django__3.2/django/utils/dateparse.py",
        "start": 125,
        "end": 147,
        "class_name": null,
        "method_name": "parse_duration",
        "code": "125 def parse_duration(value):\n126     \"\"\"Parse a duration string and return a datetime.timedelta.\n127 \n128     The preferred format for durations in Django is '%d %H:%M:%S.%f'.\n129 \n130     Also supports ISO 8601 representation and PostgreSQL's day-time interval\n131     format.\n132     \"\"\"\n133     match = (\n134         standard_duration_re.match(value) or\n135         iso8601_duration_re.match(value) or\n136         postgres_interval_re.match(value)\n137     )\n138     if match:\n139         kw = match.groupdict()\n140         sign = -1 if kw.pop('sign', '+') == '-' else 1\n141         if kw.get('microseconds'):\n142             kw['microseconds'] = kw['microseconds'].ljust(6, '0')\n143         if kw.get('seconds') and kw.get('microseconds') and kw['seconds'].startswith('-'):\n144             kw['microseconds'] = '-' + kw['microseconds']\n145         kw = {k: float(v.replace(',', '.')) for k, v in kw.items() if v is not None}\n146         days = datetime.timedelta(kw.pop('days', .0) or .0)\n147         return days + sign * datetime.timedelta(**kw)\n",
        "intended_behavior": "The `parse_duration` method should correctly interpret and apply the sign (`+` or `-`) to the resulting `datetime.timedelta` object, even when the input string solely consists of days. To achieve this, the method must ensure that the effect of the sign is not lost when constructing the days component of the `datetime.timedelta` object or when combining it with other components to form the final duration. This can be implemented by ensuring that the sign is applied directly to the `days` value before or during the construction of the `days` `timedelta` object, such that:\n\n- If the input string denotes a negative duration (e.g., `'-P1D'` for minus one day), the returned `datetime.timedelta` object should correctly reflect this by having a negative number of days.\n- The existing functionality for handling hours, minutes, seconds, and microseconds remains unchanged, preserving the method's ability to parse and construct durations from strings with mixed or singular time components.\n\nThis adjustment ensures the method accurately processes ISO 8601 duration strings, aligning the function's behavior with expected standards and handling of negative durations, especially for strings that represent durations in days only."
    }
]