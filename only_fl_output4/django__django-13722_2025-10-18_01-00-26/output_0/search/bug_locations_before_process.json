[
    {
        "file": "django/contrib/admin/options.py",
        "class": "InlineModelAdmin",
        "method": "",
        "intended_behavior": "The task is to add a new method to the class, provisionally named `get_formset_initial_data`. This new method aims to parallel the existing `get_changeform_initial_data` but is tailored for initial data injection into formsets. The method would allow developers to define initial data for every form within a formset, enhancing customization for inline models in the Django admin interface. The method should accept the same parameters as `get_formset`, i.e., `self`, `request`, and `obj=None`, along with other keyword arguments as necessary. It would return a dictionary or a list of dictionaries, with dict keys matching formfield names and values providing the initial data for these fields. Inside `get_formset`, before returning the formset factory call (`return inlineformset_factory(...)`), integrate a call to this new method to obtain initial data, which is then passed to the formset factory using appropriate arguments. Ensure this implementation is backward compatible, i.e., if `get_formset_initial_data` is not overridden, the formset behaves as it currently does without initial data customization. Document the new method adequately, emphasizing how developers can implement it in their subclasses of `InlineModelAdmin` to provide custom initial data."
    }
]