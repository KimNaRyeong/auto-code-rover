{
    "django__django-12185": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "NotSupportedError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Window"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "When"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Window"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "annotate",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "NotSupportedError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Window"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "NotSupportedError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Window"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "When"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "compile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Window(expression="
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Case(When("
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Window"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "NotSupportedError"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13886": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SystemCheck"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Meta.indexes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Query._gen_cols"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "#26167"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FieldError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_gen_cols"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Meta.indexes"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_expression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_gen_cols"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Meta.indexes"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Meta:"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FieldError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_expression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "#26167"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_gen_cols",
                        "class_name": "Query"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Meta.indexes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_indexes"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_gen_cols"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "functional indexes"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12556": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_random_string"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_random_string"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_random_string("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from django.utils.crypto import get_random_string"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_random_string"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_random_string",
                        "file_name": "crypto.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_random_string()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_random_string"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_random_string"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_random_string"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.utils.crypto.get_random_string"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-8684": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "code-block"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "literalinclude"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":dedent:"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Directive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DocumentProcessor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TextProcessor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "process_directive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_directive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indentation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "remove_indent"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dedent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "literalinclude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":dedent:"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "CodeBlock",
                        "file_name": "sphinx/directives/code.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "LiteralInclude",
                        "file_name": "sphinx/directives/code.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dedent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":dedent:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "code-block"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "literalinclude"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":dedent:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dedent"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "code-block"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "literalinclude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Directive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_directive_options"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Directive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CodeBlock"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LiteralInclude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "applyDedent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parseOptions"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":dedent:"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-13297": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TemplateView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "OfferView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_quote_params_for_last_executed_query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "path('/offers/<slug:offer_slug>/', OfferView.as_view(), name='offer_view')"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OfferView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "TemplateView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_object_or_404"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "path(\"/offers/<slug:offer_slug>/\", OfferView.as_view(), name=\"offer_view\")"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TemplateView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Account"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OfferView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_context_data"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_object_or_404"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TemplateView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OfferView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "OfferView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Error binding parameter 0 - probably unsupported type"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "path(\"/offers/<slug:offer_slug>/\", OfferView.as_view(), name=\"offer_view\","
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OfferView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "OfferView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "path(\"/offers/<slug:offer_slug>/\", OfferView.as_view(), name=\"offer_view\")"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_object_or_404(Account, slug="
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SimpleLazyObject"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "as_view"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TemplateView.as_view()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "SimpleLazyObject",
                        "file_name": "django/views/generic/base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-10552": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "@staticmethod\\ndef test_"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "@classmethod\\ndef test_"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@staticmethod\\n@pytest.mark.parametrize"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@classmethod\\n@pytest.mark.parametrize"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@pytest.mark.parametrize\\n@staticmethod"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@pytest.mark.parametrize\\n@classmethod"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@pytest.mark.parametrize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "test_"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_staticmethod",
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_staticmethod_inner",
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_staticmethod_outer",
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_classmethod",
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_classmethod_inner",
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_classmethod_outer",
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cannot collect 'test_staticmethod_inner' because it is not a function"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cannot collect 'test_classmethod_inner' because it is not a function"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pytest.ini"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conftest.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@pytest.mark.parametrize"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "test_staticmethod"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "test_staticmethod_inner"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "test_classmethod"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "test_classmethod_outer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@pytest.mark.parametrize"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_staticmethod",
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_staticmethod_inner",
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_classmethod",
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_classmethod_inner",
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_classmethod_outer",
                        "class_name": "TestFoo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@staticmethod"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@classmethod"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@pytest.mark.parametrize"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13162": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_migration_filename"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "create_merge_filename"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationCreator"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "merge_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_merge_"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_filename"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "merge_"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_migration_filename"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "merge migration filename"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "merge",
                        "file_name": "django/db/migrations/migration.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge_migrations"
                    },
                    "call_ok": false
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "create_merge_filename"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "merge_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "timestamp"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Migrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "merge migration filename"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "timestamp"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15569": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_unregister_lookup",
                        "file_name": "django/db/models/query_utils.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "register_lookup",
                        "file_name": "django/db/models/query_utils.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_func_unique_constraint_lookups",
                        "file_name": "django/tests/schema/tests.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_unregister_lookup",
                        "file_name": "django/db/models/query_utils.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "register_lookup",
                        "file_name": "django/db/models/query_utils.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "cache_clear()",
                        "file_name": "django/db/models/query_utils.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_func_unique_constraint_lookups",
                        "class_name": "SchemaTests"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "SchemaTests",
                        "file_name": "tests/schema/tests.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RegisterLookupMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_unregister_lookup",
                        "file_name": "django/db/models/query_utils.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "register_lookup",
                        "file_name": "django/db/models/query_utils.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_func_unique_constraint_lookups",
                        "class_name": "SchemaTests"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RegisterLookupMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_unregister_lookup",
                        "class_name": "RegisterLookupMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "register_lookup",
                        "class_name": "RegisterLookupMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "schema.tests.SchemaTests.test_func_unique_constraint_lookups"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RegisterLookupMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_unregister_lookup",
                        "class_name": "RegisterLookupMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "register_lookup",
                        "class_name": "RegisterLookupMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "SchemaTests",
                        "file_name": "tests/schema/tests.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_func_unique_constraint_lookups",
                        "file_name": "tests/schema/tests.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-12270": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mul"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "primitive"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "extract_multiplicatively"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Mul(2, -x).extract_multiplicatively(-2)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Mul(2, -x, evaluate=False).extract_multiplicatively(-2)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mul"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "extract_multiplicatively"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "primitive"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "Mul(2, -x, evaluate=False).extract_multiplicatively(-2)",
                        "file_name": "core/expr.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Mul",
                        "file_name": "core/expr.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "extract_multiplicatively"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "primitive"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "primitive",
                        "file_name": "sympy/core/expr.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "primitive",
                        "file_name": "sympy/core/add.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mul"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "extract_multiplicatively"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "primitive"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "Mul(2, -x, evaluate=False).extract_multiplicatively(-2)",
                        "file_name": "core/expr.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "extract_multiplicatively",
                        "file_name": "core/expr.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "primitive",
                        "file_name": "core/expr.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "Mul(",
                        "file_name": "core/expr.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-6202": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "getmodpath",
                        "file_name": "src/_pytest/python.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "return s.replace(\".[\", \"[\")",
                        "file_name": "src/_pytest/python.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "return s.replace('.[', '[')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/python.py",
                        "line_no_str": "292",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "getmodpath",
                        "file_name": "src/_pytest/python.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "getmodpath",
                        "file_name": "_pytest/python.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "return s.replace('.[', '[')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "reportinfo",
                        "file_name": "_pytest/nodes.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "reportinfo"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "return s.replace(\".[\", \"[\")",
                        "file_name": "src/_pytest/python.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "reportinfo",
                        "file_name": "src/_pytest/nodes.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "getmodpath",
                        "file_name": "src/_pytest/python.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "return s.replace('.[', '[')",
                        "file_name": "src/_pytest/python.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/nodes.py",
                        "line_no_str": "437",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "getmodpath",
                        "file_name": "src/_pytest/python.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "reportinfo",
                        "file_name": "src/_pytest/nodes.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-16281": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Product"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Product"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pprint"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "use_unicode"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Product"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "pprint",
                        "class_name": "Product"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pprint"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Printer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Formatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExprWithIntLimits"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Product"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pprint"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pretty_print"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pprint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "pretty",
                        "file_name": "sympy/concrete/products.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ExprWithIntLimits pretty"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "pretty printing of `Product` instances",
                        "file_name": "sympy/printing/pretty/pretty.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Product"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "pprint",
                        "class_name": "Product"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "use_unicode"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "Product",
                        "file_name": "sympy/printing/pretty/pretty.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Product"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pprint"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "pprint",
                        "class_name": "Product"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "use_unicode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\u252c\u2500\u2500\u2500\u252c"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "oo\\n_____"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-11043": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validate=False"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "validate",
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DataFrame to array"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "validate",
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "validate=",
                        "file_name": "<file_path_of_FunctionTransformer>"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "transform",
                        "file_name": "sklearn/preprocessing/_function_transformer.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_transform",
                        "file_name": "sklearn/preprocessing/_function_transformer.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validate"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "FunctionTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validate=False"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-5404": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from sty import"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pytest.ini"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conftest.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@doctest"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from sty import fg"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_mock_aware_unwrap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inspect.unwrap"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from sty import fg"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__wrapped__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inspect.unwrap"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from sty import fg"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__wrapped__"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from sty import fg"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "pytest",
                        "file_name": "conftest.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "[pytest]",
                        "file_name": "pytest.ini"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "[tox]",
                        "file_name": "tox.ini"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-7499": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raises"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "raises",
                        "file_name": "src/_pytest/python_api.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MismatchedIndexValueError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pytest.raises(MismatchedIndexValueError, match="
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raises"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/python_api.py",
                        "line_no_str": "line_number",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def raises",
                        "file_name": "src/_pytest/python_api.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raises"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raises"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "match="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MismatchedIndexValueError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "with pytest.raises"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "match=",
                        "file_name": "testing/python/raises.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pytest.raises"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-19601": [
        [],
        [],
        [],
        [],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "version="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__version__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CHANGELOG"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "HISTORY"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-14458": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ArrayData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "Ridge"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check_array"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ArrayData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "make_dataset",
                        "file_name": "sklearn/linear_model/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check_array"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "make_dataset",
                        "file_name": "sklearn/linear_model/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ArrayDataset64"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check_array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "Ridge"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ArrayData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Ridge(solver='sag').fit"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ArrayData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "make_dataset",
                        "file_name": "sklearn/linear_model/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ArrayData(X, y, sample_weight, seed=seed)"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-11585": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SparsePCA"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "SparsePCA"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/decomposition/sparse_pca.py",
                        "line_no_str": "179",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SparsePCA"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "SparsePCA"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/decomposition/sparse_pca.py",
                        "line_no_str": "179",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SparsePCA"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "SparsePCA"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/decomposition/sparse_pca.py",
                        "line_no_str": "179",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SparsePCA"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "SparsePCA"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/decomposition/sparse_pca.py",
                        "line_no_str": "179",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SparsePCA"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "SparsePCA"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/decomposition/sparse_pca.py",
                        "line_no_str": "179",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14373": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateFormat"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "Y",
                        "file_name": "django/utils/dateformat.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateFormat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DateFormat.Y()"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateFormat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "Y",
                        "class_name": "DateFormat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "format(year"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "strftime('%Y')"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateFormat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "format"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "Y",
                        "class_name": "DateFormat"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateFormat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "Y",
                        "class_name": "DateFormat"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pylint-dev__pylint-6506": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PylintRun"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_config_initialization"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_UnrecognizedOptionError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "raise _UnrecognizedOptionError(options=unrecognized_options)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_config_initialization",
                        "file_name": "pylint/config/config_initialization.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "PylintRun",
                        "file_name": "pylint/lint/run.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class _UnrecognizedOptionError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PylintRun"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "run_pylint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_UnrecognizedOptionError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Command line:1:0: E0015: Unrecognized option found"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__init__",
                        "file_name": "pylint/lint/run.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_config_initialization",
                        "file_name": "pylint/config/config_initialization.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PylintRun"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_UnrecognizedOptionError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_config_initialization"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_UnrecognizedOptionError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_config_initialization",
                        "file_name": "pylint/config/config_initialization.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "run_pylint",
                        "file_name": "pylint/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "argparse"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pylint-dev__pylint-6528": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "run_pylint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--recursive=y"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore-paths"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore-patterns"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_args"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PylintRun"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "argparse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "--ignore",
                        "file_name": "pylint/checkers/similar.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse_args"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter_files"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--recursive=y"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore-paths"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore-patterns"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "recursive",
                        "file_name": "pylint/config/arguments_manager.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "--ignore",
                        "file_name": "pylint/config/option_manager_mixin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "--ignore",
                        "file_name": "pylint/config/arguments_manager.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parse_args",
                        "file_name": "pylint/config/arguments_manager.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "file traversal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "command-line arguments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "load configuration"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "lint session"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--recursive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore-paths"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore-patterns"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_arguments"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "collect_files"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ConfigHandler"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "load_configuration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "find_files"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "apply_ignore"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ArgumentParser"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--recursive=y"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore-patterns"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore-paths"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "load_configuration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_arguments"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "file_traversal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "directory_scan"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "command-line",
                        "file_name": "pylint/config/option_manager_mixin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "command-line",
                        "file_name": "pylint/config/arguments_manager.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "file selection"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "project scanning"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse command-line arguments"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--recursive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore-paths"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--ignore-patterns"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply ignore rules"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter files"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter paths"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "regex match file path"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "regex match base names"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-14471": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_get_token",
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "process_view",
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "process_request",
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "InvalidTokenFormat"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_get_new_csrf_token"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_get_token"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "process_view"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "missing cookie"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_compare_masked_tokens"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "secrets"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "process_view",
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_get_token",
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "secrets"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_compare_masked_tokens",
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "process_view",
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_get_token",
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_get_new_csrf_token",
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "process_request",
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_get_new_csrf_token"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_sanitize_token"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "process_view",
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_get_token",
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "InvalidTokenFormat"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-10531": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "log_change"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "save_history"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "log_history"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_verbose_name"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Changed pub_date"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogEntry"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "History"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "construct_change_message"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.DateTimeField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LogEntry"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.DateTimeField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_change_message"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pub_date = models.DateTimeField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin.ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LogEntry"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "log_change"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "log_addition"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LogEntry"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "history"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "verbose_name"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13439": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__len__",
                        "class_name": "Pipeline"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pipe = Pipeline(["
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__len__",
                        "class_name": "Pipeline"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__len__",
                        "class_name": "Pipeline"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "steps",
                        "file_name": "sklearn/pipeline.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__len__",
                        "class_name": "Pipeline"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getitem__",
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__len__",
                        "class_name": "Pipeline"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getitem__",
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15292": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Http404View"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "technical 404 debug page"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "format_exception"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "convert_class_name_to_view_name"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "debug"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exception handling"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "debug",
                        "file_name": "django/views/debug.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "exception",
                        "file_name": "django/core/handlers/exception.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Http404View"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Raised by:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__name__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_404_response"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Http404View"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Raised by:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_view_name"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_404"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Http404View"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Raised by:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_view_name"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "str(class)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Http404View"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Raised by:"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "technical_404_response"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__name__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__module__"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11583": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StatReloader"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "run_with_reloader"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "snapshot_files"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.readlink(path)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "path.resolve()"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "run_with_reloader"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "snapshot_files"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "watched_files"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "resolve",
                        "file_name": "/Users/kez/.pyenv/versions/3.6.2/lib/python3.6/pathlib.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.path.join"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.readlink"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StatReloader"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "run_with_reloader",
                        "file_name": "/Userz/kez/path/to/venv/lib/python3.6/site-packages/django/utils/autoreload.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "snapshot_files"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "os.readlink(path)",
                        "file_name": "/Users/kez/.pyenv/versions/3.6.2/lib/python3.6/pathlib.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StatReloader"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Pathlib"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.readlink"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "snapshot_files"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Pathlib.resolve"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autoreload.run_with_reloader"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "run_loop",
                        "file_name": "/Userz/kez/path/to/venv/lib/python3.6/site-packages/django/utils/autoreload.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "snapshot_files",
                        "file_name": "/Userz/kez/path/to/venv/lib/python3.6/site-packages/django/utils/autoreload.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "watched_files",
                        "file_name": "/Userz/kez/path/to/venv/lib/python3.6/site-packages/django/utils/autoreload.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "iter_all_python_module_files",
                        "file_name": "/Userz/kez/path/to/venv/lib/python3.6/site-packages/django/utils/autoreload.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.readlink"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pathlib"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "watched_files"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "snapshot_files"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13569": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Random"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_group_by"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SQLCompiler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_group_by"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Random"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "contains_aggregate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_source_expressions"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SQLCompiler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_group_by",
                        "class_name": "SQLCompiler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Random"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_group_by"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Random"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_group_by"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Random"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Count('related')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "GROUP BY"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-25547": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_rgba"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "scatter",
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_upcast_err"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_safe_first_finite"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Collection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ScalarMappable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Normalize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_rgba"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "process_value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "errorbar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_upcast_err"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_rgba"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_upcast_err"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "scatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "update_scalarmappable",
                        "file_name": "matplotlib/collections.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_upcast_err",
                        "file_name": "matplotlib/axes/_axes.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "warnings.warn(\"Warning: converting a masked element to nan.\")"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        []
    ],
    "matplotlib__matplotlib-23288": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "savefig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "plt.text"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PDFPages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "draw_text",
                        "class_name": "PDFPages"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PDF"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "text"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "QuadPoints"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "url="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "savefig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PDFPages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "draw_text"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "QuadPoints"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Rect"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "draw_text",
                        "file_name": "lib/matplotlib/backends/backend_pdf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "Rect",
                        "file_name": "lib/matplotlib/backends/backend_pdf.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "draw_text"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "QuadPoints"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PDFPages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PDFFile"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Rect"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FigureCanvasPdf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "savefig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "plt.text"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "print_pdf",
                        "file_name": "lib/matplotlib/backends/backend_pdf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "draw",
                        "file_name": "lib/matplotlib/backends/backend_pdf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "text",
                        "file_name": "lib/matplotlib/backends/backend_pdf.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-3527": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatasetGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArrayGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "quantile"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArrayGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatasetGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArrayGroupBy"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatasetGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArrayGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArrayGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DatasetGroupBy"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatasetGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArrayGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DatasetGroupBy"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArrayGroupBy"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArrayGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatasetGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArrayGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DatasetGroupBy"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-12519": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "aggregate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SQLCompiler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "group by"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Offer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ServicePackage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Provider"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "distinct"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "group_by"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_queryset"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_group_by_cols"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SELECT DISTINCT \"camps_offer\".\"id"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "group_by"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "set_group_by",
                        "file_name": "django/db/models/sql/query.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "add_annotation",
                        "file_name": "django/db/models/sql/query.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "camps_offer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "camps_bookingoption"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "camps_servicepackage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "camps_region"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "camps_provider"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_queryset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "group_by"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "group_by",
                        "file_name": "django/db/models/sql/compiler.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "annotate",
                        "file_name": "django/db/models/sql/query.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-12656": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "hamming_loss"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "hamming_loss"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "hamming_loss"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "labels parameter in hamming_loss"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "len(labels)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "hamming_loss"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "labels"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "y_true.shape[1]"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "hamming_loss"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "len(labels)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "hamming_loss"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "len(labels)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "labels parameter in hamming_loss"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-12481": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permutation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "Permutation"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__new__",
                        "file_name": "sympy/combinatorics/permutations.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "cyclic_form",
                        "file_name": "sympy/combinatorics/permutations.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permutation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "Permutation"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__new__",
                        "file_name": "sympy/combinatorics/permutations.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ValueError",
                        "file_name": "sympy/combinatorics/permutations.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permutation"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__new__",
                        "file_name": "sympy/combinatorics/permutations.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permutation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "constructor",
                        "class_name": "Permutation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ValueError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permutation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "Permutation"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__new__",
                        "file_name": "sympy/combinatorics/permutations.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_af_new",
                        "class_name": "Permutation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "cyclic_form",
                        "class_name": "Permutation"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-21849": [
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_LambertW",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Pow",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_LambertW"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_Pow"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Pow",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_LambertW",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LambertW"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_LambertW"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_Pow"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pow"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_LambertW"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_Pow"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11177": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autoreloader"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "file_changed"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Autoreloader"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "use_reloader"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "threading"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "run",
                        "file_name": "django/core/management/commands/runserver.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Autoreloader"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "file_changed"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "code_changed"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ignore interval"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "polling interval"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autoreload"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "runserver"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DOCKER"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Autoreloader"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "watch_files"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "runserver"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AUTORELOAD"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "file_changed"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Autoreloader"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "runserver"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autoreload"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inotify"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ignore"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autoreload"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "runserver"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ignore",
                        "file_name": "django/core/management/commands/runserver.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Autoreloader"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "watch_file"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_changes"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-11446": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "page_not_found"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Http404"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEBUG=False"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_template_names",
                        "class_name": "Http404"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "return HttpResponseNotFound"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "page_not_found"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEBUG=False"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponseNotFound"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEBUG=False"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponseNotFound"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "default_error_page"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "404 error page"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render_to_response"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Http404"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "page_not_found"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "default_error_view"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "settings.DEBUG"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "page_not_found"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEBUG=False"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "<h1>Not Found</h1>"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "mwaskom__seaborn-3394": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FacetGrid"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lineplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pd.concat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sns.lineplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fillna",
                        "class_name": "DataFrame"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "dropna",
                        "class_name": "DataFrame"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sns.FacetGrid"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sns.lineplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "concat"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataFrame"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pd.NA"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lineplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fillna"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dropna"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pd.concat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sns.FacetGrid"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataFrame"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fillna"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "lineplot",
                        "file_name": "seaborn/relational.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pd.NA"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "FacetGrid"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sns.lineplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pd.concat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "plt.show()",
                        "file_name": "matplotlib_integration.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-26278": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ContourSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "contourf",
                        "class_name": "pyplot"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "ContourSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "clip_path=poly"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "contourf"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ContourSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "contourf"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "contourf",
                        "file_name": "lib/matplotlib/axes/_axes.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ContourSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "contourf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_clip_path"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "clip_path"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ContourSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "contourf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pcolor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_clip_path",
                        "class_name": "ContourSet"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ContourSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "contourf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "kwargs"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16491": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "EmptyQuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "output_field = BooleanField()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "none"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotate(should_be_bool=Exists"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "annotate",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BooleanField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "NULL AS \"should_be_bool"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "QuerySet.none()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BooleanField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_sql",
                        "class_name": "Exists"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotate(should_be_bool=Exists"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "queryset.none()"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_sql",
                        "class_name": "Subquery"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-17066": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "serialize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationSerializer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelState"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "serialize",
                        "file_name": "django/db/migrations/serializer.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "from_model",
                        "file_name": "django/db/migrations/state.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationSerializer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelState"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AlterUniqueTogether"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "serialize",
                        "class_name": "AlterUniqueTogether"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unique_together={"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "serialize",
                        "class_name": "AlterTogetherOptionOperation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def serialize(self,"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unique_together"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index_together"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationSerializer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "serialize"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationSerializer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "serialize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unique_together"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index_together"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationSerializer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "serialize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unique_together"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index_together"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelState"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "serialize",
                        "class_name": "ModelState"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "psf__requests-3738": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Session"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "prepare_request",
                        "class_name": "Session"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unrecognised schemes"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_params_to_url"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "URL scheme registry"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Session"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "prepare_request",
                        "class_name": "Session"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_params_to_url",
                        "class_name": "Session"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "schemes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "urlparse"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_url"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Session"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare_request"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_params"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "schemes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "url.lower().startswith('http')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_adapter"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "url.startswith",
                        "file_name": "requests/utils.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "scheme",
                        "file_name": "requests/models.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "adapters",
                        "file_name": "requests/sessions.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Session"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare_request"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse_url"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Session"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "prepare_request",
                        "class_name": "Session"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scheme not in"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "http+unix"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "mwaskom__seaborn-2848": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PairGrid"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "scatterplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "regplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_lookup_single",
                        "file_name": "_core.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "plot",
                        "file_name": "relational.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "hue_order"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "palette"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PairGrid"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_lookup_single"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "plot",
                        "file_name": "relational.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PairGrid"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_map_bivariate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_plot_bivariate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_lookup_single",
                        "file_name": "seaborn/_core.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "scatterplot"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PairGrid"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_map_bivariate",
                        "file_name": "seaborn/axisgrid.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_plot_bivariate",
                        "file_name": "seaborn/axisgrid.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "scatterplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__call__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_lookup_single"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PairGrid"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_lookup_single",
                        "file_name": "_core.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__call__",
                        "file_name": "_core.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "scatterplot",
                        "class_name": "PairGrid"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "hue=iris[\"species\"]"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "scatterplot",
                        "file_name": "_decorators.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "scatterplot"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-9654": [
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Landsat",
                        "file_name": "torchgeo/datasets/landsat.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RasterDataset"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class RasterDataset"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Landsat"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "RasterDataset"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RasterDataset"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Landsat"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Landsat"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class RasterDataset"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RasterDataset"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Landsat"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "conf.py",
                        "file_name": "path/to/file"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Landsat"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RasterDataset"
                    },
                    "call_ok": false
                }
            ],
            [],
            []
        ],
        [],
        []
    ],
    "matplotlib__matplotlib-25479": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinearSegmentedColormap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register_cmap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_cmap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "imshow"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinearSegmentedColormap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register_cmap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_cmap"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinearSegmentedColormap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register_cmap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_cmap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "imshow",
                        "file_name": "pyplot.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_cmap"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinearSegmentedColormap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register_cmap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_cmap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "imshow"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinearSegmentedColormap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register_cmap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_cmap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "imshow",
                        "file_name": "matplotlib/pyplot.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15102": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "startproject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "open"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "chmod"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "settings.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "startproject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "startproject"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "startproject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "open("
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "startproject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "open"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.chmod"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "settings.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "Command",
                        "file_name": "django/core/management/templates.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "startproject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fp = open(main_settings_file, 'w')"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Command"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def handle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "copyfile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.makedirs"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13512": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "json.dumps"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JsonField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin.ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django-mysql"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dumps"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin.site.register"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "forms.ModelForm"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "json.dumps"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "json.dumps"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Admin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "json.dumps"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-13859": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "savefig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subplots"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "libpng"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "savefig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "figsize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "libpng"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subplots"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "savefig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Figure"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "savefig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subplots"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "libpng"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "savefig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subplots"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Figure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_size_inches",
                        "class_name": "Figure"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16532": [
        [],
        [],
        [],
        [],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Incident"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.RenameModel"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "RenameModel",
                        "file_name": "vault/migrations/0002_rename_incident_folder.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "RenameModel",
                        "file_name": "vault/migrations/*.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class Incident",
                        "file_name": "incidents/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class Incident",
                        "file_name": "vault/models.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Incident",
                        "file_name": "incidents/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Incident",
                        "file_name": "vault/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "RenameModel",
                        "file_name": "vault/migrations/"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ManyToManyField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "RenameModel"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13165": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IntegerField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AutoField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FloatField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_format"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_resolve_output_field"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Avg"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sum"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Expression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AutoField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IntegerField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_resolve_output_field"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_format"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "output_field",
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_resolve_output_field",
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "as_sql"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FieldError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_format"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "pre_sql_setup",
                        "file_name": "django/db/models/sql/compiler.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_group_by",
                        "file_name": "django/db/models/sql/compiler.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "select_format"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "output_field",
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_resolve_output_field",
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_format"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_group_by"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Expression contains mixed types"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "F"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_resolve_output_field"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_format"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "output_field"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13281": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TestCase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "Model"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_state"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fields_cache"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TestCase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "deepcopy",
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "deepcopy",
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_state.fields_cache"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ForeignKeyCachingBehaviorTest",
                        "file_name": "tests/model_fields/test_field_caching_change.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "copy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_state"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self._state"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "deepcopy"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self._state",
                        "file_name": "django/db/models/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "fields_cache",
                        "file_name": "django/db/models/base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_state.fields_cache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "deepcopy"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "_state.fields_cache",
                        "file_name": "django/db/models/query.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "_state.fields_cache",
                        "file_name": "django/db/models/fields/mixins.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-18189": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diophantine"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diophantine"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "permute=True"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diophantine"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diophantine"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "permute=True"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diophantine"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-20584": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_segments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_segments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "contour"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "contour",
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "c.collections[0]"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_segments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_segments"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "set_segments",
                        "file_name": "lib/matplotlib/collections.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_segments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_segments"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "set_segments",
                        "file_name": "lib/matplotlib/collections.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_segments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_segments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ContourSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_segments",
                        "class_name": "ContourSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_segments",
                        "class_name": "ContourSet"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "set_segments",
                        "file_name": "lib/matplotlib/collections.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_segments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_segments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "plt.contour"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "set_segments",
                        "file_name": "lib/matplotlib/collections.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12796": [
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/core/management/commands/makemigrations.py",
                        "line_no_str": "97",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "check_consistent_history",
                        "class_name": "MigrationLoader"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MakemigrationsCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/core/management/commands/makemigrations.py",
                        "line_no_str": "93",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_consistent_history"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/core/management/commands/makemigrations.py",
                        "line_no_str": "97",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "add_arguments",
                        "file_name": "django/core/management/commands/makemigrations.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "loader.check_consistent_history()",
                        "file_name": "django/core/management/commands/makemigrations.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/core/management/commands/makemigrations.py",
                        "line_no_str": "93",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "handle",
                        "file_name": "django/core/management/commands/makemigrations.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationLoader"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/core/management/commands/makemigrations.py",
                        "line_no_str": "97",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_consistent_history"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7440": [
        [],
        [],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "doc/glossary.rst",
                        "line_no_str": "234",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "make html"
                    },
                    "call_ok": true
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "doc/glossary.rst",
                        "line_no_str": "243",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "glossary",
                        "file_name": "doc/conf.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "glossary"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Sphinx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conf.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "doc/glossary.rst",
                        "line_no_str": "243",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "MySQL",
                        "file_name": "doc/glossary.rst"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "mysql",
                        "file_name": "doc/glossary.rst"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "glossary"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Sphinx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "case sensitive"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-16707": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "input_formats"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "DateField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "DateField"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "DateField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "DateField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "input_formats"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "DateField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "DateField"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "DateField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "input_formats"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "DateField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "DateField"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-15096": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "cv_results_",
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "clone",
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "clone",
                        "file_name": "GridSearchCV"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_jobs=1"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit",
                        "file_name": "sklearn/model_selection/_search.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "clone"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "n_jobs",
                        "file_name": "sklearn/model_selection/_search.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "clone"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit",
                        "file_name": "sklearn/model_selection/_search.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "n_jobs",
                        "file_name": "sklearn/model_selection/_search.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cv_results_['params']"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "BaseSearchCV",
                        "file_name": "sklearn/model_selection/_search.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_run_search",
                        "file_name": "sklearn/model_selection/_search.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "cv_results_['params']",
                        "file_name": "sklearn/model_selection/_search.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cv_results_['params']"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "clone"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-6938": [
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "if 'D' in format:",
                        "file_name": "fitsrec.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "output_field.replace",
                        "file_name": "fitsrec.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "fitsrec.py",
                        "line_no_str": "100",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "output_field.replace(encode_ascii('E'), encode_ascii('D'))",
                        "file_name": "fitsrec.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "FITS_rec",
                        "file_name": "fitsrec.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "replace",
                        "class_name": "chararray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "encode_ascii"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "output_field.replace(encode_ascii('E'), encode_ascii('D'))",
                        "file_name": "fitsrec.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "output_field.replace(encode_ascii('E'), encode_ascii('D'))"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "output_field.replace",
                        "file_name": "fitsrec.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class",
                        "file_name": "fitsrec.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test",
                        "file_name": "fitsrec.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "output_field.replace(encode_ascii('E'), encode_ascii('D'))",
                        "file_name": "fitsrec.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "fitsrec",
                        "file_name": "fitsrec.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-26122": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "imshow"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_aspect",
                        "class_name": "Axes"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "set_aspect",
                        "file_name": "lib/matplotlib/axes/_base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "imshow"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "aspect=None"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "transform != ax.transData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rcParams[\"image.aspect\"]"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "imshow"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "aspect=None"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "transform != ax.transData"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "imshow"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "aspect=None"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "transform != ax.transData"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "imshow"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "aspect=None"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "transform != ax.transData"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-12469": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "date_hierarchy",
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "timezone"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "changelist_view",
                        "file_name": "django/contrib/admin/options.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "date_hierarchy",
                        "file_name": "django/contrib/admin/options.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_changelist"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_queryset",
                        "file_name": "django/contrib/admin/views/main.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_next_by_date"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_prev_by_date"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateHierarchyListFilter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tzinfo"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "date_hierarchy"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateHierarchyFilter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_date_range"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "timezone.now()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SimpleListFilter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateFieldListFilter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_timezone"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "timezone.now()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "date_hierarchy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "date_hierarchy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "timedelta"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_previous_month",
                        "class_name": "DateFieldListFilter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_next_month",
                        "class_name": "DateFieldListFilter"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DateHierarchyFilter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "date_hierarchy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "timezone"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_previous_month"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_timezone"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-19637": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "kernS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "kernS"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from sympy.core.sympify import kernS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "kernS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "expr = kernS(text)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "kernS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "kern"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "kernS",
                        "file_name": "sympy/core/sympify.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "kernS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "kernS",
                        "file_name": "sympy/core/sympify.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "kern",
                        "file_name": "sympy/core/sympify.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "kernS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from sympy.core.sympify import kernS",
                        "file_name": "sympy/core/sympify.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-22934": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QQ"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "frac_field"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "QQ.frac_field"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "frac_field"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QQ"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QQ"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "frac_field"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "frac_field",
                        "file_name": "sympy/polys/domains/domain.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "frac_field",
                        "file_name": "sympy/polys/domains/quotientring.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FracField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "frac_field"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "frac_field"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "QQ.frac_field(1/x)"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "frac_field",
                        "file_name": "sympy/polys/domains/domain.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "frac_field",
                        "file_name": "sympy/polys/domains/quotientring.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11163": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "model_to_dict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if fields and f.name not in fields:"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "model_to_dict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if fields and f.name not in fields:"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if fields is not None and f.name not in fields:"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "model_to_dict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if fields and f.name not in fields:"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "model_to_dict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if fields and f.name not in fields:"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "model_to_dict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if fields and f.name not in fields:"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-17821": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Catalan"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rewrite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LaTeX"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Catalan"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "rewrite",
                        "class_name": "Catalan"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex_printer"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Catalan"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "rewrite",
                        "class_name": "Catalan"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rewrite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Catalan"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "rewrite",
                        "class_name": "Catalan"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LaTeX"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Catalan"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "rewrite",
                        "class_name": "Catalan"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-13469": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__array__",
                        "class_name": "Table"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__array__",
                        "class_name": "Table"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__array__"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__array__",
                        "file_name": "astropy/table/table.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__array__",
                        "class_name": "Table"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__array__"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11292": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "skip_checks"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_arguments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_arguments",
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "skip_checks"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_arguments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "skip_checks"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_arguments",
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_arguments(parser)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "skip_checks"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-20322": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ceiling"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ceiling"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ceiling"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ceiling"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "evaluate=False"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "evaluate=True"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ceiling"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-21567": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_trig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "expand_trig(csc"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "expand_trig(sec"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "csch"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "sech"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_trig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "csch"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sech"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "csc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sec"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_trig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "csch"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "sech"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_trig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "expand_trig(csch"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "expand_trig(sech"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "expand_trig(csc"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "expand_trig(sec"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Csch"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sech"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Csc"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sec"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "expand",
                        "file_name": "sympy/core/function.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_trig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TrigonometricFunction"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "csch"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sech"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "hyperbolic"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-24912": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_process_contour_level_args"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "contour"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ContourSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_process_contour_level_args"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.levels > self.zmin) & (self.levels < self.zmax"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.levels = [self.zmin]"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_process_contour_level_args"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inside = (self.levels > self.zmin) & (self.levels < self.zmax)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Contour"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_process_contour_level_args"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if not self.filled:"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.levels > self.zmin"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_process_contour_level_args"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "contour"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inside = (self.levels > self.zmin) & (self.levels < self.zmax)"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-26101": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "plot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mathtext"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "markersize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "alignment"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "plot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "markersize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mathtext"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "plot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "markersize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mathtext"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "plot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mathtext"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "alignment"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Text"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MarkerStyle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "draw_marker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_marker"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-25425": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesImage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_size",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_shape",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_ImageBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self._A",
                        "file_name": "lib/matplotlib/image.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesImage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_size",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self._A.shape"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "lib/matplotlib/image.py",
                        "line_no_str": "1",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__str__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "size"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "AxesImage",
                        "file_name": "lib/matplotlib/image.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesImage"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_size",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self._A.shape",
                        "file_name": "lib/matplotlib/image.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesImage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_size"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesImage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_size",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_shape",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self._A.shape"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self._A.shape",
                        "file_name": "lib/matplotlib/image.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "mwaskom__seaborn-2389": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_preprocess_colors"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "colors = colors.fillna('white')"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_preprocess_colors"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "colors = colors.fillna('white')"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_preprocess_colors"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "colors = colors.fillna('white')"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_preprocess_colors"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "colors = colors.fillna('white')"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "preprocess_colors"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "colors = colors.fillna('white')"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13199": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponseBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delete_cookie"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SESSION_COOKIE_SAMESITE"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SESSION_COOKIE_SECURE"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SESSION_COOKIE_HTTPONLY"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delete_cookie"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponseBase"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete_cookie",
                        "class_name": "HttpResponse"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SESSION_COOKIE_SAMESITE"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SESSION_COOKIE_SECURE"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SESSION_COOKIE_HTTPONLY"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponseBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete_cookie",
                        "class_name": "HttpResponseBase"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponseBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delete_cookie"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_cookie"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponseBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delete_cookie"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-14096": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SkyCoord"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getattr__",
                        "class_name": "SkyCoord"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SkyCoord"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getattr__",
                        "class_name": "SkyCoord"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SkyCoord"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getattr__",
                        "class_name": "SkyCoord"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class custom_coord(coord.SkyCoord):"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SkyCoord"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__getattr__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class custom_coord(coord.SkyCoord):"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SkyCoord"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getattr__",
                        "class_name": "SkyCoord"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14313": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Post"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "User"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "PostAdmin",
                        "file_name": "admin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete_queryset",
                        "class_name": "PostAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "distinct()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "changelist_view",
                        "class_name": "PostAdmin"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Post",
                        "file_name": "models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "User",
                        "file_name": "models.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "PostAdmin",
                        "file_name": "admin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete_queryset",
                        "class_name": "PostAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "response_action"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "changelist_view"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".distinct()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Post",
                        "file_name": "models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "User",
                        "file_name": "models.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "PostAdmin",
                        "file_name": "admin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete_queryset",
                        "class_name": "PostAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delete"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "search_fields = (\"title\", \"authors__email\")"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Post"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PostAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "delete",
                        "file_name": "django/db/models/query.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".distinct()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Post"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "User"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "PostAdmin",
                        "file_name": "admin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete_queryset",
                        "class_name": "PostAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "queryset.delete()",
                        "file_name": "admin.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Post"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "User"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "PostAdmin",
                        "file_name": "admin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete_queryset",
                        "class_name": "PostAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delete_selected"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "changelist_view",
                        "class_name": "PostAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_queryset"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Post(models.Model)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "search_fields = ('title', 'authors__email')"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".distinct()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Admin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delete"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "delete()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete",
                        "class_name": "Admin"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-10914": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FileSystemStorage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FileUploadHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MemoryUploadedFile"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TemporaryUploadedFile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tempfile.NamedTemporaryFile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.rename"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FileSystemStorage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tempfile.NamedTemporaryFile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.rename"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FILE_UPLOAD_PERMISSIONS"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FILE_UPLOAD_PERMISSIONS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MemoryUploadedFile"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TemporaryUploadedFile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tempfile.NamedTemporaryFile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.rename"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FileSystemStorage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FILE_UPLOAD_PERMISSIONS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MemoryUploadedFile"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TemporaryUploadedFile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tempfile.NamedTemporaryFile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.rename"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FileSystemStorage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "save"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tempfile.NamedTemporaryFile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.rename"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-4098": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "groupby"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "groupby(.*name=None.*)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_groupby_cls",
                        "file_name": "xarray/core/common.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "xarray/core/common.py",
                        "line_no_str": "630",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "groupby"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "groupby"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "groupby"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def groupby"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "groupby"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "groupby"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def groupby"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12049": [
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "MigrationExecutor",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_table_description",
                        "file_name": "django/db/backends/base/introspection.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.AddField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.ForeignKey"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "introspection.get_table_description",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_table_description"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_table_description",
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.connection.introspection.get_table_description(self.connection.cursor(), table)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "column_names = [",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "if field.column not in column_names:",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_table_description",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "MigrationExecutor",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Executor",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_table_description",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "if field.column not in column_names:",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "mwaskom__seaborn-3216": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Subfigure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "_core/subplots.py",
                        "line_no_str": "186",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "figure = target.figure",
                        "file_name": "_core/subplots.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "_core/subplots.py",
                        "line_no_str": "186",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "_core/subplots.py",
                        "line_no_str": "186",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Plot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "figure = target.figure",
                        "file_name": "_core/subplots.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "_core/subplots.py",
                        "line_no_str": "186",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "figure = target.figure",
                        "file_name": "_core/subplots.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Plot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bars"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13212": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ValidationError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validators"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_email"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ValidationError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validators"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ValidationError"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ValidationError",
                        "file_name": "django/forms/fields.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ValidationError",
                        "file_name": "django/db/models/fields/__init__.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ValidationError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ValidationError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "format_message"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "raise ValidationError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ValidationError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_email"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validators=["
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class BaseValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "raise ValidationError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ValidationError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validators"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def validate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ValidationError("
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-21931": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Partition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permutation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "Partition"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Partition"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "Permutation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Permutation"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Partition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "Partition"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Partition"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FiniteSet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Partition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "Partition"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Partition"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permutation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FiniteSet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Partition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permutation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "Partition"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Partition"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Partition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "Partition"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Partition"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "FiniteSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "FiniteSet"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "Set"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Set"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-12091": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpRequest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "is_ajax",
                        "class_name": "HttpRequest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "X-Requested-With"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Accept header"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpRequest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "is_ajax",
                        "class_name": "HttpRequest"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpRequest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "is_ajax",
                        "class_name": "HttpRequest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "X-Requested-With"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Accept"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpRequest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "is_ajax",
                        "class_name": "HttpRequest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "is_ajax"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpRequest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "is_ajax",
                        "class_name": "HttpRequest"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13641": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "input='filename'"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "__init__",
                        "file_name": "sklearn/feature_extraction/text.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit",
                        "file_name": "sklearn/feature_extraction/text.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__init__",
                        "file_name": "sklearn/feature_extraction/text.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "input='filename'"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "build_analyzer",
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "input='filename'"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "_validate_params",
                        "file_name": "sklearn/feature_extraction/text.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "CountVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "input='filename'"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-8291": [
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "BaseException",
                        "file_name": "src/pheres/exceptions.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "attr.s(",
                        "file_name": "src/pheres/exceptions.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "dataclass(",
                        "file_name": "src/pheres/exceptions.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "napoleon",
                        "file_name": "docs/conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "autodoc",
                        "file_name": "docs/conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "attr.s(auto_attribs=True)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "attr.ib()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@dataclass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def setup(app):"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "",
                        "file_name": "src/pheres/exceptions.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "napoleon",
                        "file_name": "doc/conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "autodoc",
                        "file_name": "doc/conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def setup(app):",
                        "file_name": "doc/conf.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extensions = [",
                        "file_name": "conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "napoleon_use_ivar = True",
                        "file_name": "conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "PheresBaseException",
                        "file_name": "exceptions.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "sphinx.ext.napoleon",
                        "file_name": "conf.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "napoleon",
                        "file_name": "docs/conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "attr.s(",
                        "file_name": "src/pheres/exceptions.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "@dataclass",
                        "file_name": "src/pheres/exceptions.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": ":type",
                        "file_name": "src/pheres/exceptions.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "napoleon"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "attr.s("
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@dataclass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":type"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "napoleon",
                        "file_name": "docs/conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "autodoc",
                        "file_name": "docs/conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "PheresBaseException",
                        "file_name": "src/pheres/exceptions.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "napoleon"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autodoc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "attr.s"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type hints"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15521": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DjangoTranslation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_locale"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "makemessages"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_locale"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "makemessages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "invalid locale nl_NL-x-informal, did you mean"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemessages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_locale"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "locale_name.replace"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Django"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemessages"
                    },
                    "call_ok": false
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_locale"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "makemessages"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "locale =",
                        "file_name": "django/core/management/commands/makemessages.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "validate_locale",
                        "file_name": "django/core/management/commands/makemessages.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_locale"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemessages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "invalid locale"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_locale"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "makemessages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "invalid locale",
                        "file_name": "makemessages"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-12517": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIRequestHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIServer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ServerFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%(asctime)s"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%(server_time)s"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIRequestHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIServer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "log_date_time_string"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "log_date_time_string",
                        "class_name": "WSGIRequestHandler"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "log_date_time_string",
                        "class_name": "WSGIServer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%(asctime)s"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%(server_time)s"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ServerFormatter.format"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIRequestHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIServer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "runserver logging configuration"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "BaseHTTPServer.log_date_time_string"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "format"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "formatTime"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%(asctime)s"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%(server_time)s"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIRequestHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIServer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ServerFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%(server_time)s"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%(asctime)s"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIRequestHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIServer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "log_date_time_string"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "datefmt"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%(asctime)s"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%(server_time)s"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "log_date_time_string",
                        "class_name": "WSGIRequestHandler"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "log_date_time_string",
                        "class_name": "WSGIServer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "logger",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "logging configuration Django"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-12585": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "clone",
                        "file_name": "sklearn/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_params"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "clone"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_params"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseEstimator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "clone"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def clone(estimator, safe=True):"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "get_params()",
                        "file_name": "base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "clone",
                        "file_name": "lib/site-packages/sklearn/base.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_params"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "clone"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/base.py",
                        "line_no_str": "62",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16578": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "super().__init__"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-18137": [
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "intersect",
                        "class_name": "Set"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "intersect",
                        "class_name": "Range"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "intersect",
                        "class_name": "FiniteSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_contains",
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__nonzero__",
                        "class_name": "Relational"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__bool__",
                        "class_name": "Relational"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fuzzy_and"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "intersect",
                        "class_name": "Range"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cannot determine truth value of Relational"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "intersect",
                        "class_name": "Range"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_contains",
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "intersect",
                        "class_name": "FiniteSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_contains",
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__bool__",
                        "class_name": "Relational"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__nonzero__",
                        "class_name": "Relational"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "raise TypeError(\"cannot determine truth value of Relational\")"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_contains",
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fuzzy_and"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "contains",
                        "class_name": "FiniteSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Relational"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__nonzero__",
                        "class_name": "Relational"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__bool__",
                        "class_name": "Relational"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "intersect",
                        "class_name": "Range"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify_intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_handle_finite_sets"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fuzzy_and"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_contains"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16041": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "empty_form",
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "empty_form",
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "modelformset_factory"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_prefix",
                        "class_name": "BaseForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "Form"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_construct_form",
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "empty_form",
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "empty_permitted"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "modelformset_factory"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "empty_form",
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "{{ formset.empty_form }}"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-12009": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute_from_command_line"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "entry_points={'console_scripts': ['django-admin = django.core.management:execute_from_command_line',]}"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scripts=['django/bin/django-admin.py']"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "entry_points={'console_scripts':",
                        "file_name": "setup.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "scripts=['django/bin/django-admin.py']",
                        "file_name": "setup.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute_from_command_line"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scripts=['django/bin/django-admin.py']"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "entry_points={'console_scripts': ['django-admin = django.core.management:execute_from_command_line',]}"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute_from_command_line"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scripts=['django/bin/django-admin.py']"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "entry_points={'console_scripts': ['django-admin = django.core.management:execute_from_command_line']}"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "entry_points={'console_scripts':"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scripts=['django/bin/django-admin.py']"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute_from_command_line"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "management"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "execute_from_command_line"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scripts=['django/bin/django-admin.py']"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "entry_points={'console_scripts': ['django-admin = django.core.management:execute_from_command_line',]}"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "execute_from_command_line",
                        "class_name": "management"
                    },
                    "call_ok": false
                }
            ],
            [],
            []
        ]
    ],
    "django__django-11612": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "apply_migration",
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "create_model",
                        "class_name": "DatabaseSchemaEditor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_remake_table",
                        "class_name": "DatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CREATE TABLE"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_field",
                        "class_name": "DatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_remake_table",
                        "class_name": "DatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply_migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute_from_command_line"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CREATE TABLE"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "apply_migration",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_remake_table",
                        "file_name": "django/db/backends/sqlite3/schema.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "create_model",
                        "file_name": "django/db/backends/sqlite3/schema.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "db_table"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SchemaEditor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "apply_migration",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "create_model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_remake_table",
                        "class_name": "SchemaEditor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "create_model",
                        "class_name": "SchemaEditor"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply_migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "SchemaEditor",
                        "file_name": "django/db/backends/sqlite3/schema.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_remake_table",
                        "class_name": "SchemaEditor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "create_model",
                        "class_name": "SchemaEditor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "'CREATE TABLE '"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SchemaEditor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "OperationalError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "CREATE TABLE",
                        "file_name": "django/db/backends/sqlite3/schema.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            []
        ]
    ],
    "sympy__sympy-13615": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Complement"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Interval"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_complement",
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_complement",
                        "class_name": "Interval"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Interval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Complement"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_complement",
                        "file_name": "sympy/sets/sets.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def Complement(",
                        "file_name": "sympy/sets/sets.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Complement"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Interval"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Interval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Complement"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_complement",
                        "file_name": "sympy/sets/sets.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Interval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Complement"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_complement",
                        "file_name": "sympy/sets/sets.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13017": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_transformers",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_column_callables",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_iter",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_column_transformer",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ColumnTransformer([('ohe', ohe, [-1])], remainder='passthrough')"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_column_callables",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_iter",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "column indexes"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_fit_transform",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_column_callables",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ColumnTransformer([('ohe', ohe, [-1])], remainder='passthrough')"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_column_callables",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_transformers",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_fit_transform",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15629": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ShortUUIDField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Account"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Address"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Profile"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "makemigrations",
                        "class_name": "MigrationSystem"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "db_collation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.OneToOneField"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Account"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Address"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Profile"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ALTER TABLE `b_manage_account` MODIFY `id` varchar(22) COLLATE `utf8_bin`;"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ALTER TABLE `b_manage_address` ADD CONSTRAINT `b_manage_address_account_id_7de0ae37_fk`"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ALTER TABLE `b_manage_profile` ADD CONSTRAINT `b_manage_profile_account_id_ec864dcc_fk`"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ShortUUIDField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "migrate"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "MigrationAutodetector",
                        "file_name": "django/db/migrations/autodetector.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "deconstruct"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Account"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Address"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Profile"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "db_collation='utf8_bin'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ShortUUIDField"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.Model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Meta"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DATABASES"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Account"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Address"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Profile"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ShortUUIDField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sqlmigrate"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "db_collation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ForeignKey"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Account"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Address"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Profile"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "db_collation"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "db_collation",
                        "file_name": "django/db/models/fields/__init__.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-10191": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LaTeXBuilder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write_footnotes"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "footnote"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "footnote"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latexpdf"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "footnote"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Footnote"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LaTeXBuilder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "LaTeXBuilder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_footnote_reference"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex_visit_footnote_reference"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "footnote"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rst"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latexpdf"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "footnote"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rst"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-4802": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode_cf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode_cf_variable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scale_factor = scale_factor.item()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode_cf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decode_cf_variables",
                        "file_name": "xarray/conventions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decode_cf_variable",
                        "file_name": "xarray/conventions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "CFScaleOffsetCoder",
                        "file_name": "xarray/coding/variables.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scale_factor = scale_factor.item()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_offset = add_offset.item()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode_cf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode_cf_variables"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode_cf_variable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "decode",
                        "class_name": "CFScaleOffsetCoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scale_factor = scale_factor.item()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_offset = add_offset.item()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decode_cf",
                        "file_name": "conventions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decode_cf_variables",
                        "file_name": "conventions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decode_cf_variable",
                        "file_name": "conventions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decode",
                        "file_name": "variables.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode_cf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CFScaleOffsetCoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scale_factor = scale_factor.item()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_offset = add_offset.item()"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16502": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "runserver"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIServer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "finalize_response",
                        "class_name": "WSGIServer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "send_response",
                        "class_name": "WSGIServer"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "handle_request",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "process_request",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "environ['REQUEST_METHOD']",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "start_response",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIServer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle_request",
                        "class_name": "WSGIServer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "request.method == 'HEAD'"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "process_request",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "finish_response",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "BaseHTTPRequestHandler",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "runserver"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "return response"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIServer"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "handle",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle_request",
                        "class_name": "WSGIServer"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIServer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_request"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "handle",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_response",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "handle_one_request",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIServer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_request"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13174": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoost"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "AdaBoost"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "predict",
                        "class_name": "AdaBoost"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "base estimator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RandomForest"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoosting"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "AdaBoostClassifier",
                        "file_name": "sklearn/ensemble/weight_boosting.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "fit",
                        "file_name": "sklearn/ensemble/weight_boosting.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "predict",
                        "file_name": "sklearn/ensemble/weight_boosting.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "BaseEstimator",
                        "file_name": "sklearn/base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoostRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "AdaBoostRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_X_y"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoostRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "AdaBoostRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check_array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_X_y"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoost"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "AdaBoost"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "predict_proba",
                        "class_name": "AdaBoost"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "predict",
                        "class_name": "AdaBoost"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Ensemble"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validate_X"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoostRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict_proba"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13744": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "memcached.MemcachedCache"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pymemcache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DeprecationWarning"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@deprecated"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "RemovedInDjango41Warning"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "RemovedInDjango41Warning"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "deprecate"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MemcachedCache"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-23534": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "symbols"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Symbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Function"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "symbols"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Symbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Function"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "smp.symbols"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "symbols"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Symbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Function"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "symbols",
                        "file_name": "sympy/core/symbol.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def __new__(cls, *args, **options)",
                        "file_name": "sympy/core/function.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "symbols"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Function"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "symbols(('q:2', 'u:2'), cls=Function)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "symbols",
                        "file_name": "sympy/core/symbol.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "cls=Function",
                        "file_name": "sympy/core/symbol.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "symbols"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Function"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "smp.symbols(('q:2', 'u:2'), cls=smp.Function)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "symbols",
                        "file_name": "sympy/core/symbol.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15342": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelState"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_field",
                        "class_name": "ModelState"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "generate_altered_fields",
                        "file_name": "/django/db/migrations/autodetector.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelState"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_altered_fields"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_field",
                        "class_name": "ModelState"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelState"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_field",
                        "class_name": "ModelState"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AutoDetector"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_order"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelState"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "'_order'"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "'order_with_respect_to'"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelState"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_field",
                        "class_name": "ModelState"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "generate_altered_fields",
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-5682": [
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "plot",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "xlabel"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "long_name"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "xlabel",
                        "file_name": "xarray/plot/plot.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "long_name",
                        "file_name": "xarray/plot/utils.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "matplotlib"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "plot",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "xlabel"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Plot"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "xlabel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_xlabel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "plot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "long_name"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "long_name",
                        "file_name": "xarray/plot/utils.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "plot",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "long_name"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_PlotMethods"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "long_name",
                        "file_name": "xarray/plot/utils.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "plot"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "long_name"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "xlabel"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-4182": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Variable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_repr_html_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dask array"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Variable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_repr_html_",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_repr_html_",
                        "class_name": "Variable"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dask array repr"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Variable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_repr_html_",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_repr_html_",
                        "class_name": "Variable"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "expandable section"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_repr_html_"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Variable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_repr_html_"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_repr_html_",
                        "file_name": "xarray/core/common.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_repr_html_",
                        "file_name": "xarray/core/dataset.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "formatting_html.array_repr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "formatting_html.dataset_repr"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Variable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_repr_html_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "html template"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dask array representation"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_repr_html_",
                        "file_name": "xarray/core/common.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_repr_html_",
                        "file_name": "xarray/core/dataset.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "array_repr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dataset_repr"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13821": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLite version check"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "3.9.0"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indexes on expressions"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLITE_ENABLE_JSON1"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLite database initialization"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "database configuration"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "database version"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLite utility"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLite version check"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLITE_ENABLE_JSON1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indexes on expressions"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_sqlite_version"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseUtility"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "initialize database"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "establish connection"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "is_feature_supported"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_database_compatibility"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DATABASES"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "db_config"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLITE_ENABLE_JSON1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Indexes on expressions"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_sqlite_version"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqlite_version"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqlite_version"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLITE_VERSION"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLITE_ENABLE_JSON1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indexes on expressions"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_sqlite_version"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLITE_VERSION"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "minimum version"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "database_connection"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_database_compatibility"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqlite3"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "database backend"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-26291": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inset_axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AnchoredLocatorBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_window_extent",
                        "class_name": "OffsetBox"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fig.canvas.print_figure"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OffsetBox"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inset_axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__call__",
                        "class_name": "AnchoredLocatorBase"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AnchoredLocatorBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__call__",
                        "class_name": "AnchoredLocatorBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OffsetBox"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_window_extent",
                        "class_name": "OffsetBox"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.figure._get_renderer()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inset_axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AnchoredLocatorBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_window_extent",
                        "class_name": "OffsetBox"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.figure._get_renderer()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inset_axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AnchoredLocatorBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__call__",
                        "class_name": "AnchoredLocatorBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_window_extent",
                        "class_name": "AnchoredLocatorBase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OffsetBox"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_window_extent",
                        "class_name": "OffsetBox"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_get_renderer",
                        "class_name": "OffsetBox"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pydata__xarray-4819": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "drop_sel",
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "drop_isel"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "drop_sel",
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "drop_isel"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "drop_sel"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "isel"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "drop_sel",
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "isel",
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "drop_isel"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "drop_sel"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16037": [
        [],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PostManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fetch_all_posts",
                        "class_name": "PostManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Post"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Comment"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "User"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "save"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotate"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotate(likes=Count(\"liked_by\"))"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Exists"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PostManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Post"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fetch_all_posts",
                        "class_name": "PostManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Count("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Exists("
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "annotate(likes=Count(",
                        "file_name": "models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "annotate(liked_by_user=Exists(",
                        "file_name": "models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class PostManager",
                        "file_name": "models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class Post(",
                        "file_name": "models.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "class_name"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "method_name"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "QuerySet.annotate("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotate(Count("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotate(*Exists("
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.Manager"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class *(models.Model):"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "QuerySet.annotate()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Count()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Exists()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sub-select returns 13 columns - expected 1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "subquery must return only one column"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PostManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fetch_all_posts",
                        "class_name": "PostManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotate(likes=Count(\"liked_by\"))"
                    },
                    "call_ok": false
                }
            ],
            [],
            []
        ]
    ],
    "sympy__sympy-13971": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SeqFormula"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "SeqFormula"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_repr_latex_",
                        "class_name": "SeqFormula"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SeqExpr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_repr_latex_"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SeqBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LaTeX rendering mechanisms in SymPy"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SeqBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_latex",
                        "class_name": "SeqBase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_latex",
                        "class_name": "SeqFormula"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "latex",
                        "file_name": "path/to/printing/directory"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SeqFormula"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "SeqFormula"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_repr_latex_",
                        "class_name": "SeqFormula"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SeqFormula"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SeqFormula"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "SeqFormula"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "SeqFormula"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_latex",
                        "class_name": "SeqFormula"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SeqFormula"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SeqFormula"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_repr_latex_",
                        "class_name": "SeqFormula"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SeqExpr"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SeqFormula"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_latex",
                        "class_name": "SeqFormula"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_repr_latex_",
                        "class_name": "SeqFormula"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "SeqExpr",
                        "file_name": "sympy/series/sequences.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_latex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "latex",
                        "file_name": "sympy/printing/latex.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-16493": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "replace_with_arrays"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def replace_with_arrays"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": ".replace_with_arrays"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".replace_with_arrays"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Array"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": ".replace_with_arrays",
                        "file_name": "sympy/tensor/tensor.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/tensor/tensor.py",
                        "line_no_str": "1",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "replace_with_arrays",
                        "class_name": "tensor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/tensor/tensor.py",
                        "line_no_str": "0",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "replace_with_arrays"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "replace_with_arrays"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14500": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "unapply_migration",
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "squashed migration"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "unapply_migration",
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mark_migration_applied"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "squashed migration"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "record_unapplied",
                        "class_name": "MigrationRecorder"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "unapply_migration",
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "apply_migration",
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "squashed migration"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mark",
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "squashed migration"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "unapply_migration",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "squashed migration",
                        "file_name": "django/db/migrations/loader.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply_migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "unapply_migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "squashed"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15248": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pre_delete"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "post_delete"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delete"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "receiver"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "post_delete.connect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pre_delete.connect"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Signal"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DeleteSignal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delete"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "queryset.delete"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "delete source"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "origin of delete"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "delete",
                        "file_name": "django/db/models/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "delete",
                        "file_name": "django/db/models/query.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delete"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pre_delete"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "post_delete"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pre_delete"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "post_delete"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delete"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Model"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delete"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "send_pre_delete_signal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "send_post_delete_signal"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pre_delete.send"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "post_delete.send"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-8119": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "F()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QueryBuilder"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "F("
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "F"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "compile_expression",
                        "class_name": "F"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".filter("
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "F"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lower"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "query syntax extensions"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-24723": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixNormal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "density",
                        "class_name": "MatrixNormal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "density(M)(X).doit()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixNormal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "density",
                        "class_name": "MatrixNormal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "doit",
                        "class_name": "MatrixNormal"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixNormal"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "density"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "doit"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixNormal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "density"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "pdf",
                        "class_name": "MatrixNormal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "2\u212f"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "2\u03c0"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "MatrixNormal",
                        "file_name": "sympy/stats/random_matrix_models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "density",
                        "file_name": "sympy/stats/random_matrix_models.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pi"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixNormal"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "density",
                        "file_name": "sympy/stats/crv.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "density",
                        "file_name": "sympy/stats/rv.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pdf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixDistributions"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixNormal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "density",
                        "class_name": "MatrixNormal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "density(M)(X).doit()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixNormal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "density",
                        "class_name": "MatrixNormal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "MatrixNormal"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "density"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "probability density function"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "MatrixNormal",
                        "file_name": "sympy/stats/random_matrix_models.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixDistribution"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixNormal"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-16906": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OneMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ZeroMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Identity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pretty_print"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mathml"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "str"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OneMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ZeroMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Identity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "str printer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pretty printer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MathML presentation printer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unicode double struck characters"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MathML"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "unicode",
                        "file_name": "sympy/printing/pretty.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OneMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ZeroMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Identity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "str",
                        "class_name": "OneMatrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Str",
                        "class_name": "OneMatrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "pretty",
                        "class_name": "OneMatrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Pretty",
                        "class_name": "OneMatrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mathml",
                        "class_name": "OneMatrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_MathML",
                        "class_name": "OneMatrix"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OneMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pretty"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "str"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "MathML"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ZeroMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Identity"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OneMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ZeroMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Identity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pretty"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mathml"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-12842": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "read",
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "astropy/io/ascii/ecsv.py",
                        "line_no_str": "177",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_cols",
                        "file_name": "astropy/io/ascii/ecsv.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "read",
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "astropy/io/ascii/ecsv.py",
                        "line_no_str": "177",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "read",
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "ecsv.py",
                        "line_no_str": "177",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "read",
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "is not in allowed values ('bool', 'int8', 'int16', 'int32', 'int64', 'uint8', 'uint16', 'uint32', 'uint64', 'float16', 'float32', 'float64', 'float128', 'string')"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ECSV_DATATYPES"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unexpected datatype"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class EcsvHeader",
                        "file_name": "io/ascii/ecsv.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def get_cols(self, lines):",
                        "file_name": "io/ascii/ecsv.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "read",
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-12910": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requires_system_checks = True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "options['skip_checks']"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requires_system_checks = True"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requires_system_checks"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": "Command"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requires_system_checks = True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "system check framework"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requires_system_checks = True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "system checks"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15738": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Authors"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ProjectDataSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unique_together"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Authors",
                        "file_name": "models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ProjectDataSet",
                        "file_name": "models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ForeignKey",
                        "file_name": "models.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ManyToManyField",
                        "file_name": "models.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "migrations.AlterUniqueTogether",
                        "file_name": "migrations/"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "migrations.AlterField",
                        "file_name": "migrations/"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "makemigrations",
                        "file_name": "/manage.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [],
        [],
        [],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Authors"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Project"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ProjectDataSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "migrate"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Authors project_data_set ManyToManyField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unique_together"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class Authors",
                        "file_name": "models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class ProjectDataSet",
                        "file_name": "models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Migration plan forwards backwards"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-15324": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UploadFileForm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "request.FILES"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "temporary file upload"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FileField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "create temporary file"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UploadFileForm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tempfile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "splitext"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filename validation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "extension validation"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UploadFileForm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "temporary file"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "temporary file",
                        "file_name": "django/core/files/uploadhandler.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "temporary file",
                        "file_name": "django/core/files/temp.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UploadFileForm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "forms.FileField()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tempfile"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UploadFileForm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "request.FILES"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "request.FILES",
                        "file_name": "django/views/generic/edit.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "request.FILES",
                        "file_name": "django/contrib/admin/options.py"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FileField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ImageField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Form"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "request.FILES"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-10924": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FilePathField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "deconstruct",
                        "class_name": "FilePathField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "FilePathField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.path.join(settings.LOCAL_FILE_DIR"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FilePathField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "FilePathField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__set__",
                        "class_name": "FilePathField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.FilePathField(path="
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FilePathField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FilePathField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FilePathField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "deconstruct",
                        "class_name": "FilePathField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FilePathField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "deconstruct"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-18057": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Expr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "Expr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_expr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "expr = eval("
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Symbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_expr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "eval_expr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "eval"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Symbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parse_expr",
                        "file_name": "sympy/parsing/sympy_parser.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "eval("
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "Symbol"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_expr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "eval_expr"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "Symbol"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parse_expr",
                        "file_name": "sympy/parsing/sympy_parser.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "eval_expr",
                        "file_name": "sympy/parsing/sympy_parser.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14124": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_check_custom_error_handlers"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "is class-based view"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "as_view"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_check_custom_error_handlers"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "as_view"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "handler500 ="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_check_custom_error_handlers"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "as_view"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyView"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_check_custom_error_handlers"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_check_custom_error_handlers",
                        "file_name": "django/urls/resolver.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "View"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16879": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Subquery"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OuterRef"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Sum"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Case"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "When"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotated_users = users_qs.annotate("
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotated_users.aggregate("
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def test_referenced_group_by_aggregation_over_annotation(self):"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "aggregate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FieldError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Subquery"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sum"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "annotate",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "aggregate",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sum"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "When"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Cannot resolve keyword into field"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "aggregate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "When"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "test_referenced_group_by_aggregation_over_annotation"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "aggregate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Subquery"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OuterRef"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "F"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sum"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "When"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Round"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7961": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathJax"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "configure_mathjax"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "init_mathjax"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MathJax.js"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mathjaxConfig"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extensions",
                        "file_name": "conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "mathjax_path",
                        "file_name": "conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "setup",
                        "file_name": "conf.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathJax"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MathJax"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "init_mathjax"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "config_mathjax"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "MathJax",
                        "file_name": "sphinx/ext/mathjax.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathJax"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MathJax"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_js_file"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathJax"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "init_mathjax"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MathJax.Hub.Config("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mathjax_path"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathJax"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MathJax"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MathJax.Hub"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MathJax.config"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pylint-dev__pylint-8757": [
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from __future__ import absolute_import",
                        "file_name": "app/codein/callback.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from __future__ import absolute_import",
                        "file_name": "app/codein/types.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "print",
                        "file_name": "app/main.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "print",
                        "file_name": "tests/test_utils.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Linter.run_jobs"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Reporter.handle_message"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Linter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "jobs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Reporter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "handle_message"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from __future__ import absolute_import"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "print statement used"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pylintrc"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [],
        [],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from __future__ import absolute_import",
                        "file_name": "app/codein/callback.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from __future__ import absolute_import",
                        "file_name": "app/codein/types.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pylintrc"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parallel processing"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "--jobs",
                        "file_name": "pylint/lint/run.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "find_default_config_files",
                        "file_name": "pylint/config/find_default_config_files.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "command-line argument parsing"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "task scheduling"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "multiprocessing"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--jobs"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parallel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute_parallel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "collect_messages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "aggregate_results"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "print_messages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sort_messages"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parallel"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "process_file"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "run_analysis_for_file"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "collect_results"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "print_results"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "multiprocessing"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "concurrent"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-15495": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DBSCAN"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseBagging"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "DBSCAN"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "BaseBagging"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_fit",
                        "class_name": "BaseBagging"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CalibratedClassifierCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DBSCAN"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DummyClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DummyRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseBagging"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseForest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseGradientBoosting"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IsotonicRegression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "KernelRidge"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GaussianNB"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDiscreteNB"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "KernelDensity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDecisionTree"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_check_sample_weight"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "DummyClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "DBSCAN"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "check_consistent_length",
                        "file_name": "<path_to_DummyClassifier_fit_method>"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "check_array",
                        "file_name": "<path_to_DummyClassifier_fit_method>"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "check_consistent_length",
                        "file_name": "<path_to_DBSCAN_fit_method>"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "check_array",
                        "file_name": "<path_to_DBSCAN_fit_method>"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CalibratedClassifierCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DBSCAN"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DummyClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseGradientBoosting"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "CalibratedClassifierCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "DBSCAN"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "DummyClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "partial_fit",
                        "class_name": "BaseGradientBoosting"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check_consistent_length(sample_weight"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check_array(sample_weight"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CalibratedClassifierCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DBSCAN"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DummyClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DummyRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseBagging"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseForest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseGradientBoosting"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IsotonicRegression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "KernelRidge"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GaussianNB"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDiscreteNB"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "KernelDensity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDecisionTree"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "CalibratedClassifierCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "partial_fit",
                        "class_name": "DBSCAN"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "DummyClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "DummyRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "BaseBagging"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "BaseForest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "BaseGradientBoosting"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "IsotonicRegression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "KernelRidge"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GaussianNB"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "BaseDiscreteNB"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "KernelDensity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "BaseDecisionTree"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15703": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index_together"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Index"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index_together ="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indexes ="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Meta:"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "index_together"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "indexes"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index_together"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Meta: indexes"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.Index"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index_together"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Meta"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indexes ="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_indexes",
                        "class_name": "Model"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_index",
                        "class_name": "Model"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index_together"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indexes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Meta:"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pylint-dev__pylint-4551": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UMLDiagram"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_class_definition"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_init_method"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__init__(self,"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "typing"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_class_definition"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "interpret_type_hint"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def __init__(self,"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ClassDiagram"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_diagram"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "Diagram"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def __init__(self"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "C"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "C"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def __init__(self, a: str = None):"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pyreverse UML generation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type hint processing"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class diagram"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "file parsing"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AST"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class pyreverse"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_classes"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_output"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pyreverse documentation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CONTRIBUTING file"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type hints"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Python 3 features"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotations"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parser",
                        "file_name": "pyreverse"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "astroid_interpreter",
                        "file_name": "pyreverse"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "astroid"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "pyreverse",
                        "file_name": "pylint/project/path"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "parse",
                        "class_name": "pyreverse"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "generate_uml_diagram",
                        "class_name": "pyreverse"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "UML"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type hints"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "UML",
                        "file_name": "pyreverse/directory"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "type hints",
                        "file_name": "pyreverse/directory"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pydata__xarray-5362": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Weighted"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "weighted"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mean"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "weighted"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "mean",
                        "file_name": "xarray/core/weighted.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "weighted"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dimension check"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "mean",
                        "file_name": "xarray/core/weighted.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "weighted"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check for dimension"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-15625": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "$$\\\\begin{equation*}"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "print_latex"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "equation*"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "$$\\x08egin{equation*}"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "$\\\\displaystyle"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LaTeXExporter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "output formatting"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "$$"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "$\\\\displaystyle"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "$$\\\\begin{equation*}"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "$$"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13012": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "GROUP BY"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ExpressionWrapper(expr, output_field=IntegerField())"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Model.objects.annotate(expr_res=expr).values('expr_res', 'column_a').annotate(sum=Sum('column_b'))"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sum"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "values"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "GROUP BY"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11543": [
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "WSGIServer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "serve_forever"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--nothreading"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "runserver --nothreading"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIServer"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "handle",
                        "file_name": "django/core/management/commands/runserver.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/core/servers/basehttp.py",
                        "line_no_str": "line_number_of_WSGIServer_init_method",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/core/servers/basehttp.py",
                        "line_no_str": "line_number_of_WSGIServer_handle_error_method",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "run",
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "WSGIServer",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__init__",
                        "file_name": "django/core/servers/basehttp.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Connection: keep-alive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--nothreading"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "runserver",
                        "file_name": "django/core/management/commands/runserver.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "use_threading",
                        "file_name": "django/core/management/commands/runserver.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__call__",
                        "class_name": "WSGIHandler"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "runserver"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "WSGIServer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--nothreading"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_request"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "runserver --nothreading"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "WSGI server configuration"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "socket"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "keep-alive"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "astropy__astropy-14628": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EarthLocation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_itrs",
                        "class_name": "EarthLocation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ITRS"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EarthLocation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_itrs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EarthLocation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_itrs",
                        "class_name": "EarthLocation"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EarthLocation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_itrs",
                        "class_name": "EarthLocation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "EARTH_CENTER"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EarthLocation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_itrs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CartesianCoordinates"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-16517": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ViewDetailView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_get_view_func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/admindocs/views.py",
                        "line_no_str": "168",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/admindocs/views.py",
                        "line_no_str": "168",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_get_view_func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ViewDetailView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class-based view registration admindocs"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ViewDetailView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_get_view_func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/admindocs/views.py",
                        "line_no_str": "168",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ViewDetailView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_get_view_func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/admindocs/views.py",
                        "line_no_str": "168",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/admindocs/views.py",
                        "line_no_str": "168",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_get_view_func",
                        "file_name": "django/contrib/admindocs/views.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-17251": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "exp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_complex"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "exp",
                        "file_name": "sympy/functions/elementary/exponential.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "simplify",
                        "file_name": "sympy/simplify/simplify.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "exp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_complex"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "exp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_complex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "periodicity"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "exp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_complex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "I*pi"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "exp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_complex"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14855": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_admin_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "response_add",
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "reverse(.*, current_app=self.model_admin.admin_site.name)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_admin_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdminSite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.contrib.admin.helpers"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "response_add",
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_admin_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "model_admin.admin_site.name"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "reverse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "response_add",
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "/admin/"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_admin_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "response_add",
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "reverse(url_name, args=[quote(remote_obj.pk)])"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "reverse(.*current_app=self.model_admin.admin_site.name.*)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_admin_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin_site.name"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "current_app=self.model_admin.admin_site.name"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13877": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_jobs="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "metric="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cosine"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "euclidean"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_jobs=-1"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_jobs>"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_jobs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_jobs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "metric='cosine'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "metric='euclidean'"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_jobs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cosine"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "euclidean"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-11148": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Logger"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "initialize"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Logger.store"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "importlib"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def initialize"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Logger"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "importlib.import_module",
                        "file_name": "src/_pytest/config/__init__.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "importlib",
                        "file_name": "testing/test_config.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Logger",
                        "file_name": "pmxbot/logging.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "initialize",
                        "file_name": "pmxbot/core.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ConfigDict.from_yaml",
                        "file_name": "tests/unit/test_commands.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Logger"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "initialize"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "importlib"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "importlib.import_module",
                        "file_name": "testing/test_config.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "import_module",
                        "file_name": "src/_pytest/pytester.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "importlib.util.find_spec",
                        "file_name": "src/_pytest/pathlib.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "importlib"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "PEP 420"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from pmxbot.logging import"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import pmxbot.logging"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "importlib"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "importlib.util.find_spec"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sys.modules"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Logger"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "initialize",
                        "class_name": "core"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Logger"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "core.initialize"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "message"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "import pmxbot.logging",
                        "file_name": "tests/unit/test_commands.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "importlib"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import pmxbot"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Logger.store"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ConfigDict.from_yaml"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Logger"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "initialize",
                        "class_name": "core"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import pmxbot.logging"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ConfigDict.from_yaml"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Logger"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def initialize"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "logging setup"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Logger"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Logger"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "store",
                        "class_name": "Logger"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "importlib"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "namespace packages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "core.initialize"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7738": [
        [],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "A",
                        "file_name": "a.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "'sphinx.ext.autodoc', 'sphinx.ext.napoleon'",
                        "file_name": "conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "napoleon"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "A"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "A",
                        "file_name": "a.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "Attributes\\n----------\\nhello_: int",
                        "file_name": "a.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "A",
                        "file_name": "a.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "Attributes\\n----------",
                        "file_name": "a.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.napoleon"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "A",
                        "file_name": "a.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extensions = ",
                        "file_name": "conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": ".. autoclass:: a.A",
                        "file_name": "index.rst"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class A:",
                        "file_name": "a.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.napoleon"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12741": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseOperations"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "execute_sql_flush",
                        "class_name": "DatabaseOperations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "execute_sql_flush(connection.alias"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseOperations"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute_sql_flush"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "execute_sql_flush"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseOperations"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "execute_sql_flush",
                        "class_name": "DatabaseOperations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "execute_sql_flush(connection.alias, sql_flush)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseOperations"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute_sql_flush"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "connection.ops.execute_sql_flush"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "execute_sql_flush",
                        "class_name": "DatabaseOperations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "execute_sql_flush"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-7019": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "chunk"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "compute"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dask.array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "blockwise"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "map_blocks"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rechunk"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dask.array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "chunk"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "compute"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "chunk",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "compute",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ArrayWrapper"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "DataArray",
                        "file_name": "xarray/core/dataarray.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "chunk",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "compute",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dask.array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "chunk"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "compute"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "map_blocks"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "blockwise"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rechunk"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dask.config"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dask.array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "chunk"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "compute"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "wrap array-like object"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "array API standard"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "array API standard",
                        "file_name": "xarray/core/dataset.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "wrap",
                        "file_name": "xarray/core/dataset.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parallel compute"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dask.array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "chunk"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "compute"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "blockwise"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "map_blocks"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rechunk"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-17271": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "frac"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/functions/elementary/integers.py",
                        "line_no_str": "311",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "zoo"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/functions/elementary/integers.py",
                        "line_no_str": "311",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Infinity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "eval",
                        "class_name": "Infinity"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "frac"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "frac",
                        "file_name": "sympy/functions/elementary/integers.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "eval",
                        "class_name": "Function"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/functions/elementary/integers.py",
                        "line_no_str": "333",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "frac"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "zoo"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/functions/elementary/integers.py",
                        "line_no_str": "311",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "frac"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "zoo"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/functions/elementary/integers.py",
                        "line_no_str": "333",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-13369": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "eigenvals",
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "charpoly",
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "roots"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "solve"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "eigenvals"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "solve(det(lam*eye(3) -M), lam)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "charpoly"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "roots(M.charpoly())"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "roots"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "eigenvals"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "roots"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "charpoly"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "solve"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "eigenvals",
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "charpoly",
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "solve"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "roots"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "eigenvals",
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "charpoly",
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "det"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "solve"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14182": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Round"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "function = 'ROUND'"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "arity",
                        "class_name": "Round"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Round"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Func"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Round"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Round(Func):\\nfunction = 'ROUND'\\narity = 2"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "as_sql",
                        "file_name": "django/db/models/expressions.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Round"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ROUND"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Round"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "function",
                        "class_name": "Round"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "arity",
                        "class_name": "Round"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-12834": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FOREST_ESTIMATORS"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FOREST_CLASSIFIERS_REGRESSORS"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ForestClassifier",
                        "file_name": "sklearn/ensemble/forest.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ForestRegressor",
                        "file_name": "sklearn/ensemble/forest.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_multioutput",
                        "file_name": "sklearn/ensemble/tests/test_forest.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FOREST_ESTIMATORS"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FOREST_CLASSIFIERS"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FOREST_CLASSIFIERS_REGRESSORS"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "predict",
                        "file_name": "sklearn/ensemble/forest.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForestClassifier"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FOREST_ESTIMATORS"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict_proba"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict_log_proba"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForestClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForestRegressor"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FOREST_ESTIMATORS"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FOREST_CLASSIFIERS"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict_proba"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict_log_proba"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "predict",
                        "file_name": "sklearn/ensemble/forest.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "predict_proba",
                        "file_name": "sklearn/ensemble/forest.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "predict_log_proba",
                        "file_name": "sklearn/ensemble/forest.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FOREST_ESTIMATORS"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FOREST_CLASSIFIERS_REGRESSORS"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict_proba"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict_log_proba"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-7352": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_pytest.tmpdir.TempPathFactory"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "getbasetemp",
                        "class_name": "_pytest.tmpdir.TempPathFactory"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "cleanup_numbered_dir",
                        "class_name": "_pytest.pathlib.Path"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_numbered_dir_with_cleanup"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "consider_lock_dead_if_created_before"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "cleanup_numbered_dir",
                        "file_name": "/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/_pytest/pathlib.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "make_numbered_dir_with_cleanup",
                        "file_name": "/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/_pytest/pathlib.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TmpPathFactory"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "getbasetemp"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "getbasetemp",
                        "file_name": "src/_pytest/tmpdir.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "make_numbered_dir",
                        "file_name": "src/_pytest/tmpdir.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": ".lock",
                        "file_name": "src/_pytest/tmpdir.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "make_numbered_dir_with_cleanup",
                        "file_name": "_pytest/pathlib.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "cleanup_numbered_dir",
                        "file_name": "_pytest/pathlib.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "prefix=\"pytest-\", root=rootdir, keep=3, lock_timeout=LOCK_TIMEOUT",
                        "file_name": "_pytest/tmpdir.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_numbered_dir_with_cleanup"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cleanup_numbered_dir"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ensure_deletable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/_pytest/pathlib.py",
                        "line_no_str": "1277",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "prefix=\"pytest-\", root=rootdir, keep=3, lock_timeout=LOCK_TIMEOUT",
                        "file_name": "/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/_pytest/tmpdir.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "make_numbered_dir_with_cleanup",
                        "file_name": "/pytest/src/_pytest/pathlib.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "cleanup_numbered_dir",
                        "file_name": "/pytest/src/_pytest/pathlib.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "ensure_deletable",
                        "file_name": "/pytest/src/_pytest/pathlib.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "/pytest/src/_pytest/pathlib.py",
                        "line_no_str": "219",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_numbered_dir_with_cleanup"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cleanup_numbered_dir"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ensure_deletable"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12121": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_reverse_with_prefix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "path('export/foo/<foo:obj>', index, name='export')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "raise ValueError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_reverse_with_prefix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "path("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ValueError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_reverse_with_prefix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "URL converters"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_url"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_reverse_with_prefix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "path"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class BaseConverter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def to_url(self, value)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def to_python(self, value)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_reverse_with_prefix"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pylint-dev__pylint-6386": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_argument('--verbose')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_argument('-v'"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cli.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "commandline.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import argparse"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "verbose option"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "argparse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "-v"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--verbose"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ArgumentParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_argument('--verbose'"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "-v",
                        "file_name": "pylint/config/argument.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "-v",
                        "file_name": "pylint/config/arguments_manager.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_argument"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "help="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "argument_parser"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_argument('--verbose')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_argument('-v'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_argument('--verbose'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "command line options"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse_args"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "argparse.ArgumentParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_argument('--verbose')"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "argparse",
                        "file_name": "pylint/config/argument.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "argparse",
                        "file_name": "pylint/config/arguments_manager.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-11235": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "partial_fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.mean_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.n_samples_seen_"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "partial_fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "partial_fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "with_mean=False"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "with_std=False"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.mean_ = None"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.n_samples_seen_"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "partial_fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "with_mean=False"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "with_std=False"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.mean_ = None"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.n_samples_seen_"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit",
                        "file_name": "preprocessing.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "partial_fit",
                        "file_name": "preprocessing.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self.mean_",
                        "file_name": "preprocessing.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self.n_samples_seen_",
                        "file_name": "preprocessing.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "sparse",
                        "file_name": "preprocessing.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-16082": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Expression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mod"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IntegerField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MOD"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_prep_value",
                        "file_name": "django/db/models/fields/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__init__",
                        "file_name": "django/db/models/expressions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class CombinedExpression(",
                        "file_name": "django/db/models/expressions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "resolve_expression",
                        "class_name": "Expression"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Expression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_expression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "output_field"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MOD"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Expression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_expression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MOD"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_sql",
                        "class_name": "Func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "MOD",
                        "file_name": "django/db/models/functions/math.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Expression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "MOD"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_expression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "as_sql"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Expression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "F"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Mod"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "output_field"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-26472": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%matplotlib"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "show"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ion()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ioff()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%matplotlib inline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%matplotlib qt5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "switch_backend"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "plt.show"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "QtCore.QCoreApplication.instance()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "IPython.display"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "plt.ion()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "plt.ioff()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%matplotlib"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "plt.show"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "plt.ion()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "switch_backend"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "matplotlib.use"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%matplotlib"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "contextmanager"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@contextmanager"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "show"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "matplotlib"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "show"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ion()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ioff()"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13620": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "feature_importances_",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "estimators_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "feature_importances_"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "feature_importances_",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoostRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "feature_importances_",
                        "class_name": "AdaBoostRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "estimators_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.sum(clf.feature_importances_)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "feature_importances_",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseGradientBoosting"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "feature_importances_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "feature_importances_",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecisionTreeRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "estimators_",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseGradientBoosting"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "feature_importances_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "estimators_"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "feature_importances_",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_estimator",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.sum(tree[0].feature_importances_)"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-8058": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "gettext"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "gettext_compact"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "gettext_compact"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge_message_catalogs"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "gettext_compact"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GettextBuilder"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge_catalogs"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "gettext"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "message catalog"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "compile catalog"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "gettext_compact"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "gettext_compact"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class GettextBuilder"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "compile_catalogs",
                        "class_name": "GettextBuilder"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "msgmerge",
                        "file_name": "Makefile"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "gettext_compact"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "message catalog"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Builder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "gettext"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-24627": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "remove"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cla"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "clf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Artist"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cla"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "clf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Artist"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "remove"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "cla",
                        "file_name": "lib/matplotlib/axes/_base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def remove(self):",
                        "file_name": "lib/matplotlib/artist.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cla"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "remove"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Figure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "plot"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Artist"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cla"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "clf"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "cla",
                        "file_name": "lib/matplotlib/axes/_base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "remove",
                        "class_name": "Artist"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "remove"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cla"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Artist"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "plot",
                        "class_name": "Axes"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16693": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "render",
                        "file_name": "django/template/backends/django.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "bind_template",
                        "file_name": "django/template/context.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DjangoTemplates"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "render",
                        "file_name": "/..../site-packages/django/template/backends/django.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bind_template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "updates.update(processor(self.request))"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "bind_template",
                        "file_name": "django/template/context.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "The view didn't return an HttpResponse object"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "updates.update(processor(self.request))"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "updates.update(processor(self.request))"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "The view didn't return an HttpResponse object. It returned None instead"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "bind_template",
                        "file_name": "django/template/context.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "render",
                        "file_name": "django/template/backends/django.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "render",
                        "file_name": "django/template/base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "render",
                        "file_name": "django/template/backends/django.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "render",
                        "file_name": "django/template/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "bind_template",
                        "file_name": "django/template/context.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "updates.update(processor(self.request))",
                        "file_name": "django/template/context.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-12301": [
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/simplify/tests/test_cse.py",
                        "line_no_str": "433",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mul"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_issue_11230",
                        "file_name": "sympy/simplify/tests/test_cse.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_issue_11230",
                        "file_name": "sympy/simplify/tests/test_cse.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "is_Mul"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "is_Mul",
                        "file_name": "test_cse.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "test_issue_11230"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "is_Mul"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_issue_11230",
                        "file_name": "test_cse.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "is_Mul",
                        "file_name": "test_cse.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "test_issue_11230"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "is_Mul"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/simplify/tests/test_cse.py",
                        "line_no_str": "433",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "is_Mul"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "test_issue_11230"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mul"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "test_issue_11230"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/simplify/tests/test_cse.py",
                        "line_no_str": "433",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "is_Mul",
                        "file_name": "test_cse.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "test_cse"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "test"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CSE"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Common Subexpression Elimination"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-6599": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polyval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "timedelta64"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polyval"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polyval"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polyval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "timedelta64"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "polyval",
                        "file_name": "xarray/core/computation.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "timedelta64",
                        "file_name": "xarray/core/computation.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_ensure_numeric"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polyval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def polyval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "azimuth_time = xr.DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "polyfit_coefficients = xr.DataArray"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "polyval",
                        "file_name": "xarray/core/computation.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7975": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generateIndex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "categorizeIndexEntries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Symbols"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "special character handling"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/environment/adapters/indexentries.py",
                        "line_no_str": "172",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generateIndex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "categorizeIndexEntries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "createHtmlOutput"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IndexGenerator"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HtmlOutputCreator"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "special characters in index"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Symbols section"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "indexEntries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "buildIndex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sort index entries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "categorize entries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "formatHtml"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "outputHtml"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "non-alphabetic index entries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index special handling"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "HTML"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index page generation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "character encoding"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "character comparison"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "section titles"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "header generation"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generateHtmlOutput"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parseIndexEntries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_@_"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_\u00a3_"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_\u2190_"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Symbols section anchor"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "createIndex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generateIndex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "createHtml"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generateAnchor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "special character processing"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "symbol handling"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "documentation config"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index generation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "HTML template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "generate HTML"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sort index"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "categorize entries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "anchor generation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "generate anchor tag"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generateIndex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "createIndex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "categorizeIndexEntries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sortIndexEntries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_@_"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_\u00a3_"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_\u2190_"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DocumentBuilder"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ContentProcessor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "buildDocument"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "processDocument"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "special characters"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index section"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handleSpecialCharacters"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sortDocumentEntries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "categorizeDocumentEntries"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "special characters",
                        "file_name": "utils/jssplitter_generator.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "HTML output"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index generation"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handleIndexEntries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "categorizeEntries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generateHtmlOutput"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Symbols in index"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_@_"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_\u00a3_"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_\u2190_"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generateIndex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "createHtmlSection"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "special character"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "createAnchor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sortIndexEntries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "categorizeIndex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IndexGenerator"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HtmlOutput"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "utils/jssplitter_generator.py",
                        "line_no_str": "94",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "HTML output"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "symbols"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-17038": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "isqrt"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if n < 17984395633462800708566937239552"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "int(_sqrt(n))"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "isqrt"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "isqrt",
                        "file_name": "sympy/core/power.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "math.sqrt",
                        "file_name": "sympy/core/power.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "int(math.sqrt(n)) <= n",
                        "file_name": "sympy/core/power.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "isqrt"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if n < 17984395633462800708566937239552:"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "isqrt"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/core/power.py",
                        "line_no_str": "23",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "17984395633462800708566937239552"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "isqrt"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if n < 17984395633462800708566937239552:"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "return int(_sqrt(n))",
                        "file_name": "sympy/core/power.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-13441": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "n_link_pendulum_on_cart"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "jacobian"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "count_ops"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sys.eom_method.rhs()"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "count_ops"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "jacobian"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_link_pendulum_on_cart"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sys.eom_method.rhs()"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "jacobian"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "n_link_pendulum_on_cart"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rhs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "count_ops"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "count_ops"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "jacobian"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diff"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_eval_derivative"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "n_link_pendulum_on_cart"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "rhs",
                        "class_name": "n_link_pendulum_on_cart"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "jacobian"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "count_ops"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12485": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MultiPartParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_header"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_filename"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filename="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Content-Disposition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filename*"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MultiPartParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "parse_filename",
                        "class_name": "MultiPartParser"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_filename",
                        "class_name": "MultiPartParser"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_content_disposition"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filename="
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parse",
                        "file_name": "django/http/multipartparser.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "handle_file_complete",
                        "file_name": "django/http/multipartparser.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MultiPartParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "parse",
                        "class_name": "MultiPartParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Content-Disposition:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filename*="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MultiPartParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "parse",
                        "class_name": "MultiPartParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filename="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MultiPartParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "parse",
                        "class_name": "MultiPartParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Content-Disposition"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-7673": [
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_level",
                        "class_name": "caplog"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_initial_handler_level"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "caplog"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_level"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_initial_handler_level"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_level"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_initial_handler_level"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_level",
                        "class_name": "LogCaptureFixture"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_level"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_initial_handler_level"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "caplog"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_level",
                        "class_name": "caplog"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_initial_handler_level"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14019": [
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "ExclusionConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "CheckConstraint"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExclusionConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CheckConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "ExclusionConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "CheckConstraint"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExclusionConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CheckConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "ExclusionConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "CheckConstraint"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExclusionConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CheckConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "ExclusionConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "CheckConstraint"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExclusionConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CheckConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "ExclusionConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "CheckConstraint"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-15320": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RootOf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "gen"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RootOf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "poly.gen"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RootOf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "RootOf"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "RootOf(x**3+x-1,0)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "RootOf((x**3+x-1).subs(x,tan(x)),0)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "poly.gen"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RootOf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "poly",
                        "class_name": "RootOf"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "generator",
                        "class_name": "RootOf"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generator"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/polys/rootoftools.py",
                        "line_no_str": "1",
                        "window_size_str": "100"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "subs",
                        "file_name": "sympy/polys/polytools.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RootOf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "RootOf"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "poly",
                        "class_name": "RootOf"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pylint-dev__pylint-6412": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PyLinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__implements__"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PyLinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__implements__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ABCMeta"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__implements__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PyLinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "categorize_checkers",
                        "class_name": "PyLinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ABCMeta"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PyLinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__implements__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ABCMeta"
                    },
                    "call_ok": true
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__implements__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PyLinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12496": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "save",
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "save",
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.UUIDField"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "save"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "create"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "save",
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "save",
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Parent(models.Model)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Child(Parent)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.UUIDField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.Model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "save"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "multi-inheritance"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "save",
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "save",
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "create"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Child.objects.create()"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "create",
                        "file_name": "django/db/models/query.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "create",
                        "file_name": "django/db/models/fields/related_descriptors.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "create"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "save",
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "save",
                        "class_name": "Child"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "create",
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "UUIDField"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-20442": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_to"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Joule"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Second"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "joule*second"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "convert_to",
                        "file_name": "sympy/physics/units/quantities.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "convert_to",
                        "file_name": "sympy/physics/units/util.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_to"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "joule"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "kg"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "m"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "s"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "convert_to",
                        "file_name": "sympy/physics/units/quantities.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "convert_to",
                        "file_name": "sympy/physics/units/util.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_to"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "joule"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "second"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "kg"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "m"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "s"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mins"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_to"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "joule*second,joule"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "kg*m**2/s**2"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "convert_to",
                        "file_name": "sympy/physics/units/quantities.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Joule"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Second"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_to"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "convert_to",
                        "file_name": "sympy/physics/units/quantities.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "convert_to",
                        "file_name": "sympy/physics/units/util.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14983": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_migration_name"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationWriter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "arrange_for_graph",
                        "file_name": "django/db/migrations/autodetector.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "MakemigrationsCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "MigrationLoader"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "DetermineNextMigrationNumber"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "squashed"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MakemigrationsCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_migration_name"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "squashed"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "add_operation",
                        "file_name": "django/db/migrations/autodetector.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "arrange_for_graph",
                        "file_name": "django/db/migrations/autodetector.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "squashed",
                        "file_name": "django/db/migrations/loader.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "squashed",
                        "file_name": "django/db/migrations/graph.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationWriter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "squashed"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "makemigrations",
                        "file_name": "django/core/management/commands/makemigrations.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def makemigrations",
                        "file_name": "django/core/management/commands/makemigrations.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "MigrationWriter",
                        "file_name": "django/db/migrations/writer.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "filename",
                        "file_name": "django/db/migrations/writer.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "squashed",
                        "file_name": "django/db/migrations/loader.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "squashed",
                        "file_name": "django/db/migrations/graph.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "squashmigrations"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "parse_number",
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migration_name"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12957": [
        [],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "DECIMAL_SEPARATOR",
                        "file_name": "contrib/gis/templates/gis/admin/openlayers.js"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "{{",
                        "file_name": "contrib/gis/templates/gis/admin/openlayers.js"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "openlayers.js"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "gis/admin"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [],
        [],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "gis/admin/openlayers.js",
                        "file_name": "contrib/gis/templates/gis/admin/openlayers.js"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DECIMAL_SEPARATOR"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "openlayers"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "OpenLayers.Map"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pydata__xarray-6461": [
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "unknown",
                        "line_no_str": "1812",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply_ufunc"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "path/to/file",
                        "line_no_str": "1810",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "xr.where",
                        "file_name": "path/to/module"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply_ufunc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "keep_attrs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "file_path",
                        "line_no_str": "1812",
                        "window_size_str": "window_size"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "apply_ufunc"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "where"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "apply_ufunc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "keep_attrs = lambda attrs, context: attrs[1]"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "keep_attrs = lambda attrs, context: attrs[1]"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply_ufunc"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14802": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_key"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_key"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_key"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_key"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCache"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_key"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_key"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_key"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_key"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.make_key(key, version=version)\\nself.validate_key(key)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_key"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_key"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "key = self.make_key(key, version=version)\\nself.validate_key(key)"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-11428": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AppConfig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raise_last_exception"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MyException"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raise_last_exception"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AppConfig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class MyException(Exception)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raise_last_exception"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AppConfig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raise_last_exception"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "c8720e7696ca41f3262d5369365cc1bd72a216ca"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raise_last_exception"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AppConfig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "ready",
                        "class_name": "AppConfig"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-15609": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixSymbol(\"M\", k, k)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "[i, j]"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixSymbol"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "doprint",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Indexed"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Sum"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixSymbol(\"M\", k, k)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\sum_{"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_MatrixElement",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "subscript",
                        "file_name": "sympy/printing/latex.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pydata__xarray-5365": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "apply_ufunc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dask='parallelized'"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply_ufunc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dot"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply_ufunc"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "xr.apply_ufunc"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "numpy.cross"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "apply_ufunc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dask='parallelized'"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13616": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemessages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LOCALE_PATHS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Unable to find a locale path to store translations for file"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemessages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Unable to find a locale path to store translations for file"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LOCALE_PATHS"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemessages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CommandError: Unable to find a locale path"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LOCALE_PATHS"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemessages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Unable to find a locale path to store translations for file"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemessages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LOCALE_PATHS"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11477": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "translate_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "test case of the patch"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "translate_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "URLRouter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "URLTranslator"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RouteManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "optional arguments in URL"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "url pattern with optional"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "translate_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "optional named groups"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "translate_url"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "translate_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "optional named groups"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-12973": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin.E408"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin.E409"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin.E410"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "process_request",
                        "class_name": "AuthenticationMiddleware"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SessionMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "The Django authentication middleware requires session middleware to be installed."
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "E410"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "'django.contrib.auth.middleware.AuthenticationMiddleware' must be in MIDDLEWARE"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SessionMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "process_request"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MIDDLEWARE = []"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SessionMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin.E408"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin.E409"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin.E410"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SessionMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AssertionError: The Django authentication middleware requires session middleware to be installed."
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-26469": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PdfPages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "PdfPages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "close",
                        "class_name": "PdfPages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "keep_empty"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PdfPages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "close",
                        "class_name": "PdfPages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "keep_empty"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PdfPages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "PdfPages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "keep_empty"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PdfPages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "init",
                        "class_name": "PdfPages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "keep_empty=True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "deprecation warning"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PdfPages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "close",
                        "class_name": "PdfPages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "keep_empty=True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "PdfPages"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-24145": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SplineTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "SplineTransformer"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SplineTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fit_transform"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit_transform"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import numpy as np"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import scipy"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SplineTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "SplineTransformer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from scipy"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SplineTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "SplineTransformer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "design_matrix"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "SplineTransformer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SplineTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "SplineTransformer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import scipy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "design_matrix"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7462": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "unparse",
                        "file_name": "sphinx/domains/python.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def foo() -> Tuple[()]"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Tuple[()]"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "unparse"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "path/to/site-packages/sphinx/domains/python.py",
                        "line_no_str": "112",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "result.pop()",
                        "file_name": "sphinx/domains/python.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def unparse(",
                        "file_name": "sphinx/domains/python.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "foo",
                        "file_name": "path/to/your/module"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/domains/python.py",
                        "line_no_str": "112",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-12983": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "init="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "init="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "GradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GradientBoostingClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "predict",
                        "class_name": "GradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "predict",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sample_weights"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GradientBoostingClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self.init",
                        "file_name": "sklearn/ensemble/gradient_boosting.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "init parameter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoosting"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sample weights"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-14983": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RepeatedKFold"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RepeatedStratifiedKFold"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "RepeatedKFold"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "RepeatedStratifiedKFold"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_RepeatedSplits"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "_RepeatedSplits"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RepeatedKFold"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RepeatedStratifiedKFold"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "RepeatedKFold"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "RepeatedStratifiedKFold"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_RepeatedSplits"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "_RepeatedSplits"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RepeatedKFold"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RepeatedStratifiedKFold"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_RepeatedSplits"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RepeatedKFold"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RepeatedStratifiedKFold"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_RepeatedSplits"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RepeatedKFold"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RepeatedStratifiedKFold"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_RepeatedSplits"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-11281": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MixtureModel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Clusterer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_components"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "labels_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit_predict"
                    },
                    "call_ok": true
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MixtureModel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Clusterer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_components"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "labels_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit_predict"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_components"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_clusters"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "labels_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit_predict"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MixtureModel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_components"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "labels_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit_predict"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MixtureModel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Clusterer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_predict",
                        "class_name": "MixtureModel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_components"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "labels_"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13030": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prefetch_related"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__in"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Author"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Book"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prefetch_related"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__in",
                        "class_name": "QuerySet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "author = models.ForeignKey(Author, null=True, on_delete=models.DO_NOTHING)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prefetch_related"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "IN (NULL"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prefetch_related"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_prefetch_queryset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "build_filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__in"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prefetch_related"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "build_filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_filtered_relations"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-24971": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "savefig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rcParams['figure.constrained_layout.use'] ="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subplot_mosaic"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "savefig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subplot_mosaic"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rcParams['figure.constrained_layout.use']"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subplot_mosaic"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "savefig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rcParams['figure.constrained_layout.use'] = True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "layout='compressed'"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rcParams['figure.constrained_layout.use'] = True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subplot_mosaic"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "savefig",
                        "class_name": "Figure"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subplot_mosaic"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "savefig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rcParams['figure.constrained_layout.use'] = True"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-12880": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "read",
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ECSV_DATATYPES"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_cols",
                        "file_name": "astropy/io/ascii/ecsv.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ECSV_DATATYPES"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "astropy/io/ascii/ecsv.py",
                        "line_no_str": "177",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "read",
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_cols"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "read",
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "datatype 'datetime64' of column",
                        "file_name": "astropy/io/ascii/ecsv.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "astropy/io/ascii/ecsv.py",
                        "line_no_str": "177",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "read",
                        "class_name": "BinnedTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_cols",
                        "file_name": "astropy/io/ascii/ecsv.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ECSV_DATATYPES",
                        "file_name": "astropy/io/ascii/ecsv.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15022": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Client"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ClientOffice"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ClientAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "qs = qs.filter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Client"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ClientOffice"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ClientAdmin"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Meta"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_search_results"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "objects ="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ForeignKey"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Client"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ClientOffice"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_search_results",
                        "class_name": "ClientAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "search_fields"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Client"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ClientOffice"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ClientAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_search_results",
                        "class_name": "ClientAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "search",
                        "class_name": "Client"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "search",
                        "class_name": "ClientOffice"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Client"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ClientOffice"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ClientAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_search_results",
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "qs = qs.filter("
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-8278": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "default argument"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "hexadecimal"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/domains/python.py",
                        "line_no_str": "225",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "function_signature"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Signature"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "default argument"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render_function_signature"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "default argument values"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_docstrings"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docstring processing"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "format_docstring"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "render output"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "number formatting"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "extensions number format"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "function"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "default"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "hex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "decimal"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PythonDomain"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "process_docstrings",
                        "class_name": "PythonDomain"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render_signature"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "render",
                        "file_name": "sphinx/domains/python.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class PyFunction",
                        "file_name": "sphinx/domains/python.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "signature"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "objtypes",
                        "file_name": "sphinx/domains/python.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "function signature"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "default argument"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11740": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "App1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "App2"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dependencies"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Migration"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "App1",
                        "file_name": "testapp1/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "App2",
                        "file_name": "testapp2/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AlterField(model_name='app1', name='another_app'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dependencies = ["
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "App1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "App2"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.ForeignKey"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Migration autodetector"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "detecting field type changes",
                        "file_name": "django/db/migrations/autodetector.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "establishing model dependencies",
                        "file_name": "django/db/migrations/autodetector.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "django.db.migrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "detect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "UUIDField to ForeignKey"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "UUIDField to ForeignKey"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ForeignKey",
                        "file_name": "django/db/models/fields/related.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dependencies list in migration files"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "add_dependency",
                        "file_name": "django/db/migrations/dependencies.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "verbose output while generating migrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "detect_changes",
                        "class_name": "django/db/migrations/autodetector.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "detect_changes",
                        "file_name": "django/db/migrations/autodetector.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "App1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "App2"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dependencies"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "App1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "App2"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Migration"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "App1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "App2"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ForeignKey(App2, null=True, blank=True, on_delete=models.SET_NULL, verbose_name=_('another app'))"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ValueError: Related model 'testapp2.App2' cannot be resolved"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13447": [
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/metrics/ranking.py",
                        "line_no_str": "732",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/metrics/ranking.py",
                        "line_no_str": "740",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "label_ranking_average_precision_score",
                        "file_name": "sklearn/metrics/ranking.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/metrics/ranking.py",
                        "line_no_str": "732",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/metrics/ranking.py",
                        "line_no_str": "740",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/metrics/ranking.py",
                        "line_no_str": "732",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/metrics/ranking.py",
                        "line_no_str": "740",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "label_ranking_average_precision_score",
                        "file_name": "sklearn/metrics/ranking.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/metrics/ranking.py",
                        "line_no_str": "732",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/metrics/ranking.py",
                        "line_no_str": "740",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "label_ranking_average_precision_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/metrics/ranking.py",
                        "line_no_str": "732",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/metrics/ranking.py",
                        "line_no_str": "740",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-8620": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Role"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_kbd"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "depart_kbd"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":kbd:"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "kbd"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Role"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Directive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Extension"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "role"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "directive"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "HTML builder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "visit_node"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_role"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":kbd:"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":kbd:"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "<kbd"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Role"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "process_role"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":kbd:"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "KeyboardTransform",
                        "file_name": "sphinx/builders/html/transforms.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-21101": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mul"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "doit",
                        "class_name": "Mul"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mul"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mul"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mul"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "evaluate=False"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mul"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12407": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "{% include %}"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "render",
                        "file_name": "django/template/loader_tags.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_template",
                        "file_name": "django/template/loader.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "render",
                        "class_name": "IncludeNode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_template(template_name)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Template"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IncludeNode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "render",
                        "class_name": "IncludeNode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_template(template_name)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IncludeNode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_template"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "{% include var %}"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_template(template_name)"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13497": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_estimate_mi"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_estimate_mi"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "discrete_features == 'auto'"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "estimate_mi"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "discrete_features == 'auto'"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_estimate_mi"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "discrete_features == 'auto'"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_estimate_mi"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "discrete_features == 'auto'"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "psf__requests-2674": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.packages.urllib3.exceptions.DecodeError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.packages.urllib3.exceptions.TimeoutError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "urllib3.exceptions"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "urllib3.exceptions",
                        "file_name": "requests/exceptions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "urllib3.exceptions",
                        "file_name": "requests/adapters.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "urllib3.exceptions"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "urllib3.exceptions.DecodeError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "urllib3.exceptions.TimeoutError"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "urllib3.exceptions",
                        "file_name": "requests/exceptions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "urllib3.exceptions",
                        "file_name": "requests/adapters.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "urllib3.exceptions"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.exceptions"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DecodeError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TimeoutError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RequestException"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "urllib3.exceptions"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "urllib3.exceptions.DecodeError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "urllib3.exceptions.TimeoutError"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "urllib3.exceptions",
                        "file_name": "requests/adapters.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.exceptions"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecodeError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TimeoutError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "request"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "urllib3.exceptions"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11848": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_http_date"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "0-69 to be in 2000-2069"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "70-99 to be 1970-1999"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_http_date"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "0-69 to be in 2000-2069, and 70-99 to be 1970-1999"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_http_date"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_http_date"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "0-69 to be in 2000-2069, and 70-99 to be 1970-1999"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_http_date"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "0-69"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "70-99"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "astropy__astropy-14966": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QTable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "group_by",
                        "class_name": "QTable"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "groups.keys"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "group_by",
                        "class_name": "Table"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QTable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "group_by",
                        "class_name": "QTable"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "group_by"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QTable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "group_by"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "groups.keys"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QTable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "group_by",
                        "class_name": "QTable"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "group_keys"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "group_by",
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "group_by"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QTable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "group_by",
                        "class_name": "QTable"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "group_by"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-14869": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "categorical_crossentropy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "binary_crossentropy"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "categorical_crossentropy",
                        "file_name": "sklearn/ensemble/_hist_gradient_boosting/loss.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "binary_crossentropy",
                        "file_name": "sklearn/ensemble/_hist_gradient_boosting/loss.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_get_loss",
                        "file_name": "sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "loss='categorical_crossentropy'"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_get_loss",
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit",
                        "file_name": "sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "categorical_crossentropy"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_get_loss",
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def fit(self,"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseHistGradientBoosting"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "loss='categorical_crossentropy'"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "predict"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "loss='categorical_crossentropy'"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_data",
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_get_loss",
                        "class_name": "HistGradientBoostingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseHistGradientBoosting"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit",
                        "file_name": "sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-13075": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Cosmology"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "Cosmology"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "def_unit"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UnifiedReadWriteMethod"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "write",
                        "file_name": "astropy/io/registry/core.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "write",
                        "file_name": "astropy/table/table.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Cosmology"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "Cosmology"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QTable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "def_unit"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Cosmology"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "io.table.to_table()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "Cosmology"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def_unit"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Cosmology"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "write",
                        "file_name": "io/table.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parameter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def_unit"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Cosmology"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "Cosmology"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cosmology.io.table.to_table"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "QTable.write"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def_unit"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UnifiedReadWriteMethod"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CosmologyWrite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QTable"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15204": [
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "DurationField",
                        "file_name": "django/forms/fields.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "clean",
                        "class_name": "DurationField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_python",
                        "class_name": "DurationField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_duration"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DurationField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "clean",
                        "class_name": "DurationField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parse_duration",
                        "file_name": "django/utils/dateparse.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DurationField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "clean",
                        "class_name": "DurationField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "to_python",
                        "file_name": "django/forms/fields.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parse_duration",
                        "file_name": "django/utils/dateparse.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "DurationField",
                        "file_name": "django/forms/fields.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_python",
                        "class_name": "DurationField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parse_duration",
                        "file_name": "django/utils/dateparse.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "<dictcomp>",
                        "file_name": "django/utils/dateparse.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "clean",
                        "file_name": "django/forms/fields.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "to_python",
                        "file_name": "django/forms/fields.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_duration"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-9828": [
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/sphinx/util/i18n.py",
                        "line_no_str": "72",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "write_mo",
                        "file_name": "sphinx/sphinx/util/i18n.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "write_mo"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/sphinx/util/i18n.py",
                        "line_no_str": "72",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "write_mo",
                        "file_name": "sphinx/sphinx/util/i18n.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "use_fuzzy_translations"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "write_mo",
                        "file_name": "sphinx/util/i18n.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "config",
                        "file_name": "sphinx/util/i18n.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/util/i18n.py",
                        "line_no_str": "72",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/sphinx/util/i18n.py",
                        "line_no_str": "72",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "write_mo",
                        "file_name": "sphinx/sphinx/util/i18n.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "config.add('"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "write_mo(file_mo, po",
                        "file_name": "sphinx/sphinx/util/i18n.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/sphinx/util/i18n.py",
                        "line_no_str": "72",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "write_mo",
                        "file_name": "sphinx/sphinx/util/i18n.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "use_fuzzy_translations"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-10853": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqlite3.connect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "execute"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "OperationalError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "database features"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "version compatibility"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Window"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "RowNumber",
                        "class_name": "Window"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqlite3.OperationalError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqlite_version"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqlite3.connect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLite version"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "create_connection"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "execute",
                        "class_name": "DatabaseWrapper"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "raise django.db.utils.OperationalError"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_new_connection",
                        "file_name": "django/db/backends/sqlite3/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "features",
                        "file_name": "django/db/backends/sqlite3/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "OperationalError",
                        "file_name": "django/db/backends/sqlite3/base.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.db.utils.OperationalError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Window"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RowNumber"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "features"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_feature_support"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "create_connection"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "features"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseErrorWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "execute",
                        "class_name": "DatabaseErrorWrapper"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Window"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqlite3.OperationalError"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-14026": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sum"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotate(sum_field = Sum"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "COALESCE"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sum"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "aggregate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "COALESCE"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sum"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "COALESCE"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Aggregate"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Sum"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotate(sum_field = Sum("
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "COALESCE"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Sum("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_sql",
                        "class_name": "Sum"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Aggregate"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sum"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "COALESCE"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7748": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autodoc_docstring_signature"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "overloaded methods"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SWIG"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Sphinx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docstring"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autodoc_docstring_signature"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "overloaded methods"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autodoc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SWIG"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docstring"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autodoc_docstring_signature"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "overloaded methods"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ""
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SWIG"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docstring generation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_docstring"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def",
                        "file_name": "*.i"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def parse_docstring"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def get_signature"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def wrap_method"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "class_name",
                        "file_name": "sphinx/domains/python.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_signature",
                        "class_name": "class_name"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "class_name",
                        "file_name": "sphinx/directives/__init__.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_signature",
                        "class_name": "class_name"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autodoc_docstring_signature"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SWIG docstrings"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "overloaded methods"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse docstring"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "process docstring"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docstring"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SWIG interface"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SWIG python"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "handle overloaded"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-15742": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BlockTranslateNode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "blocktranslate"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "render",
                        "class_name": "Template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SafeString"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_variable"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "{% blocktranslate asvar"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "{% blocktranslate asvar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "blocktranslate"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getitem__",
                        "class_name": "Context"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "render",
                        "class_name": "Context"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SafeString"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TemplateTag"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Context"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SafeData"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "blocktranslate"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SafeString"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Template"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "blocktranslate asvar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SafeString"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "escape"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "escape"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "blocktranslate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SafeString"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conditionally escape"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-20693": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_color"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rectprops.update"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "selector.rect.set_color"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Selector"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Rectangle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rect.set_facecolor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rectprops"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "selector.rect.set_color"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "selector.rectprops.update"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Selector"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_color"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rectprops"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "selector.rect.set_color"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "selector.rectprops.update"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "handle_props"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "selector.rect.set_color"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "selector.rectprops.update"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Selector"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "selector.artists[0].set_color"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_color"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "update_props"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "set_color",
                        "file_name": "lib/matplotlib/patches.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "selector.rect.set_color(color)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "selector.rectprops.update(dict(facecolor=color))"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "deprecation warning #20113"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "selector.artists[0].set_color(color)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "selector"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_color"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "update"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "selector",
                        "file_name": "lib/matplotlib/widgets.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pylint-dev__pylint-4398": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_options"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "evaluate_exit_code"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--fail-under"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ArgumentParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exit"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "issue categories"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "add_argument",
                        "file_name": "pylint/lint/run.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "main",
                        "file_name": "pylint/lint/run.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "severity levels"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "argparse.ArgumentParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sys.exit"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_arguments"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--fail-under"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "main"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "argparse.ArgumentParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sys.exit"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_command_line_arguments"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "exit_with_code"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sys.exit"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "report_issue"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IssueReporter"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fail_under"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "argparse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--fail-under"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "exit_with_code"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sys.exit"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_args"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "calculate_score"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Reporter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--fail-under"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CLI"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exit"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "configuration option"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "lint result"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-13822": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Meta"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "related_name='+'"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField(related_name='+')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pre_save"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "post_save"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "migrate"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AddField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CreateModel"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fields.E305"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CreateModel"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AddField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField(related_name='+')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField(related_name="
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "related_name='+'"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Meta:"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-20264": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Pow",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Mul",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "doprint",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "return str(self._print(expr))"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Pow",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Mul",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pow"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Pow",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Mul",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def _print_Pow(self, expr)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def _print_Mul(self, expr)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "doprint",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Pow",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Mul",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Pow",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Mul",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13355": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Media"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__add__",
                        "class_name": "Media"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CustomMedia"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Media"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__add__",
                        "class_name": "Media"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Media"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__add__",
                        "class_name": "Media"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Media"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__add__",
                        "class_name": "Media"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Media"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__add__",
                        "class_name": "Media"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_css_lists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_js_lists"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-8447": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "pytest_collect_file",
                        "file_name": "pytest_black.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "pytest_collect_file",
                        "file_name": "pytest_checkdocs/__init__.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "from_parent",
                        "class_name": "BlackItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "from_parent",
                        "class_name": "CheckdocsItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "from_parent",
                        "file_name": "_pytest/nodes.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__init__",
                        "file_name": "_pytest/nodes.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BlackItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CheckdocsItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "from_parent",
                        "class_name": "BlackItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "from_parent",
                        "class_name": "CheckdocsItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "from_parent"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__init__",
                        "file_name": "_pytest/nodes.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "from_parent",
                        "class_name": "BlackItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "from_parent",
                        "class_name": "CheckdocsItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__init__",
                        "file_name": "_pytest/nodes.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "BlackItem.from_parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CheckdocsItem.from_parent"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BlackItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CheckdocsItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pytest_collect_file"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from_parent"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BlackItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CheckdocsItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pytest_collect_file"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "pytest_collect_file",
                        "file_name": "src/_pytest/python.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "pytest_collect_file",
                        "file_name": "src/_pytest/hookspec.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "from_parent"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-21612": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Latex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\frac"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "simplify",
                        "class_name": "Latex"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "\\\\frac",
                        "file_name": "sympy/parsing/latex/_antlr/latexparser.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "convert_relation",
                        "file_name": "sympy/parsing/latex/_parse_latex_antlr.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\frac"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_latex"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_relation"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_expr"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_add"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_mp"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LaTeXParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Fraction"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexParser"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\frac"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "\\\\frac",
                        "file_name": "sympy/parsing/latex/_antlr/latexparser.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "\\\\frac",
                        "file_name": "sympy/parsing/latex/_antlr/latexlexer.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "convert_relation",
                        "file_name": "sympy/parsing/latex/_parse_latex_antlr.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13233": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FileField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "contribute_to_class"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "#31701"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ImageField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "init",
                        "class_name": "ImageField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "contribute_to_class",
                        "class_name": "ImageField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "#31701"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ImageField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Field"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "model ="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def get_prep_value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "#31701"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ImageField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "model attribute of image fields"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "#31701"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ImageField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "model attribute of image fields"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-13791": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_duration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "return days + sign * datetime.timedelta(**kw)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_duration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "return days + sign * datetime.timedelta(**kw)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_duration"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_duration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/utils/dateparse.py",
                        "line_no_str": "147",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "datetime.timedelta",
                        "file_name": "django/utils/dateparse.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_duration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/utils/dateparse.py",
                        "line_no_str": "147",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-22865": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColorbarBase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "drawedges",
                        "class_name": "ColorbarBase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from_levels_and_colors"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColorbarBase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "drawedges",
                        "class_name": "ColorbarBase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "extend",
                        "class_name": "ColorbarBase"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ColorbarBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "drawedges"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "extend='both'"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColorbarBase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "drawedges"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "extend='both'"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extend='both'",
                        "file_name": "lib/matplotlib/contour.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ColorbarBase"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "drawedges=True"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColorbarBase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "from_levels_and_colors"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "drawedges=True"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "extend='both'"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "colorbar draw"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "draw_edge"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "set_edgecolor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "colorbar extend"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "set_extend"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColorbarBase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "drawedges",
                        "class_name": "ColorbarBase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "extend",
                        "class_name": "ColorbarBase"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "astropy__astropy-13234": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "read"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_construct_mixins_from_columns"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_construct_mixin_from_columns"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_construct_mixins_from_columns"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_construct_mixin_from_columns"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class SerializedColumn"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "read",
                        "class_name": "Table"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "Table"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Column"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SerializedColumn"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_construct_mixins_from_columns",
                        "file_name": "astropy/table/serialize.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_construct_mixin_from_columns",
                        "file_name": "astropy/table/serialize.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "read",
                        "file_name": "astropy/io/ascii/ecsv.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SerializedColumn"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Column"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "Table"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "read",
                        "class_name": "Table"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "!astropy.table.SerializedColumn"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "serialize"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_construct_mixins_from_columns",
                        "class_name": "Table"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_construct_mixin_from_columns",
                        "class_name": "Table"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "write",
                        "file_name": "astropy/table/connect.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "read",
                        "file_name": "astropy/table/connect.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "UnifiedReadWrite",
                        "file_name": "astropy/table/table.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "UnifiedReadWriteMethod"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SerializedColumn"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SerializedColumn"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_construct_mixins_from_columns"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_construct_mixin_from_columns"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__call__",
                        "file_name": "astropy/io/ascii/ecsv.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-10957": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ugettext"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ugettext_lazy"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ugettext_noop"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ungettext"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ungettext_lazy"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.utils.translation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "deprecation warning"
                    },
                    "call_ok": false
                }
            ],
            [],
            []
        ],
        [],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ugettext"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ugettext_lazy"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ugettext_noop"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ungettext"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ungettext_lazy"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from django.utils.translation import ugettext"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from django.utils.translation import ugettext_lazy"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from django.utils.translation import ugettext_noop"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from django.utils.translation import ungettext"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from django.utils.translation import ungettext_lazy"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "gettext"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "gettext_lazy"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "gettext_noop"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.utils.translation"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ugettext()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ugettext_lazy()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ugettext_noop()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ungettext()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ungettext_lazy()"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "gettext"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ugettext"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [],
        []
    ],
    "django__django-12734": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Vulnerability"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AppVersion"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "migrations.AlterField",
                        "class_name": "Vulnerability"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Vulnerability"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AppVersion"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "AlterField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "save"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "post_save"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pre_save"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Vulnerability"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AppVersion"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "AlterField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "migrate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.AlterField(model_name='vulnerability'"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToMany"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migration"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Vulnerability"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AppVersion"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.AlterField(model_name='vulnerability'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "AlterField",
                        "file_name": "django/db/migrations/operations/fields.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ManyToManyField",
                        "file_name": "django/db/models/fields/related.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "create_many_to_many_intermediary_model",
                        "file_name": "django/db/models/fields/related.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pre_migrate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "post_migrate"
                    },
                    "call_ok": true
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Vulnerability"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AppVersion"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToMany(AppVersion)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.AlterField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "migrate"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-3305": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_to_temp_dataset",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_from_temp_dataset",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "keep_attrs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "keep_attrs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "keep_attrs"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7374": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_anchor_name"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "format_function_identifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fragment identifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "anchor for Python functions"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PythonDomain"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fix_ids"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "domain object"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Python function identifiers"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "py:function"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "example_python_function"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "#example_python_function"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "#example-python-function"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "handle_signature",
                        "file_name": "sphinx/domains/python.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "add_target_and_index",
                        "file_name": "sphinx/domains/python.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "anchor",
                        "file_name": "sphinx/domains/python.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fragment identifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "#7236"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Python domain"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "generate fragment identifier"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def visit_function",
                        "file_name": "sphinx/domains/python.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fix_ids",
                        "file_name": "sphinx/builders/_epub_base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "anchors for Python functions"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fragment identifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_.replace('-', '_')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_.replace('_', '-')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "nbsphinx"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PythonDomain"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fix_ids"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write_doc"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        []
    ],
    "django__django-13170": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FilteredRelation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "FilteredRelation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FilteredRelation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "doesn't support nested relations"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FilteredRelation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_q",
                        "class_name": "QuerySet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "build_filter",
                        "class_name": "QuerySet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FilteredRelation(condition="
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FilteredRelation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FilteredRelation's condition doesn't support nested relations"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "add_filtered_relation",
                        "file_name": "django/db/models/sql/query.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "resolve_expression",
                        "class_name": "FilteredRelation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_sql",
                        "class_name": "FilteredRelation"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FilteredRelation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "condition=Q"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FilteredRelation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "FilteredRelation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "condition=Q(pizzas__toppings__name__startswith='n')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ValueError: FilteredRelation's condition doesn't support nested relations"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "resolve_expression",
                        "file_name": "django/db/models/query_utils.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "as_sql",
                        "file_name": "django/db/models/query_utils.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-5479": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raises"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "assert False, u"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "UnicodeEncodeError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raises"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "with pytest.raises"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\u2603"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raises"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "u'\\\\u2603'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "UnicodeEncodeError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AssertionError, match="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pytest.raises"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "assertionError, match="
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "encode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "decode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "assert "
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "with pytest.raises"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "raises"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "UnicodeEncodeError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "encode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "match"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-8269": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "linkcheck"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linkcheck_anchors"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "linkcheck"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linkcheck_anchors"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "broken    https://"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkCheckBuilder"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_anchor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linkcheck_anchors"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/builders/linkcheck.py",
                        "line_no_str": "62",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "linkcheck_anchors",
                        "file_name": "sphinx/builders/linkcheck.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linkcheck_anchors"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "check_uri",
                        "file_name": "sphinx/builders/linkcheck.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "linkcheck_anchors",
                        "file_name": "sphinx/builders/linkcheck.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkCheckWorker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_uri"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linkcheck_anchors"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "psf__requests-3718": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "run",
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_status_code",
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.head"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests_mock"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.raw.read"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_status_code",
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "requests.mock",
                        "file_name": "tests/general/InvalidLinkBearTest.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.raw.read"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests_mock.Mocker"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_status_code",
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.head"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "C:/Python34/lib/site-packages/requests/models.py",
                        "line_no_str": "705",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests."
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests_mock"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_status_code",
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.raw.read"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "run",
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "find_links_in_file",
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_status_code",
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.head"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.api.head"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self.raw.read(chunk_size)",
                        "file_name": "C:/Python34/lib/site-packages/requests/models.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "InvalidLinkBear",
                        "file_name": "file that contains the `InvalidLinkBear` class"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_status_code",
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_status_code",
                        "class_name": "InvalidLinkBear"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AttributeError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "NoneType"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.head"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pydata__xarray-4827": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "combine_attrs : {\"drop\", \"identical\", \"no_conflicts\", \"override\"}"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "combine_attrs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "combine_attrs : {\"drop\", \"identical\", \"no_conflicts\", \"override\"}"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "combine_attrs",
                        "file_name": "xarray/core/merge.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "combine_attrs",
                        "file_name": "xarray/core/combine.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "combine_attrs",
                        "file_name": "xarray/core/concat.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "combine_attrs"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "merge",
                        "file_name": "xarray/core/merge.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "combine_attrs",
                        "file_name": "xarray/core/merge.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "combine_attrs : {\"drop\", \"identical\", \"no_conflicts\", \"override\"}"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-26020": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesGrid"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_tick_only",
                        "class_name": "AxesGrid"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GeoAxes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ax.axis["
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ax.axis[",
                        "file_name": "lib/mpl_toolkits/axes_grid1/axes_grid.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_tick_only",
                        "file_name": "lib/mpl_toolkits/axes_grid1/axes_grid.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesGrid"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "GeoAxes",
                        "file_name": "cartopy/mpl/geoaxes.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_tick_only",
                        "file_name": "mpl_toolkits/axes_grid1/axes_grid.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "GeoAxes.axis"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Axes.axis"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesGrid"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GeoAxes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_tick_only",
                        "file_name": "mpl_toolkits/axes_grid1/axes_grid.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "axis",
                        "class_name": "GeoAxes"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "axis",
                        "class_name": "Axes"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesGrid"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_tick_only",
                        "class_name": "AxesGrid"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "axis[\"bottom\"].toggle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GeoAxes"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GeoAxes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_tick_only"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesGrid"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ax.axis["
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "axes_class=axes_class"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11905": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__isnull"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__isnull"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__isnull"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "lookup_type='__isnull'"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Lookup"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register_lookup"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__isnull"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "lookup='isnull'"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "build_filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_expression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Lookup"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Field.get_lookup"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__isnull"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_lookup"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "process_lookup"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Lookup"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FieldLookup"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__isnull"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "build_query"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SQLCompiler"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-13259": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Cos"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Cosh"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Asinh"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "simplify",
                        "file_name": "sympy/simplify/simplify.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cos"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cosh"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "asinh"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cos"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cosh"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "simplify",
                        "file_name": "sympy/simplify/simplify.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cos"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cosh"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cos(pi/6 - I*asinh("
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cosh(pi/6 + asinh("
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "cos"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "cosh"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "asinh"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "I"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cos"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cosh"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cos(pi/6 - I*asinh"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cosh(pi/6 + asinh"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-7158": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "report_skipped_tests"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "calculate_relative_path"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SKIPPED ["
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "report_collection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "RelativePath"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_report"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "path",
                        "file_name": "src/_pytest/terminal.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "report_skipped",
                        "file_name": "src/_pytest/terminal.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SKIPPED"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "report_skipped"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Report"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_report"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "format_skipped"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "relpath"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "path of tested file"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SKIPPED"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "collect_tests"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute_test"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SKIPPED"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "testing/test_terminal.py",
                        "line_no_str": "line_number",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "testing/test_skipping.py",
                        "line_no_str": "line_number",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/runner.py",
                        "line_no_str": "line_number",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "report_skipped_tests"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SKIPPED"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rootdir"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "format_skip_report"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "collect"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "report_generation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "relative path"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "file path"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-23729": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "julia_code"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".*"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "^"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "julia_code"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def julia_code"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "julia_code"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "julia"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "julia_code"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JuliaCodePrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "julia_code",
                        "class_name": "JuliaCodePrinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Mul",
                        "class_name": "JuliaCodePrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-8202": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyGeneric"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyGenericChild"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "sphinx",
                        "file_name": "docs/conf.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Generic["
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyGeneric"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyGenericChild"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "MyGenericChild"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MyGeneric.some_type = MyGenericChild"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Generic["
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx_autodoc_typehints"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyGeneric"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyGenericChild"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autosummary"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".automodule:: lib.test"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyGeneric"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyGenericChild"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MyGeneric.some_type = MyGenericChild"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autosummary"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyGeneric"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyGenericChild"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "MyGenericChild"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "some_type: ClassVar[Type['MyGenericChild']]"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Sphinx documentation generation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx_autodoc_typehints"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "napoleon"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-10343": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pytest_configure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "PytestDeprecationWarning: The hookimpl"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "hookimpl"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "old-style configuration options"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pytest_configure"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "PytestDeprecationWarning: The hookimpl pytest_configure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pytest_configure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pluginmanager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_hookspecs"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "hookimpl"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "PytestDeprecationWarning"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "warnings.warn"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@hookimpl"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pytest_configure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "PytestDeprecationWarning"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "hookimpl"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pytest_configure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "PytestDeprecationWarning"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@hookimpl"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "hookimpl"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-25624": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tight_layout"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "figure.autolayout"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tight_layout"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "figure.autolayout"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tight_layout"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "figure.autolayout"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tight_layout"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "figure.autolayout"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "w_pad"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tight_layout"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rcParams['figure.autolayout']"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subplots"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15031": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare_lookup_value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def prepare_lookup_value"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare_lookup_value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "request.GET"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "queryset.filter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare_lookup_value"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare_lookup_value"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare_lookup_value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin/util"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-9053": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docutils"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "reStructuredTextParser"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Publisher"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class",
                        "file_name": "docutils"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docutils==0.17b1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docutils"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "docutils",
                        "file_name": "requirements.txt"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "docutils",
                        "file_name": "setup.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import docutils"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "deprecated"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import docutils"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docutils==0.17b1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docutils"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "setup.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conf.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docutils"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docutils"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            []
        ]
    ],
    "django__django-13658": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManagementUtility"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CommandParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "execute_from_command_line",
                        "class_name": "ManagementUtility"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parser = CommandParser(usage='%(prog)s subcommand [options] [args]', add_help=False, allow_abbrev=False)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManagementUtility"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__init__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CommandParser(usage='%(prog)s subcommand [options] [args]', add_help=False, allow_abbrev=False)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute_from_command_line"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManagementUtility"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CommandParser(usage='%(prog)s subcommand [options] [args]', add_help=False, allow_abbrev=False)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManagementUtility"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "ManagementUtility"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CommandParser(usage='%(prog)s subcommand [options] [args]', add_help=False, allow_abbrev=False)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManagementUtility"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CommandParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CommandParser(usage='%(prog)s subcommand [options] [args]', add_help=False, allow_abbrev=False)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute_from_command_line"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11630": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelName"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "db_for_read"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "db_for_write"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "db_table"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Meta",
                        "file_name": "base/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Meta",
                        "file_name": "app2/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DATABASES ="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class DatabaseRouter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class AppConfig"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "DATABASES =",
                        "file_name": "settings.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "db_table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "allow_relation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "db_for_read"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "db_for_write"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "DATABASES",
                        "file_name": "path/to/project/settings.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "DatabaseRouter",
                        "file_name": "path/to/project/settings.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelName"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "db_for_read"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "db_for_write"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Meta"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DATABASE_ROUTERS"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelName"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "db_table"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-16792": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autowrap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "codegen"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CythonCodeWrapper"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autowrap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "double autofunc(double x)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CythonCodeWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "routine",
                        "class_name": "CythonCodeWrapper"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "wrap_code",
                        "class_name": "CythonCodeWrapper"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autowrap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CythonCodeWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "codegen"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "double autofunc"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autowrap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "double autofunc(double x)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CythonCodeWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "wrap_code",
                        "class_name": "CythonCodeWrapper"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autowrap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CythonCodeWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cython_code_wrap"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-17022": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Identity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "I"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Identity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "I"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Identity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "I"
                    },
                    "call_ok": true
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Identity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "I"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Identity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "I + A"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-16840": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "2//.5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "divide"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "//"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "//",
                        "file_name": "sympy/core/numbers.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "S(2)//S.Half"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "S"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__floordiv__",
                        "class_name": "S"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Half"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__floordiv__",
                        "file_name": "sympy/core/numbers.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class Half(",
                        "file_name": "sympy/core/numbers.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "S"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Half"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "//"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "2//.5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "//"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "S(2)//S.Half"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Half"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class S"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class S(",
                        "file_name": "sympy/core/singleton.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "//",
                        "file_name": "sympy/core/operations.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "S"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "//"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def __floordiv__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class S"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Half"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "//"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15062": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "When"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "annotate",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "connection.ops"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_compiler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "output_field=models.fields.DecimalField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.ExpressionWrapper"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.Case"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SQLite backend"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13554": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "block-wise casting to float64"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "additional memory of 10MB"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "copy the blocks of the upper triangle to the lower triangle"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_precompute_metric_params"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_parallel_pairwise"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "astype"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "euclidean_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "float32"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "euclidean_distances",
                        "file_name": "sklearn/metrics/pairwise.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "euclidean_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "float32"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "block-wise casting"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "X_norm_squared"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqrt(sum((x-y)**2))"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "euclidean_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "X_norm_squared"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "swap X and Y"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-14493": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManifestStaticFilesStorage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "post_process",
                        "class_name": "ManifestStaticFilesStorage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/staticfiles/storage.py",
                        "line_no_str": "251",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManifestStaticFilesStorage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "post_process",
                        "class_name": "ManifestStaticFilesStorage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/staticfiles/storage.py",
                        "line_no_str": "251",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManifestStaticFilesStorage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "post_process",
                        "class_name": "ManifestStaticFilesStorage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/staticfiles/storage.py",
                        "line_no_str": "251",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManifestStaticFilesStorage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "post_process",
                        "class_name": "ManifestStaticFilesStorage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if substitutions:"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/staticfiles/storage.py",
                        "line_no_str": "251",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManifestStaticFilesStorage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "post_process",
                        "class_name": "ManifestStaticFilesStorage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/staticfiles/storage.py",
                        "line_no_str": "251",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-4683": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "astype",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dtype='d', order='F'"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AbstractArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def astype("
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "astype",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "order"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "astype",
                        "class_name": "AbstractArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "astype"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "astype",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AbstractArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataWithCoords"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "astype"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "astype",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def astype"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "astype",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "order parameter"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pydata__xarray-4442": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_dataframe"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_series"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MultiIndex"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_series",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_dataframe",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MultiIndex"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_series"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_dataframe"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_series",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_dataframe",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "stack",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_series"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_dataframe"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11276": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "escape",
                        "file_name": "django/utils/html.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.utils.html.escape"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "escape"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mark_safe"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "conditional_escape"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "escape"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.utils.html.escape"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "escape"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def escape("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.utils.html.escape("
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "escape",
                        "file_name": "django/utils/html.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "html.escape"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from django.utils.html import escape",
                        "file_name": "django/utils/html.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "escape"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.utils.html.escape"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "escape()",
                        "file_name": "django/utils/html.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14334": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LocaleMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_supported_language_variant"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "settings.LANGUAGES"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LocaleMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_supported_language_variant"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LocaleMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_supported_language_variant"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LocaleMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_supported_language_variant"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LocaleMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_supported_language_variant"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-9461": [
        [],
        [],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MetaClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SubClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "metaclass_class_property",
                        "class_name": "MetaClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "metaclass_abstract_class_property",
                        "class_name": "MetaClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "baseclass_class_property",
                        "class_name": "BaseClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "baseclass_abstract_class_property",
                        "class_name": "BaseClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subclass_class_property",
                        "class_name": "SubClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subclass_abstract_class_property",
                        "class_name": "SubClass"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@classmethod\\n@property"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autosummary"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MetaClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SubClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "metaclass_class_property",
                        "class_name": "MetaClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "metaclass_abstract_class_property",
                        "class_name": "MetaClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "baseclass_class_property",
                        "class_name": "BaseClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "baseclass_abstract_class_property",
                        "class_name": "BaseClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subclass_class_property",
                        "class_name": "SubClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subclass_abstract_class_property",
                        "class_name": "SubClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@classmethod\\n@property"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "@classmethod",
                        "file_name": "*.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "@property",
                        "file_name": "*.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "conf.py",
                        "file_name": "*.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MetaClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SubClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "metaclass_class_property",
                        "class_name": "MetaClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "metaclass_abstract_class_property",
                        "class_name": "MetaClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "baseclass_class_property",
                        "class_name": "BaseClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "baseclass_abstract_class_property",
                        "class_name": "BaseClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subclass_class_property",
                        "class_name": "SubClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subclass_abstract_class_property",
                        "class_name": "SubClass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@classmethod\\n@property"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extensions",
                        "file_name": "docs/conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "autodoc",
                        "file_name": "docs/conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def setup(app):"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".rst"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extensions",
                        "file_name": "doc/conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "autodoc",
                        "file_name": "doc/conf.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-5205": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "junitxml"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "TestSuite",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "TestCase",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "record_property"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "record_property",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "<properties>"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "<testcase>",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "record-property"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "add_property",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ElementTree.Element",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "<testsuite>",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "<testcase>",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_generate_xml",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogXML"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "add_property",
                        "file_name": "src/_pytest/junitxml.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "<properties>",
                        "file_name": "src/_pytest/junitxml.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "LogXML",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "record_property",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "add_property",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "<testcase>",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "<properties>",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_xml_schema"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "junitxml.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "JUnitXmlReporter",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "add_property",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "record_property",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "<properties>",
                        "file_name": "junitxml.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "record-property",
                        "file_name": "src/_pytest/junitxml.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "properties",
                        "file_name": "src/_pytest/junitxml.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "TestSuite",
                        "file_name": "src/_pytest/junitxml.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "TestCase",
                        "file_name": "src/_pytest/junitxml.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "class responsible for generating the <testcase> XML elements",
                        "file_name": "src/_pytest/junitxml.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "method that currently handles the insertion of properties into test case XML elements",
                        "file_name": "src/_pytest/junitxml.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-14774": [
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "inv_trig_table = [",
                        "file_name": "sympy/printing/latex.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/printing/latex.py",
                        "line_no_str": "743",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "latex",
                        "file_name": "sympy/printing/latex.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "inv_trig_table = ['asin', 'acos', 'atan', 'acot']",
                        "file_name": "sympy/printing/latex.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/printing/latex.py",
                        "line_no_str": "743",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "latex",
                        "file_name": "sympy/printing/latex.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inv_trig_style='full'"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "inv_trig_table = [",
                        "file_name": "sympy/printing/latex.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/printing/latex.py",
                        "line_no_str": "743",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "latex",
                        "file_name": "sympy/printing/latex.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "inv_trig_table = [\"asin\", \"acos\", \"atan\", \"acot\"]",
                        "file_name": "sympy/printing/latex.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/printing/latex.py",
                        "line_no_str": "743",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "inv_trig_table = [",
                        "file_name": "sympy/printing/latex.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/printing/latex.py",
                        "line_no_str": "743",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11389": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SessionStore"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_expiry_age"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_expiry_date"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "settings.SESSION_COOKIE_AGE"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_expiry_age"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_expiry_date"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SESSION_COOKIE_AGE"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SessionStore"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SESSION_COOKIE_AGE"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_expiry_age",
                        "class_name": "SessionStore"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_expiry_date",
                        "class_name": "SessionStore"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_expiry_age",
                        "file_name": "django/contrib/sessions/backends/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_expiry_date",
                        "file_name": "django/contrib/sessions/backends/base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SessionStore"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_expiry_age"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_expiry_date"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "settings.SESSION_COOKIE_AGE"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SessionStore"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_expiry_age",
                        "class_name": "SessionStore"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_expiry_date",
                        "class_name": "SessionStore"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SESSION_COOKIE_AGE"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "SessionBase",
                        "file_name": "django/contrib/sessions/backends/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_expiry_age",
                        "file_name": "django/contrib/sessions/backends/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_expiry_date",
                        "file_name": "django/contrib/sessions/backends/base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12928": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DjangoTemplates"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cached template loader"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "'BACKEND': 'django.template.backends.django.DjangoTemplates'"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DjangoTemplates"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CachedLoader"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TEMPLATES = ["
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "'autoreload': DEBUG"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "load_template"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DjangoTemplates"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TEMPLATES = ["
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cached template loader"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DjangoTemplates"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cached template loader"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "'cache_templates'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "'autoreload'"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_template",
                        "class_name": "DjangoTemplates"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEBUG"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DjangoTemplates"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseLoader"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "'BACKEND': 'django.template.backends.django.DjangoTemplates'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "'cache_templates'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autoreload"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CacheLoader"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "load_template",
                        "class_name": "CacheLoader"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TEMPLATES = ["
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "autoreload",
                        "file_name": "django/utils/autoreload.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_template",
                        "file_name": "django/template/loaders/cached.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12237": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Page"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "slugify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "slugify(allow_unicode=True)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "full_clean",
                        "class_name": "Page"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from django.utils.text import slugify"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "slugify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Page"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Page"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "slugify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "re.sub(r'[^\\\\[\\\\]w\\\\s-]', '', value).strip().lower()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "slug = models.SlugField(allow_unicode=True)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Page"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "slugify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SlugField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".lower()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Page"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "slugify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "re.sub(r'[^\\\\'w\\\\s-]', '', value).strip().lower()"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-25287": [
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Axis",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "set_offset_position",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "color=mpl.rcParams['xtick.color']",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "color=mpl.rcParams['ytick.color']",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "color=mpl.rcParams['xtick.color']"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "color=mpl.rcParams['ytick.color']"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "fontsize=mpl.rcParams['xtick.labelsize']",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "fontsize=mpl.rcParams['ytick.labelsize']",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Axis",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "XAxis",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "YAxis",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "set_label",
                        "file_name": "axis.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "draw",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "color=mpl.rcParams['xtick.color']",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "color=mpl.rcParams['ytick.color']",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "set_offset_position",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "mpl.rcParams['xtick.color']",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "mpl.rcParams['ytick.color']",
                        "file_name": "axis.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16429": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "timesince"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/utils/timesince.py",
                        "line_no_str": "96",
                        "window_size_str": "7"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TestCase"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "timesince"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/utils/timesince.py",
                        "line_no_str": "93",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "timesince"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/utils/timesince.py",
                        "line_no_str": "96",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "now"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "requires_tz_support"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "override_settings"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "timesince"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/utils/timesince.py",
                        "line_no_str": "93",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TimesinceTests"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "timesince"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "test_long_interval_with_tz"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "datetime.datetime"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15037": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inspectdb"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_table"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FOREIGN KEY"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inspectdb"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inspectdb"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FOREIGN KEY"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.ForeignKey"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inspectdb"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "inspectdb"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_foreign_key"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "inspectdb"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_foreign_key_constraints"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_relations"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_field_type"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unique=True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ForeignKey"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inspectdb"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Command"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-25746": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tick_params"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tick_params"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "tick_params",
                        "class_name": "Axis"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tick_params"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "class_name",
                        "file_name": "file_name"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "tick_params",
                        "file_name": "file_path"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "tick_params",
                        "file_name": "lib/matplotlib/axes/_base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tick_params"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tick_params"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tick_params"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "tick_params",
                        "file_name": "lib/matplotlib/axes/_base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "tick_params",
                        "file_name": "lib/mpl_toolkits/mplot3d/axes3d.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12198": [
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "authenticate",
                        "class_name": "AuthenticationBackend"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def sensitive_variables"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inspect.getcallargs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def sensitive_variables"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationBackend"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "authenticate",
                        "class_name": "AuthenticationBackend"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@sensitive_variables"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inspect.getcallargs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AuthenticationBackend"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "authenticate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def sensitive_variables"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "authenticate",
                        "file_name": "django/contrib/auth/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "authenticate",
                        "file_name": "django/contrib/auth/backends.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "sensitive_variables",
                        "file_name": "django/contrib/auth/backends.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "sensitive_variables",
                        "file_name": "django/contrib/auth/__init__.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sensitive_variables"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationBackend"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "authenticate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inspect.getcallargs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sensitive_variables"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationBackend"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "authenticate",
                        "class_name": "AuthenticationBackend"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inspect.getcallargs"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-14180": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_to_latex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex(ln("
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_latex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "math_to_latex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "log"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathConverter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexConverter"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "log",
                        "file_name": "sympy/parsing/latex/_parse_latex_antlr.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "log",
                        "file_name": "sympy/functions/elementary/exponential.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex(ln"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "log{\\\\left"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "LatexPrinter",
                        "file_name": "sympy/printing/latex.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "toLatex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "log{\\\\left(10\\right)}"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ln(10)"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convertToLatex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expressionToLatex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexConverter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathToLatex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "toLatex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\log"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex(ln"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "log{\\\\left"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convertToLaTeX"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex(ln("
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LaTeXConverter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ln("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "log("
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14717": [
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/models/fields/__init__.py",
                        "line_no_str": "1156",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_check_fix_default_value",
                        "file_name": "django/db/models/fields/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "timezone.now()",
                        "file_name": "django/db/models/fields/__init__.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_check_fix_default_value",
                        "file_name": "django/db/models/fields/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/models/fields/__init__.py",
                        "line_no_str": "1156",
                        "window_size_str": "6"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_check_fix_default_value",
                        "file_name": "django/db/models/fields/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/models/fields/__init__.py",
                        "line_no_str": "1156",
                        "window_size_str": "6"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/models/fields/__init__.py",
                        "line_no_str": "1156",
                        "window_size_str": "15"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_check_fix_default_value",
                        "file_name": "django/db/models/fields/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "timezone.now()",
                        "file_name": "django/db/models/fields/__init__.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/models/fields/__init__.py",
                        "line_no_str": "1156",
                        "window_size_str": "12"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_check_fix_default_value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "timezone.now()"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13265": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LookImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "AlterOrderWithRespectTo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.AddIndex"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LookImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Look"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AlterOrderWithRespectTo"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.AddIndex"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/migrations/autodetector.py",
                        "line_no_str": "line_number",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LookImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AlterOrderWithRespectTo"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LookImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AlterOrderWithRespectTo"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AddIndex"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LookImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "AlterOrderWithRespectTo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "AddIndex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_order"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14730": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_field",
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "symmetrical"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "related_name"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "symmetrical"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_field",
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "symmetrical"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "check",
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField(related_name="
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField(symmetrical="
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "astropy__astropy-13462": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "two_sum"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "astropy/time/tests/test_precision.py",
                        "line_no_str": "314",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "two_sum",
                        "file_name": "astropy/time/tests/test_precision.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "astropy/time/tests/test_precision.py",
                        "line_no_str": "315",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "two_sum"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "two_sum",
                        "file_name": "astropy/time/tests/test_precision.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "two_sum"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "astropy/time/tests/test_precision.py",
                        "line_no_str": "314",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "astropy/time/tests/test_precision.py",
                        "line_no_str": "314",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "two_sum"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "two_sum"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "astropy/time/tests/test_precision.py",
                        "line_no_str": "315",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-9260": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "anchor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fetch"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_anchor"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_anchor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "extract_anchor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "process_link"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AnchorCheckParser"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_anchor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_url"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "user-content-"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AnchorCheckParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parser.feed"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parser.found"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "validate_anchor",
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "parse_anchor",
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "check_url",
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "<a name="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "<a id="
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_links"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_links"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "link check"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "external references"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse_url"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render_documentation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_html"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "builder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "document"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rst"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-7737": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "biweight_location"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "biweight_location"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "biweight_location(np.ones(4))"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "median_absolute_deviation"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "biweight_location"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "biweight_location"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mad"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "biweight_location"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mad of array"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "median_absolute_deviation"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-9229": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ScaffoldOpts ="
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FileContents ="
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FileOp ="
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extensions =",
                        "file_name": "conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc",
                        "file_name": "conf.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extensions = ['sphinx.ext.autodoc']",
                        "file_name": "conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ScaffoldOpts = Dict[str, Any]",
                        "file_name": "file.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "FileContents = Union[str, None]",
                        "file_name": "file.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "FileOp = Callable[[Path, FileContents, ScaffoldOpts], Union[Path, None]]",
                        "file_name": "file.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def setup(app):",
                        "file_name": "conf.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ScaffoldOpts = Dict[str, Any]",
                        "file_name": "file.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "FileContents = Union[str, None]",
                        "file_name": "file.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "FileOp = Callable[[Path, FileContents, ScaffoldOpts], Union[Path, None]]",
                        "file_name": "file.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extensions = ['sphinx.ext.autodoc']",
                        "file_name": "conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": ".. toctree::",
                        "file_name": "index.rst"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc",
                        "file_name": "conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx_autodoc_typehints"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autodoc extension"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type alias documentation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docstring processing"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ScaffoldOpts =",
                        "file_name": "file.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "FileContents =",
                        "file_name": "file.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "FileOp =",
                        "file_name": "file.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extensions = [",
                        "file_name": "conf.py"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ScaffoldOpts"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FileContents"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FileOp"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_documenter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "extensions = ["
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13023": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_python",
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_python",
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ValidationError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_python",
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_python",
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ValidationError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_python"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11991": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_index",
                        "class_name": "BaseDatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_constraint",
                        "class_name": "BaseDatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "include"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__init__",
                        "file_name": "indexes.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__init__",
                        "file_name": "constraints.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_index",
                        "class_name": "BaseDatabaseSchemaEditor"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_index",
                        "class_name": "BaseDatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_constraint",
                        "class_name": "BaseDatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fields="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "condition="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_index",
                        "class_name": "BaseDatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_constraint",
                        "class_name": "BaseDatabaseSchemaEditor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CREATE INDEX"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UniqueConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDatabaseSchemaEditor"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-8697": [
        [],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "download"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.path"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "copy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Directive"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "download:",
                        "file_name": "sphinx/transforms/post_transforms/images.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "os.path.normpath",
                        "file_name": "sphinx/transforms/post_transforms/images.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "static",
                        "file_name": "sphinx/util/fileutil.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.directives"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "download:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.path.normpath"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "copy_resource"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "directive"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "build process"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":download:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "copy_asset_files"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "build_finished"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.path.normpath"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Builder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write_doc",
                        "class_name": "Builder"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "normpath"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":download:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Document"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StaticFile"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-22991": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sca"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SubFigure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "int() argument must be a string, a bytes-like object or a number, not 'SubFigure'"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sca"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fig.subfigures"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "figure"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "sca",
                        "file_name": "matplotlib/pyplot.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "figure",
                        "file_name": "matplotlib/pyplot.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SubFigure"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sca"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SubFigure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "figure"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sca"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SubFigure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "figure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "plt.subplots"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13722": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "InlineModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_formset",
                        "class_name": "InlineModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_changeform_initial_data",
                        "class_name": "InlineModelAdmin"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "InlineModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_changeform_initial_data",
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_formset"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "InlineModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_changeform_initial_data"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "formset"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "InlineModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_changeform_initial_data"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "formset initialization"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_formset",
                        "class_name": "InlineModelAdmin"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "InlineModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_formset",
                        "class_name": "InlineModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_changeform_initial_data"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16983": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filter_horizontal"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filter_vertical"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField(through="
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "ManyToManyField",
                        "class_name": "models"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filter_horizontal"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filter_vertical"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField(through="
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ManyToManyField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filter_horizontal"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filter_vertical"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "filter_horizontal",
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "filter_vertical",
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "check",
                        "class_name": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField(through="
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "system checks ModelAdmin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin check framework"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-7468": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--log-file"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_logfile_option"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.makedirs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--log-file"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "configure_logging"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.makedirs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--log-file"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "setup_logging"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--log-file"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "os.makedirs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "open"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--log-file"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-15586": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.linalg.inv"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.linalg.inv"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "X0**-1"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.linalg.inv"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.linalg.inv"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixSymbol('X0',2,2)**-1"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "lambdify(X0,X0Inv)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixSymbol('X0',2,2)**-1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.linalg.inv"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixSymbol's **-1 operation"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-16952": [
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ItalianRestaurantManyParents",
                        "file_name": "tests/model_inheritance/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "create",
                        "file_name": "/django/django/db/models/query.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_save_parents",
                        "file_name": "/django/django/db/models/base.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "save",
                        "class_name": "Django model base class"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_save_parents",
                        "class_name": "Django model base class"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ManyToManyField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MTI"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ItalianRestaurant",
                        "file_name": "tests/model_inheritance/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Place",
                        "file_name": "tests/model_inheritance/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ItalianRestaurantManyParents",
                        "file_name": "tests/model_inheritance/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_create_diamond_mti_common_parents",
                        "file_name": "tests/model_inheritance/tests.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "save"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_save_parents"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "OneToOneField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ItalianRestaurantManyParents"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ItalianRestaurant",
                        "file_name": "tests/model_inheritance/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Place",
                        "file_name": "tests/model_inheritance/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_save_parents",
                        "class_name": "Model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "create",
                        "file_name": "/django/django/db/models/query.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def test_create_diamond_mti_common_parents(self):",
                        "file_name": "tests/model_inheritance/tests.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ItalianRestaurant",
                        "file_name": "tests/model_inheritance/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ItalianRestaurantManyParents",
                        "file_name": "tests/model_inheritance/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Place",
                        "file_name": "tests/model_inheritance/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Supplier",
                        "file_name": "tests/model_inheritance/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "save_base"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_save_parents"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OneToOneField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ItalianRestaurantManyParents",
                        "file_name": "tests/model_inheritance/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "save",
                        "class_name": "Model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_save_parents",
                        "class_name": "Model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OneToOneField"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-14520": [
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "TfidfVectorizer",
                        "file_name": "sklearn/feature_extraction/text.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__init__",
                        "file_name": "sklearn/feature_extraction/text.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/feature_extraction/text.py",
                        "line_no_str": "1669",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/feature_extraction/text.py",
                        "line_no_str": "1692",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/feature_extraction/text.py",
                        "line_no_str": "1669",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/feature_extraction/text.py",
                        "line_no_str": "1692",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "TfidfVectorizer",
                        "file_name": "sklearn/feature_extraction/text.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/feature_extraction/text.py",
                        "line_no_str": "1692",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "TfidfVectorizer",
                        "file_name": "sklearn/feature_extraction/text.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/feature_extraction/text.py",
                        "line_no_str": "1669",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/feature_extraction/text.py",
                        "line_no_str": "1692",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "TfidfVectorizer",
                        "file_name": "sklearn/feature_extraction/text.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit_transform",
                        "file_name": "sklearn/feature_extraction/text.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/feature_extraction/text.py",
                        "line_no_str": "1669",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/feature_extraction/text.py",
                        "line_no_str": "1692",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15863": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Decimal("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Template"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Decimal('42.12345678901234567890')"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Decimal to float conversion"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "{{ value|floatformat"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Decimal('42.12345678901234567890')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "value|floatformat"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Decimal("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".to_float("
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Template"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Context"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-25672": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_check_dcg_target_type"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ndcg_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Only ('multilabel-indicator', 'continuous-multioutput', 'multiclass-multioutput') formats are supported. Got binary instead"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_check_dcg_target_type"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ndcg_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "raise ValueError(",
                        "file_name": "/Users/cbournhonesque/.pyenv/versions/bento/lib/python3.8/site-packages/sklearn/metrics/_ranking.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ndcg_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_check_dcg_target_type"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Only ('multilabel-indicator', 'continuous-multioutput', 'multiclass-multioutput') formats are supported. Got binary instead"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ndcg_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_check_dcg_target_type"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "metrics.ndcg_score(t, p)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_check_dcg_target_type(y_true)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ndcg_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_check_dcg_target_type"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11808": [
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "Model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Model",
                        "file_name": "django/db/models/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "return False",
                        "file_name": "django/db/models/base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Model",
                        "file_name": "django/db/models/base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "Model"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "Model"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "Model"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "Model"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16883": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "inspectdb.Command"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "table name to model",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": ""
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "table name to model name",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "The primary class handling the `inspectdb` command",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "method responsible for parsing the database schema and translating table names into Django model names",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "method responsible for converting database table names to Django model class names",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "BaseCommand",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "BaseCommand",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "BaseCommand",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "convert_table_name_to_model_name",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "column_name_to_python",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "table name to model name",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Command",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_field_type",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "table name to model",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Command",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "table2model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_field_type",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/core/management/commands/inspectdb.py",
                        "line_no_str": "265",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "table2model",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "column2field"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class Command(BaseCommand):",
                        "file_name": "django/core/management/commands/inspectdb.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-13453": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "Table"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "formats"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "Table"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "format=\"html"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UnifiedReadWriteMethod"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TableWrite"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "Table"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "format='html'"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write_table_html"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "write('html'"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "HTML"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "write(format=\"html"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "format='html'"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "formats={"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "write",
                        "file_name": "astropy/io/ascii/html.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-25102": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SelectKBest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_SetOutputMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_wrap_in_pandas_container"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_wrap_data_with_container"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "set_output"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_SetOutputMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_wrap_in_pandas_container"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "set_output"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_SetOutputMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_output"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_wrap_in_pandas_container"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_wrap_data_with_container"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "transform=\"pandas"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_SetOutputMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_wrap_in_pandas_container"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_wrap_data_with_container"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SelectKBest"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_output"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_wrap_in_pandas_container"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_wrap_data_with_container"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class _SetOutputMixin"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14309": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "combine"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def combine(self, other, connector, negate)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__and__",
                        "class_name": "Q"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__and__",
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__invert__",
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__invert__",
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "negated"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "combine"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__and__",
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__invert__",
                        "class_name": "Q"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "combine",
                        "class_name": "Q"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "~Exists"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__and__",
                        "file_name": "django/db/models/query_utils.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__invert__",
                        "file_name": "django/db/models/query_utils.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__invert__",
                        "file_name": "django/db/models/expressions.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-24102": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mathematica"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_mathematica"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SyntaxError: unable to create a single AST"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathematicaParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "parse",
                        "class_name": "MathematicaParser"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_mathematica"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathematicaParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mathematica('\u03bb')"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mathematica"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_mathematica"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sympy.parsing.mathematica"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_mathematica"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Greek characters"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathematicaParser"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_mathematica"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from sympy.parsing.mathematica import parse_mathematica"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "mathematica"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathematicaParser"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12155": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "trim_docstring"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. default-role::"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Error in \"default-role\" directive: no content permitted."
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "trim_docstring"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indent = min(len(line) - len(line.lstrip()) for line in lines if line.lstrip())"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "trim_docstring"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indent = min(len(line) - len(line.lstrip()) for line in lines if line.lstrip())"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "trim_docstring"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "indent = min(len(line) - len(line.lstrip()) for line in lines if line.lstrip())",
                        "file_name": "docutils.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "trim_docstring"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indent = min(len(line) - len(line.lstrip()) for line in lines if line.lstrip())"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15240": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationRecorder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "squashmigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "migrate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django_migrations"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationRecorder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "record_applied",
                        "class_name": "MigrationRecorder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "flush",
                        "class_name": "MigrationRecorder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "squashmigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrate.Command"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrateCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply_migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "squash",
                        "file_name": "django/db/migrations/operations.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "apply_migration",
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "record_unapplied_migrations",
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "detect_soft_applied"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "replaces ="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationRecorder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrateCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply_migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "squashmigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django_migrations"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "apply_migration",
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "squashmigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django_migrations"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "record_migration",
                        "class_name": "MigrationExecutor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationRecorder"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-13933": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Angle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_string",
                        "class_name": "Angle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__reduce__",
                        "class_name": "Angle"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "hourangle"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Angle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_string"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pickle"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Angle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_string",
                        "class_name": "Angle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "hourangle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "degree"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Angle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_string",
                        "class_name": "Angle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pickle.loads(pickle.dumps("
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Angle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_string"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pickle.loads(pickle.dumps"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-9296": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "page_range",
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "page",
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iter__",
                        "class_name": "Paginator"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "page_range",
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "page",
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "page_range",
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "page",
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "page_range",
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iter__",
                        "class_name": "Paginator"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "page",
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "page_range",
                        "class_name": "Paginator"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-9274": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MLPRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MLPClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "MLPRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "MLPClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "solver='lbfgs'"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_fit",
                        "class_name": "BaseMultilayerPerceptron"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "max_iter",
                        "file_name": "sklearn/neural_network/multilayer_perceptron.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MLPRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MLPClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "MLPRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "MLPClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "solver='lbfgs'"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "`max_iter`"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_fit",
                        "class_name": "MLPRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_fit",
                        "class_name": "MLPClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseMultilayerPerceptron"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MLPRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MLPClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "MLPRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "MLPClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "solver='lbfgs'"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_fit",
                        "class_name": "MLPRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_fit",
                        "class_name": "MLPClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self.solver",
                        "file_name": "sklearn/neural_network/multilayer_perceptron.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MLPRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MLPClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "MLPRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "MLPClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "solver='lbfgs'"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_fit",
                        "class_name": "BaseMultilayerPerceptron"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "lbfgs",
                        "file_name": "sklearn/neural_network/multilayer_perceptron.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MLPRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MLPClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "solver='lbfgs'"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "BaseMultilayerPerceptron",
                        "file_name": "file_path"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "solver configuration",
                        "class_name": "BaseMultilayerPerceptron"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit",
                        "file_name": "sklearn/neural_network/multilayer_perceptron.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_fit",
                        "file_name": "sklearn/neural_network/multilayer_perceptron.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "solver='lbfgs'",
                        "file_name": "sklearn/neural_network/multilayer_perceptron.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-14311": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autoreloader"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__main__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "-m"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "foo.bar.baz"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autoreloader"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "-m"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dotted module name"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Autoreloader"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autoreload"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if __name__ == '__main__' and '.' in __package__:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "runserver",
                        "class_name": "Command"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "runserver"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sys.argv"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "importlib"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autoreload"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.core.management.execute_from_command_line"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_main_module"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "runserver"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autoreload"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "-m"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autoreloader"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "runserver"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__main__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "python -m"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-16221": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathematicaPrinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "print"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Mathematica"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "print"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Print"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "print"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "matrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Mathematica"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Printer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OutputFormatter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "print"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "formatOutput"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "print"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Printer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "display"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "data type handling"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Mathematica integration"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "handle Mathematica data"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PrintManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OutputHandler"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "printObject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "displayOutput"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Wolfram Mathematica"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Matrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Array"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-25363": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Parallel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delayed"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "configuration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "warning"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Parallel("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "delayed("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "config"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "context"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scikit-learn"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "warning"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Parallel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delayed"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import scikit-learn"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "warning"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "joblib.Parallel"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import sklearn"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/utils/fixes.py",
                        "line_no_str": "110",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parallel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delayed"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "raise warning"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Parallel config"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "delayed config"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parallel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "delayed"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Parallel"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "configuration"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13606": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "split_exclude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "NOT IN"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "split_exclude"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "split_exclude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "NOT IN (SELECT child.parent_id"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "split_exclude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parent.id NOT IN (SELECT child.parent_id"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "split_exclude",
                        "class_name": "Query"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "psf__requests-1888": [
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "requests/adapters.py",
                        "line_no_str": "181",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_redirects"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "sendall",
                        "class_name": "Connection"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if isinstance(buf, _memoryview):"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "url = urlparse(response.url).geturl()",
                        "file_name": "requests/adapters.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_redirects"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "sendall",
                        "class_name": "OpenSSL.SSL.Connection"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_redirects"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Connection"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "sendall",
                        "class_name": "Connection"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_redirects"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Connection"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "sendall",
                        "class_name": "Connection"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.get"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_redirects"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if not isinstance(buf, bytes):"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-14447": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_cull",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/core/cache/backends/db.py",
                        "line_no_str": "120",
                        "window_size_str": "11"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/core/cache/backends/db.py",
                        "line_no_str": "254",
                        "window_size_str": "6"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MAX_ENTRIES"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CULL_FREQUENCY"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_cull",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SELECT COUNT(*) FROM %s' % table"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_cull",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SELECT COUNT(*) FROM %s' % table"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DELETE FROM %s WHERE expires < %%s' % table"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "cull",
                        "file_name": "django/core/cache/backends/db.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "SELECT COUNT(*) FROM",
                        "file_name": "django/core/cache/backends/db.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-7147": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CFDatetimeCoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode_cf_datetime"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_decode_cf_datetime_dtype"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode_cf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CFDatetimeCoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_decode_cf_datetime_dtype"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "decode_cf_variable",
                        "file_name": "conventions.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CFDatetimeCoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode_cf_datetime"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode_cf_variable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "decode_cf"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decode_cf_datetime",
                        "file_name": "xarray/coding/times.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_decode_datetime_with_pandas",
                        "file_name": "xarray/coding/times.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_decode_cf_datetime_dtype",
                        "file_name": "xarray/coding/times.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_decode_datetime_with_cftime",
                        "file_name": "xarray/coding/times.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decode_cf",
                        "file_name": "xarray/conventions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decode_cf_variables",
                        "file_name": "xarray/conventions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decode_cf_variable",
                        "file_name": "xarray/conventions.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode_cf_datetime"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_decode_datetime_with_pandas"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_decode_datetime_with_cftime"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decode_cf",
                        "file_name": "conventions.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-10508": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LabelEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "LabelEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.searchsorted"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LabelEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "LabelEncoder"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LabelEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "LabelEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.searchsorted"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LabelEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "LabelEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "LabelEncoder"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LabelEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "LabelEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "LabelEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.searchsorted(self.classes_, y)"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7351": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. toctree::"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MySTParser"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "config"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "file extension preference"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "build_process"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_file"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "toctree"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".rst"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".md"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "myst-parser"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "source_suffix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "add_source_parser",
                        "file_name": "sphinx/application.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "extensions"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "setup_ext"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "toctree"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_extension_conflict"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_file_extension"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "load_extension"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_extension"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Document"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parser"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_docname"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_document"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "file extension"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "config"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_config_value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "document processor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "extension manager"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "TocTree"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. toctree::"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "config"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "extension"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "toctree"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "file extension"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExtensionManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_source_parser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "log warning"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "resolve conflicts"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-15685": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_dimension"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_to"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scale_factor"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "scale_factor",
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_dimension",
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_to"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scale_factor = 1.0"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "kilogram workaround"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_dimension",
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_to"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scale_factor"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_dimension",
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_to"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scale_factor"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".scale_factor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_dimension"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "kilogram workaround"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7501": [
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "glossary.rst",
                        "file_name": "doc/glossary.rst"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "Sphinx",
                        "file_name": "doc/Makefile"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "doc/glossary.rst",
                        "line_no_str": "243",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "doc/glossary.rst",
                        "line_no_str": "234",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "glossary",
                        "file_name": "doc/conf.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "doc/glossary.rst",
                        "line_no_str": "243",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "doc/glossary.rst",
                        "line_no_str": "234",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "glossary"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Sphinx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "make html"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "doc/glossary.rst",
                        "line_no_str": "243",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "glossary.rst"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conf.py"
                    },
                    "call_ok": true
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "doc/glossary.rst",
                        "line_no_str": "243",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                }
            ],
            [],
            []
        ]
    ],
    "sympy__sympy-18478": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Add"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mul"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Infinity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Cos"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exp"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cos"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "exp"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "exp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "cos"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AccumBounds"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "oo"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Add"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mul"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exp"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Cos"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "oo"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subs",
                        "class_name": "Exp"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subs",
                        "class_name": "Cos"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "subs",
                        "file_name": "sympy/core/basic.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Exp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Cos"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "oo",
                        "file_name": "sympy/core/numbers.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AccumBounds"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "oo"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subs",
                        "class_name": "Function"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "eval",
                        "class_name": "Function"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "eval",
                        "class_name": "Exp"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "eval",
                        "class_name": "Cos"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "exp",
                        "class_name": "Function"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "cos",
                        "class_name": "Function"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "oo"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-13346": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_evalf_fast_series",
                        "file_name": "sympy/concrete/tests/test_sums_products.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_legendre",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_laguerre",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_hermite",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_gen_laguerre",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_jacobi",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_CRootOf_eval_rational",
                        "file_name": "sympy/polys/tests/test_rootoftools.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_sin",
                        "file_name": "sympy/utilities/tests/test_lambdify.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "DeferredVector",
                        "file_name": "sympy/matrices/matrices.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/concrete/tests/test_sums_products.py",
                        "line_no_str": "334",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/concrete/tests/test_sums_products.py",
                        "line_no_str": "355",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/integrals/tests/test_quadrature.py",
                        "line_no_str": "36",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/integrals/tests/test_quadrature.py",
                        "line_no_str": "73",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/polys/tests/test_rootoftools.py",
                        "line_no_str": "297",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/utilities/tests/test_lambdify.py",
                        "line_no_str": "305",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "DeferredVector",
                        "file_name": "sympy/matrices/matrices.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_evalf_fast_series",
                        "file_name": "sympy/concrete/tests/test_sums_products.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_evalf_fast_series_issue_4021",
                        "file_name": "sympy/concrete/tests/test_sums_products.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_legendre",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_laguerre",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_CRootOf_eval_rational",
                        "file_name": "sympy/polys/tests/test_rootoftools.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_sin",
                        "file_name": "sympy/utilities/tests/test_lambdify.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "DeferredVector",
                        "file_name": "sympy/matrices/matrices.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/concrete/tests/test_sums_products.py",
                        "line_no_str": "334",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/concrete/tests/test_sums_products.py",
                        "line_no_str": "355",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/integrals/tests/test_quadrature.py",
                        "line_no_str": "36",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/integrals/tests/test_quadrature.py",
                        "line_no_str": "73",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/integrals/tests/test_quadrature.py",
                        "line_no_str": "113",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/integrals/tests/test_quadrature.py",
                        "line_no_str": "148",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/integrals/tests/test_quadrature.py",
                        "line_no_str": "199",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/integrals/tests/test_quadrature.py",
                        "line_no_str": "285",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/integrals/tests/test_quadrature.py",
                        "line_no_str": "443",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/integrals/tests/test_quadrature.py",
                        "line_no_str": "529",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/polys/tests/test_rootoftools.py",
                        "line_no_str": "297",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/utilities/tests/test_lambdify.py",
                        "line_no_str": "305",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class DeferredVector"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_evalf_fast_series",
                        "file_name": "sympy/concrete/tests/test_sums_products.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_evalf_fast_series_issue_4021",
                        "file_name": "sympy/concrete/tests/test_sums_products.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_legendre",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_laguerre",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_laguerre_precise",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_hermite",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_gen_laguerre",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_gen_laguerre_precise",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_jacobi",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_jacobi_precise",
                        "file_name": "sympy/integrals/tests/test_quadrature.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_CRootOf_eval_rational",
                        "file_name": "sympy/polys/tests/test_rootoftools.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "test_sin",
                        "file_name": "sympy/utilities/tests/test_lambdify.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "DeferredVector",
                        "file_name": "sympy/matrices/matrices.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-18667": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Schur_Number"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Schur_Number"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sum-free sets"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MathUtils"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "partition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "prime number"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "test"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [],
        [],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SchurNumber"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "calculateSchurNumber"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Schur_Number"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sum-free sets"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "partition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "number theory"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SchurNumber"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "partition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "proveByInduction"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "calculateSchurNumber"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "test Schur Number"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Combinatorics"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "partition",
                        "file_name": "sympy/combinatorics/partitions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "Schur",
                        "file_name": "test_combinatorics.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "is_sum_free",
                        "file_name": "sympy/utilities/iterables.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-13574": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "randMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "symmetric=True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "percent="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "randMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "symmetric=True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "percent"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "randMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "symmetric=True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "percent="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "randMatrix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "percent"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "randMatrix"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-25079": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogNorm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "colorbar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pcolormesh"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "update_scalarmappable",
                        "class_name": "Collection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__call__",
                        "class_name": "LogNorm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "draw",
                        "class_name": "Collection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "draw",
                        "class_name": "Figure"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogNorm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "update_scalarmappable",
                        "file_name": "matplotlib/collections.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "plot.norm = LogNorm(vmin, vmax)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fig.colorbar(plot, ax=ax)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogNorm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "update_scalarmappable",
                        "class_name": "Collection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__call__",
                        "class_name": "Norm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autoscale"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogNorm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "autoscale",
                        "file_name": "lib/matplotlib/axes/_base.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LogNorm"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogNorm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "update_scalarmappable",
                        "class_name": "Collection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Collection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "update_scalarmappable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__call__"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__call__",
                        "file_name": "lib/matplotlib/colors.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "LogNorm",
                        "file_name": "lib/matplotlib/colors.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "LogNorm",
                        "file_name": "lib/matplotlib/colors.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__call__",
                        "class_name": "LogNorm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "vmin' and 'vmax' and 'LogNorm"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogNorm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "LogNorm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "vmin and vmax"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogNorm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "update_scalarmappable",
                        "class_name": "Collection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__call__",
                        "class_name": "LogNorm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autoscale"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fig.colorbar(plot, ax=ax)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "colorbar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class LogNorm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "vmin",
                        "file_name": "lib/matplotlib/colors.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "vmax",
                        "file_name": "lib/matplotlib/colors.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15347": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Message"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MessageEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MessageDecoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "encode",
                        "class_name": "MessageEncoder"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "decode",
                        "class_name": "MessageDecoder"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "default",
                        "class_name": "MessageEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "process_messages",
                        "class_name": "MessageDecoder"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Message"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MessageEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MessageDecoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "encode",
                        "class_name": "MessageEncoder"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "decode",
                        "class_name": "MessageDecoder"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "default",
                        "class_name": "MessageEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "process_messages",
                        "class_name": "MessageDecoder"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MessageEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MessageDecoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Message"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "encode",
                        "class_name": "MessageEncoder"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "decode",
                        "class_name": "MessageDecoder"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "default",
                        "class_name": "MessageEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "process_messages",
                        "class_name": "MessageDecoder"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Message"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "encode",
                        "class_name": "MessageEncoder"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "decode",
                        "class_name": "MessageDecoder"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "encode",
                        "file_name": "django/contrib/messages/storage/cookie.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Message"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MessageEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MessageDecoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "encode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decode"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "default",
                        "class_name": "MessageEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "decode",
                        "class_name": "MessageDecoder"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-15349": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "to_rotation_matrix",
                        "file_name": "sympy/algebras/quaternion.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/algebras/quaternion.py",
                        "line_no_str": "489",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "to_rotation_matrix",
                        "file_name": "sympy/algebras/quaternion.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/algebras/quaternion.py",
                        "line_no_str": "489",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "to_rotation_matrix",
                        "file_name": "sympy/algebras/quaternion.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "to_rotation_matrix",
                        "file_name": "sympy/algebras/quaternion.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/algebras/quaternion.py",
                        "line_no_str": "489",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Quaternion"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_rotation_matrix",
                        "class_name": "Quaternion"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "to_rotation_matrix",
                        "file_name": "sympy/algebras/quaternion.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "rotation matrix",
                        "file_name": "sympy/algebras/quaternion.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-18961": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "digits"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/ntheory/digits.py",
                        "line_no_str": "37",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class ",
                        "file_name": "sympy/ntheory/digits.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "test_digits"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "digits",
                        "file_name": "sympy/ntheory/digits.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def digits(",
                        "file_name": "sympy/ntheory/digits.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def test_digits"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "digits",
                        "file_name": "sympy/ntheory/digits.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/ntheory/digits.py",
                        "line_no_str": "40",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "digits",
                        "file_name": "sympy/ntheory/digits.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/ntheory/digits.py",
                        "line_no_str": "37",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "digits",
                        "file_name": "sympy/ntheory/digits.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def test_digits"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "test_digits"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ntheory test"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-11099": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASCIIUsernameValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UnicodeUsernameValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "r'^[\\\\w.@+-]+$'"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASCIIUsernameValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UnicodeUsernameValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "^[\\\\w.@+-]+$"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASCIIUsernameValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UnicodeUsernameValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "^[\\x08w.@+-]+$"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASCIIUsernameValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UnicodeUsernameValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "r'^[\\\\w.@+-]+$'"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASCIIUsernameValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UnicodeUsernameValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "r'^[\\\\w.@+-]+$'"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-8641": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColoredLevelFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "LEVELNAME_FMT_REGEX",
                        "file_name": "src/_pytest/logging.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColoredLevelFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LEVELNAME_FMT_REGEX"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColoredLevelFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/logging.py",
                        "line_no_str": "62",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "format",
                        "class_name": "ColoredLevelFormatter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColoredLevelFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/logging.py",
                        "line_no_str": "62",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LEVELNAME_FMT_REGEX"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "log_cli_format"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColoredLevelFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LEVELNAME_FMT_REGEX"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "format",
                        "class_name": "ColoredLevelFormatter"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-12891": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mean",
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.mean"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mean",
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.mean"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "kwargs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mean",
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.mean"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mean",
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "where"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "quantity_to_numpy"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mean",
                        "class_name": "Quantity"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.mean"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "where"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-13033": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "remove_column",
                        "class_name": "TimeSeries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "TimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TimeSeries object is invalid"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "remove_column",
                        "class_name": "TimeSeries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "required_columns"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "remove_column",
                        "class_name": "TimeSeries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_required_columns"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "remove_column",
                        "file_name": "astropy/timeseries/core.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "remove_column",
                        "class_name": "TimeSeries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "validate_columns",
                        "class_name": "TimeSeries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_required_columns"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "remove_column",
                        "class_name": "TimeSeries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "validate",
                        "class_name": "TimeSeries"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseTimeSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "remove_column"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "psf__requests-1376": [
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "RequestsTestCase",
                        "file_name": "test_requests.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_unicode_multipart_post_fieldnames",
                        "file_name": "test_requests.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "test_requests.py",
                        "line_no_str": "356",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RequestsTestCase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "httpbin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".encode('utf-8')"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_unicode_multipart_post_fieldnames",
                        "file_name": "test_requests.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RequestsTestCase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.Request"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "test_requests.py",
                        "line_no_str": "356",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "multipart/form-data",
                        "file_name": "requests/models.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "Request.prepare",
                        "file_name": "requests/models.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RequestsTestCase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_unicode_multipart_post_fieldnames",
                        "file_name": "test_requests.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "prepare",
                        "class_name": "Request"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "test_requests.py",
                        "line_no_str": "356",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "prepare_body",
                        "class_name": "PreparedRequest"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RequestsTestCase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_unicode_multipart_post_fieldnames",
                        "class_name": "RequestsTestCase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "multipart"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "prep.body",
                        "file_name": "test_requests.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RequestsTestCase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "test_unicode_multipart_post_fieldnames",
                        "class_name": "RequestsTestCase"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Request"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "prep.body"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "prepare_body",
                        "file_name": "requests/models.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "multipart/form-data",
                        "file_name": "requests/models.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pallets__flask-4160": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "default",
                        "class_name": "JSONEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "app.json_encoder ="
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dumps"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "app.json_encoder ="
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "default",
                        "class_name": "JSONEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "app.json_encoder"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "default",
                        "class_name": "JSONEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "app.json_encoder ="
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONEncoder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dumps"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "app.json_encoder ="
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pydata__xarray-3156": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "groupby",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_groupby_cls"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "groupby",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mean",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArrayGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "groupby"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "groupby",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArrayGroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mean",
                        "class_name": "DataArrayGroupBy"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "groupby"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GroupBy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mean",
                        "class_name": "GroupBy"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "groupby",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "groupby"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "groupby"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13371": [
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "values_list",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Row"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pickle.dumps"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Row"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "NamedValuesListIterable"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Row"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "values_list",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class Row",
                        "file_name": "django/db/models/query.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__reduce__"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "NamedValuesListIterable"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Row"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "values_list",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__reduce__",
                        "class_name": "QuerySet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__reduce__",
                        "class_name": "Row"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "NamedValuesListIterable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pickle"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Row"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__reduce__",
                        "class_name": "Row"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "values_list"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "namedtuple"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Row"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "values_list"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "NamedValuesListIterable"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-11400": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ccode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sinc(x)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Piecewise"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ccode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "Piecewise",
                        "class_name": "ccode"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sinc"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Not supported in C"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ccode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sinc(x)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ccode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sinc(x)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ccode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Piecewise"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Ne(theta, 0)) ? (\\n   sin(theta)/theta\\n)\\n: (\\n   1\\n)"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7889": [
        [
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TypeVar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "GenericType[T]"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mock._make_subclass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "typing.Generic"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TypeVar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_make_subclass"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TypeVar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mock._make_subclass"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "TypeVar",
                        "file_name": "sphinx/util/typing.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "TypeVar",
                        "file_name": "sphinx/ext/autodoc/__init__.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mock._make_subclass"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TypeVar"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "TypeVar",
                        "file_name": "sphinx/ext/autodoc/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "TypeVar",
                        "file_name": "sphinx/util/typing.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-6999": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "rename",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_index",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "create_index"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rename"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rename_vars"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sel"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rename"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rename_vars"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sel"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indexes"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rename"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rename_vars"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataSet"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "rename",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_index",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-15535": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mutual_info_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check_array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".astype"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mutual_info_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "could not convert string to float"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_clusterings"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "contingency_matrix"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mutual_info_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check_array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "as_float_array"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mutual_info_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "mutual_info_score"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mutual_info_score(x, x)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "check_clusterings",
                        "file_name": "sklearn/metrics/cluster/_supervised.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "contingency_matrix",
                        "file_name": "sklearn/metrics/cluster/_supervised.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mutual_info_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "input validation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "convert string to float"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "astype(object)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.random.choice"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-3976": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iadd__",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge_coordinates_without_align"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_merge_inplace"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_merge_inplace",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge_coordinates_without_align"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iadd__",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iadd__",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge_coordinates_without_align"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "func",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge_coordinates_without_align"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MergeError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge_coordinates_without_align"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "merge_collected"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Coordinates"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_merge_inplace",
                        "class_name": "Coordinates"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12951": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "When"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "When"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "State"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "County"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "When"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Case"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "When"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OuterRef"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "When"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "State"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "County"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Exists"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "When"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-9711": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "needs_extensions"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "version comparison"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "needs_extensions"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "This project needs the extension"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "version"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "needs_extensions"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "version comparison"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "'>='"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "setup_extension"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Extension"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "version parsing"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse_version"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LooseVersion"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "StrictVersion"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "needs_extensions"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx_gallery.gen_gallery"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "compare_versions"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "setup_extension"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_extension"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requirements"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dependency"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse_version"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "version_compare"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/application.py",
                        "line_no_str": "line_number",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "version",
                        "file_name": "sphinx/application.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": ">=0.",
                        "file_name": "sphinx/application.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "needs_extensions"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx_gallery.gen_gallery"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "needs_extensions",
                        "file_name": "sphinx/config.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "needs_extensions",
                        "file_name": "sphinx/extension.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12153": [
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/auth/migrations/0011_update_proxy_permissions.py",
                        "line_no_str": "42",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permission"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "atomic"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/auth/migrations/0011_update_proxy_permissions.py",
                        "line_no_str": "42",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permission"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "atomic"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DATABASES is improperly configured"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permission"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "atomic"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/auth/migrations/0011_update_proxy_permissions.py",
                        "line_no_str": "42",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "settings.DATABASES"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/auth/migrations/0011_update_proxy_permissions.py",
                        "line_no_str": "42",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permission"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "db_for_write"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "db_for_read"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "atomic"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Permission"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/contrib/auth/migrations/0011_update_proxy_permissions.py",
                        "line_no_str": "42",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ImproperlyConfigured(\"settings.DATABASES is improperly configured."
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15380": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "changes",
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "generate_renamed_fields",
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.to_state.models"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "generate_renamed_fields",
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_detect_changes",
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "changes"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "generate_renamed_fields",
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_detect_changes",
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "to_state.models["
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AutoDetector"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "generate_renamed_fields",
                        "class_name": "AutoDetector"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def handle(",
                        "file_name": "django/core/management/commands/makemigrations.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "MigrationAutodetector",
                        "file_name": "django/db/migrations/autodetector.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "generate_renamed_fields",
                        "file_name": "django/db/migrations/autodetector.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "handle",
                        "file_name": "/django/django/core/management/commands/makemigrations.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "changes",
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "generate_renamed_fields",
                        "class_name": "MigrationAutodetector"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self.to_state.models[",
                        "file_name": "/django/django/db/migrations/autodetector.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-15525": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Author"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Book"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_by_natural_key",
                        "class_name": "AuthorManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_by_natural_key",
                        "class_name": "BookManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "use_natural_foreign_keys=True"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Author"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Book"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "natural_key",
                        "class_name": "Author"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "natural_key",
                        "class_name": "Book"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_by_natural_key",
                        "class_name": "AuthorManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_by_natural_key",
                        "class_name": "BookManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "PythonDeserializer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Deserializer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "return (self.title,) + self.author.natural_key()",
                        "file_name": "testbug/models.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Author"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Book"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "natural_key",
                        "class_name": "Author"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "natural_key",
                        "class_name": "Book"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_by_natural_key",
                        "class_name": "AuthorManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_by_natural_key",
                        "class_name": "BookManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "natural_key.dependencies = ['testbug.Author']"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "extends Django\u2019s base management commands"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "serializer classes"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "database routers"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "loaddata"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "specific error messages or traceback components"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Author"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Book"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_by_natural_key",
                        "class_name": "AuthorManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_by_natural_key",
                        "class_name": "BookManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "natural_key.dependencies = ['testbug.Author']"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Author"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Book"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "natural_key",
                        "class_name": "Author"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "natural_key",
                        "class_name": "Book"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_by_natural_key",
                        "class_name": "AuthorManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_by_natural_key",
                        "class_name": "BookManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Deserializer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "build_instance"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pallets__flask-4935": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Blueprint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Flask"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "register_blueprint",
                        "class_name": "Flask"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "subdomain"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Flask"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Blueprint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register_blueprint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "app.config['SERVER_NAME'] ="
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_url_rule",
                        "class_name": "Blueprint"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subdomain_matching"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "url_map_class"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "register",
                        "class_name": "Blueprint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "make_setup_state",
                        "class_name": "Blueprint"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Blueprint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register_blueprint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "url_prefix"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "subdomain"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Flask"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Blueprint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register_blueprint"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Flask"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Blueprint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register_blueprint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "url_map",
                        "file_name": "Flask"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "register_blueprint",
                        "file_name": "src/flask/app.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "register_blueprint",
                        "file_name": "src/flask/blueprints.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "url_map",
                        "file_name": "src/flask/app.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-23111": [
        [
            [],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "mouse_move",
                        "file_name": "matplotlib/backend_bases.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_mouse_event_to_message",
                        "file_name": "matplotlib/backend_bases.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "format_cursor_data",
                        "file_name": "matplotlib/artist.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "_g_sig_digits",
                        "file_name": "matplotlib/cbook/__init__.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "- math.floor(math.log10(delta)))",
                        "file_name": "cbook/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "cbook/__init__.py",
                        "line_no_str": "2228",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "format_cursor_data",
                        "file_name": "matplotlib/artist.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "set_clim()"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_g_sig_digits",
                        "file_name": "cbook/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "cbook/__init__.py",
                        "line_no_str": "2228",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "format_cursor_data",
                        "file_name": "matplotlib/artist.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "plt.imshow(test)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "_g_sig_digits",
                        "file_name": "cbook/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "imshow",
                        "file_name": "backend_bases.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mouse_move"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_mouse_event_to_message",
                        "file_name": "lib/matplotlib/backend_bases.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "cbook/__init__.py",
                        "line_no_str": "2228",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "mouse_move",
                        "file_name": "matplotlib/backend_bases.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_mouse_event_to_message",
                        "file_name": "matplotlib/backend_bases.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "- math.floor(math.log10(delta))) if math.isfinite(value) else 0"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14534": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BoundField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BoundWidget"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subwidgets",
                        "class_name": "BoundField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "id_for_label",
                        "class_name": "BoundWidget"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CheckboxSelectMultiple"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BoundField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BoundWidget"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "id_for_label",
                        "class_name": "BoundWidget"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CheckboxSelectMultiple"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "auto_id"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BoundField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BoundWidget"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CheckboxSelectMultiple"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "id_for_label",
                        "class_name": "BoundWidget"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subwidgets",
                        "class_name": "BoundField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CheckboxSelectMultiple"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BoundField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BoundWidget"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subwidgets",
                        "class_name": "BoundField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CheckboxSelectMultiple"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "attrs['id']"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BoundField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BoundWidget"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CheckboxSelectMultiple"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "id_for_label",
                        "class_name": "BoundField"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "psf__requests-2153": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "post",
                        "file_name": "/home/kenneth/code/soco/SoCo/soco/plugins/wimp.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "/usr/lib/python2.7/dist-packages/requests/api.py",
                        "line_no_str": "87",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Session"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "post",
                        "file_name": "/usr/lib/python2.7/dist-packages/requests/api.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "send",
                        "file_name": "/usr/lib/python2.7/dist-packages/requests/sessions.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "read",
                        "file_name": "/usr/lib/python2.7/httplib.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "requests.post",
                        "file_name": "/home/kenneth/code/soco/SoCo/soco/plugins/wimp.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "send",
                        "class_name": "Session"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RequestException"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "post",
                        "file_name": "/home/kenneth/code/soco/SoCo/soco/plugins/wimp.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "requests.post",
                        "file_name": "/home/kenneth/code/soco/SoCo/soco/plugins/wimp.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "request"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Timeout"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [],
        []
    ],
    "django__django-13460": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "do_translate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "{% blocktrans %}"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "{% blocktrans %}"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "do_translate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "gettext"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "{% blocktrans count counter=person.distance_in_miles|floatformat:0 %}"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "do_translate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "floatformat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "gettext"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "do_translate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "variable types before formatting"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TranslateNode"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "blocktrans"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "gettext"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "floatformat"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-25346": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ConstrainedLayout"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "layout"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_title",
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "suptitle",
                        "class_name": "Figure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "wrap=True"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "suptitle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "wrap=True",
                        "file_name": "galleries/examples/text_labels_and_annotations/autowrap.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "constrained layout"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Figure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "suptitle",
                        "class_name": "Figure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_title",
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "constrained layout"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "constrained layout",
                        "file_name": "lib/matplotlib/_constrained_layout.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "execute_constrained_layout",
                        "file_name": "lib/matplotlib/figure.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "constrained_layout"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_title",
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "wrap=True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "suptitle",
                        "class_name": "Figure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_window_extent"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Figure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "layout",
                        "class_name": "Figure"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ConstrainedLayoutEngine"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_wrapped_text"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_title",
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "suptitle",
                        "class_name": "Figure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute_constrained_layout"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Figure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Subplot"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "suptitle",
                        "class_name": "Figure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_title",
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_tightbbox"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "wrap=True"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-13768": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "A.dot(B)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "A.dot(B)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "dot",
                        "file_name": "sympy/matrices/matrices.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "matrix",
                        "file_name": "sympy/matrices/matrices.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "A.dot(B)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "A.dot(B)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "dot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dimension mismatch"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "dot",
                        "file_name": "sympy/matrices/matrices.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-13745": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__new__",
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_angles",
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_angles",
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "angles.to(u.degree)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_angles",
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.float32"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_angles",
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__new__",
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__new__",
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_angles",
                        "class_name": "Latitude"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-11333": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_set_params",
                        "file_name": "sklearn/utils/metaestimators.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_params",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_set_params",
                        "class_name": "_BaseComposition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "zip(*getattr(self, attr))"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_set_params"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def _set_params(self,"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "names, _ = zip(*getattr(self, attr))",
                        "file_name": "/Users/joel/repos/scikit-learn/sklearn/utils/metaestimators.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_BaseComposition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_set_params",
                        "class_name": "_BaseComposition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_set_params",
                        "file_name": "sklearn/utils/metaestimators.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_params",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_BaseComposition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_set_params",
                        "class_name": "_BaseComposition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_set_params",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "zip(*getattr(self, attr))"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13620": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_arguments",
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "call_command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_argument('--foo', nargs='+', type=int)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "invalid int value"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_arguments",
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "call_command"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_arguments",
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "call_command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_mutually_exclusive_group"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_argument('--foo', nargs='+', type=int)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type=str"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "int(value)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "call_command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_mutually_exclusive_group"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_arguments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "call_command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_mutually_exclusive_group"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parser.add_argument"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "mwaskom__seaborn-2457": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lineplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ci=None",
                        "file_name": "lineplot_file.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_deprecate_ci"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lineplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ci=None"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lineplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ci=None"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lineplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ci=None"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lineplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ci=None"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11354": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Item"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RawSQL"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_aggregation"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Item"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_aggregation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "RawSQL"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Item"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_aggregation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "queryset.annotate(title2=RawSQL(\"title\", ()))"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "queryset.count()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseItem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Item"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_aggregation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inner_query.default_cols = False"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RawSQL"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_aggregation",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inner_query.default_cols"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13109": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "validate",
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/models/fields/related.py",
                        "line_no_str": "917",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "validate",
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ArticleManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "forms.ModelForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.fields['article'].queryset"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/models/fields/related.py",
                        "line_no_str": "918",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ArticleManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FavoriteAricles"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Article._base_manager.all()"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/models/fields/related.py",
                        "line_no_str": "918",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ArticleManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "queryset"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-5221": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_arguments"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--fixtures"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "show_fixitures_per_plugin"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_fixtures"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "show_fixtures_per_test"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FixtureManager"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_fixturedef",
                        "class_name": "FixtureManager"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "format_fixtures"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "showfixtures"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_showfixtures_main",
                        "file_name": "src/_pytest/python.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "scope",
                        "file_name": "src/_pytest/fixtures.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_known_args"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register_fixture"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def fixture("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--fixtures"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pytest_addoption"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "show_fixtures_per_test"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "report_header"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def pytest_report_header"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def showfixtures"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_options"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def pytest_addoption"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FixtureDef"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15423": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LazyObject"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getitem__",
                        "class_name": "LazyObject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iter__",
                        "class_name": "LazyObject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "request.user"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LazyObject"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getitem__",
                        "class_name": "LazyObject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iter__",
                        "class_name": "LazyObject"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "new_method_proxy"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LazyObject"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getitem__",
                        "class_name": "LazyObject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iter__",
                        "class_name": "LazyObject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "request.user"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LazyObject"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getitem__",
                        "class_name": "LazyObject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iter__",
                        "class_name": "LazyObject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "request.user"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LazyObject"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getitem__",
                        "class_name": "LazyObject"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iter__",
                        "class_name": "LazyObject"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-13437": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "bell"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "limit"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Fibonacci(n).limit(n,oo)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Lucas(n).limit(n,oo)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bell"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "limit(n, oo)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "limit"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "limit",
                        "file_name": "sympy/series/limits.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "limit",
                        "file_name": "sympy/core/expr.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bell"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "limit"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "limit",
                        "file_name": "sympy/series/limits.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "limit",
                        "file_name": "sympy/core/expr.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "*Bell*"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "bell"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bell"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "limit"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bell"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def bell"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "limit",
                        "file_name": "sympy/series/limits.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bell"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "limit"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-12827": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "empirical cdf"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "map to a uniform distribution"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "empirical cdf"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_dense_fit",
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_sparse_fit",
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_transform",
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_dense_fit",
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_sparse_fit",
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_transform",
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "empirical cdf"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuantileTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "empirical CDF"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "quantile transformation"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14805": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MakemigrationsCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrateCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "migrate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--noinput"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "migrate"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_arguments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_arguments"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "migrate"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_arguments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MakemigrationsCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MigrateCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": "MakemigrationsCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": "MigrateCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self.stdout.write",
                        "file_name": "makemigrations.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self.stdout.write",
                        "file_name": "migrate.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13925": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Entity"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "User"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AppConfig"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_AUTO_FIELD"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Entity"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_AUTO_FIELD ="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Meta"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Entity"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "User"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ReservedUsername"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FriendshipRequest"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SpeedyCoreAccountsConfig"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SpeedyCoreContactByFormConfig"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_AUTO_FIELD"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Entity"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "User"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SpeedyCoreAccountsConfig"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "primary_key=True"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Entity"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "User"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ReservedUsername"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Block"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Feedback"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ReadMark"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Follow"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FriendshipRequest"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UserLike"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Image"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "id = models.AutoField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Meta"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_AUTO_FIELD"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "DEFAULT_AUTO_FIELD",
                        "file_name": "settings.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ReservedUsername"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "User"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Block"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Entity"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "User"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_AUTO_FIELD"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-21542": [
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "lib/matplotlib/colorbar.py",
                        "line_no_str": "489",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "update_ticks",
                        "file_name": "lib/matplotlib/colorbar.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_set_formatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Axis"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "lib/matplotlib/colorbar.py",
                        "line_no_str": "489",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "update_ticks",
                        "file_name": "lib/matplotlib/colorbar.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_set_formatter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "lib/matplotlib/colorbar.py",
                        "line_no_str": "489",
                        "window_size_str": "4"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "update_ticks",
                        "file_name": "lib/matplotlib/colorbar.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Axis._set_formatter"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "lib/matplotlib/colorbar.py",
                        "line_no_str": "489",
                        "window_size_str": "4"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "update_ticks",
                        "file_name": "lib/matplotlib/colorbar.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_set_formatter",
                        "class_name": "Axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "callable directly"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "lib/matplotlib/colorbar.py",
                        "line_no_str": "489",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "update_ticks",
                        "file_name": "lib/matplotlib/colorbar.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_set_formatter"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-21259": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_relational",
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Range(3,11,2).as_relational(x)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_relational",
                        "class_name": "Range"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_relational",
                        "class_name": "Range"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_relational",
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "(x >= 3) & (x <= 9) & Eq(x, floor(x))"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "step",
                        "file_name": "sympy/sets/fancysets.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Mod"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_relational",
                        "class_name": "Range"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "as_relational(x)"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-21171": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_SingularityFunction"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_Add"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_Mul"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_SingularityFunction"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "getattr(self, printmethod)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SingularityFunction"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_SingularityFunction"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_Pow"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_SingularityFunction"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_Pow"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_SingularityFunction"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_print_Pow"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SingularityFunction"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-11109": [
        [
            [],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_parse_annotation",
                        "class_name": "PythonDomain"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PythonDomain"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_parse_annotation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_parse_annotation"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PythonDomain"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_parse_annotation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def _parse_annotation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class PythonDomain"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PythonDomain"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_parse_annotation",
                        "file_name": "python.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Union"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Optional"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Literal"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_parse_annotation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "config"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Literal"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_parse_annotation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "config.add"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "setup(app)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "visit_"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "format_annotation"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-13809": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "runserver"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "add_arguments",
                        "file_name": "base_command.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SystemCheckError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": "runserver"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_arguments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "runserver"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_arguments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--skip-checks"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "runserver"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def handle"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "runserver"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11790": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "clean_username",
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "maxlength"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "render",
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "maxlength"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__init__",
                        "file_name": "django/forms/widgets.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "render",
                        "file_name": "django/forms/widgets.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "clean_username",
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "username = forms.CharField(max_length=USERNAME_MAX_LENGTH"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UsernameField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "attrs={'maxlength'",
                        "file_name": "django/contrib/auth/forms.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "clean_username",
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "#27515"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "5ceaf14686ce626404afb6a5fbd3d8286410bf13"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-10360": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "enum {"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__attribute__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "JXL_DEPRECATED"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "typedef enum"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "__attribute__",
                        "file_name": "sphinx/util/cfamily.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parse_enum",
                        "file_name": "sphinx/util/cfamily.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "typedef enum"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__attribute__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "JXL_DEPRECATED"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "typedef enum { JXL_TYPE_FLOAT = 0, JXL_TYPE_BOOLEAN JXL_DEPRECATED,"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "c_id_attributes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cpp_id_attributes"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "JXL_DEPRECATED"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "typedef enum"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "typedef enum"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "__attribute__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "JXL_DEPRECATED"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-11897": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pprint"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PrettyPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pretty_print"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "print",
                        "file_name": "sympy/printing/pretty/pretty.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pprint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "var('x', positive=True)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp(-x)*log(x)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "1/(x + y)/2"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pprint"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pretty"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pprint"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp(-x)*log(x)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "1/(x + y)/2"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Printer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PrettyPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pprint"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp(-x)*log(x)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "1/(x + y)/2"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Exp",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Log",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Pow",
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Mul",
                        "class_name": "PrettyPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Pow",
                        "class_name": "PrettyPrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-14539": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FITSDiff"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "variable_length"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "VLA"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "compare",
                        "class_name": "FITSDiff"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "diff",
                        "class_name": "FITSDiff"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "array comparison"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "VLA comparison"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_diff",
                        "file_name": "astropy/io/fits/diff.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "array",
                        "file_name": "astropy/io/fits/diff.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "compare",
                        "file_name": "astropy/io/fits/diff.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FITSDiff"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "compare",
                        "class_name": "FITSDiff"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "compare_data",
                        "class_name": "FITSDiff"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fits.Column"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "'QD'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "from_columns"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FITSDiff"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "compare_arrays",
                        "class_name": "FITSDiff"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "from_columns",
                        "class_name": "BinTableHDU"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "writeto",
                        "class_name": "BinTableHDU"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "variable-length arrays"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FITSDiff"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "identical",
                        "class_name": "FITSDiff"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "writeto"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "BinTableHDU.from_columns"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "printdiff"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_diff",
                        "file_name": "astropy/io/fits/diff.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_report",
                        "file_name": "astropy/io/fits/diff.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_BaseDiff",
                        "file_name": "astropy/io/fits/diff.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FITSDiff"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "from_columns",
                        "class_name": "BinTableHDU"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "writeto"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Variable Length Arrays"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "from_columns"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "VLA",
                        "file_name": "astropy/io/fits/convenience.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "VLA",
                        "file_name": "astropy/io/fits/hdu/base.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-21527": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "linsolve"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Eq"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "symbols"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "linsolve"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Eq"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Symbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Float"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Nsimplify"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "linsolve"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Eq(y, x)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FiniteSet"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_linsolve",
                        "file_name": "sympy/solvers/solveset.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "sympy_eqs_to_ring",
                        "file_name": "sympy/solvers/solveset.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "solve_lin_sys",
                        "file_name": "sympy/solvers/solveset.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "linsolve"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Eq(y, x)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FiniteSet((0, 0))"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "linsolve"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "linsolve"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sympy.Eq"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-14125": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SparseSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pd.SparseSeries"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "SparseSeries"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SparseSeries"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SparseSeries"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SparseSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "SparseSeries"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SparseSeries"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-4356": [
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "xarray/core/nanops.py",
                        "line_no_str": "35",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sum"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "xarray/core/nanops.py",
                        "line_no_str": "35",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "mask.shape",
                        "file_name": "xarray/core/nanops.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "a.shape",
                        "file_name": "xarray/core/nanops.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "sum",
                        "file_name": "core/dataarray.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "core/nanops.py",
                        "line_no_str": "35",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sum"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mask.shape[axis]"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "xarray/core/nanops.py",
                        "line_no_str": "35",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "mask.shape[axis]",
                        "file_name": "xarray/core/nanops.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "xarray/core/nanops.py",
                        "line_no_str": "35",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sum"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11138": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseOperations"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CONVERT_TZ(`my_datetime_field`, 'UTC', 'Europe/Paris')"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "convert_datetime_field_value",
                        "file_name": "django/db/backends/mysql/operations.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "CONVERT_TZ",
                        "file_name": "django/db/backends/mysql/operations.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_aware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/backends/mysql/operations.py",
                        "line_no_str": "49",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CONVERT_TZ"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_aware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "filter",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/backends/mysql/operations.py",
                        "line_no_str": "49",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CONVERT_TZ"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseOperations"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "datetime_cast_date_sql"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CONVERT_TZ"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/backends/mysql/operations.py",
                        "line_no_str": "49",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_tz"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13010": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mean",
                        "class_name": "numpy"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "std",
                        "class_name": "numpy"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "partial_fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.mean"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.std"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.mean"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.std"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.mean"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.std"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_compute_mean_std",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "std"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "partial_fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "numpy.mean"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "numpy.std"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "partial_fit",
                        "class_name": "StandardScaler"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-7233": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Coarsen"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "construct",
                        "class_name": "Coarsen"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "assign_coords"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".to_dataset"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Coarsen"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "construct",
                        "class_name": "Coarsen"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "assign_coords"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "coarsen"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Coarsen"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "construct",
                        "class_name": "Coarsen"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "coarsen"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "construct"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "coarsen(time=12).construct"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Coarsen"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "construct"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-12557": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SVC"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "decision_function",
                        "class_name": "SVC"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "predict",
                        "class_name": "SVC"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "#8276"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseSVC"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decision_function",
                        "file_name": "sklearn/svm/classes.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "predict",
                        "file_name": "sklearn/svm/classes.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SVC"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "decision_function",
                        "class_name": "SVC"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "predict",
                        "class_name": "SVC"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "decision_function_shape=\"ovr"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tie-breaking"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseSVC"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "_ovr_decision_function",
                        "file_name": "sklearn/svm/classes.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SVC"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "decision_function",
                        "class_name": "SVC"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "predict",
                        "class_name": "SVC"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "decision_function_shape=\"ovr"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tie-breaking"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "decision_function",
                        "file_name": "sklearn/svm/classes.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "predict",
                        "file_name": "sklearn/svm/classes.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SVC"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "decision_function",
                        "class_name": "SVC"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "predict",
                        "class_name": "SVC"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tie-breaking"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SVC"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "decision_function",
                        "class_name": "SVC"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "predict",
                        "class_name": "SVC"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "decision_function_shape=\"ovr"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-26400": [
        [],
        [],
        [],
        [],
        []
    ],
    "matplotlib__matplotlib-25667": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "barh"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "barh"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "plot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rcParams['date.converter']"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "converters"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "barh"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ax.bar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ax.barh"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "barh"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "plot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "date.converter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "barh"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "plt.rcParams['date.converter'] = 'concise'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ax.barh"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ax.bar"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-12227": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Float"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "Float"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "prec"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Float"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "Float"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_set_prec",
                        "class_name": "Float"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__new__",
                        "file_name": "sympy/core/numbers.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "_prec",
                        "file_name": "sympy/core/numbers.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Float"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "Float"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "._prec"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "prec="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Float"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__new__",
                        "class_name": "Float"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Float("
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Float"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Float("
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-15151": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pretty_print"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indexed"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "format_expression"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "x_{1,i}"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "pretty",
                        "file_name": "sympy/printing/pretty/pretty.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Indexed",
                        "file_name": "sympy/tensor/indexed.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pretty_print"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indexed(x1, i)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pretty"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prettyPrint"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "formatExpression"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Indexed"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "indexed"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "toLatex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "renderExpression"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".indexed("
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_index"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pretty printing indexed"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "x_{1,i}"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pretty_print"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pretty_print"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render_latex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indexed"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "pretty",
                        "file_name": "sympy/printing/pretty/pretty.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "IndexedBase",
                        "file_name": "sympy/tensor/indexed.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-11178": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "approx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "approx"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ApproxScalar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "ApproxScalar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ApproxBase"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "approx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unsupported operand type(s) for -: 'float' and 'NoneType'"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "approx"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "approx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TypeError: unsupported operand type(s) for -: 'float' and 'NoneType'"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ApproxScalar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ApproxMapping"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "approx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def __eq__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def __ne__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "ApproxScalar"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "ApproxMapping"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-12307": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fcode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sign(x)"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FCodePrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fcode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CodePrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "sign",
                        "class_name": "FortranPrinter"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "FCodePrinter",
                        "file_name": "sympy/printing/fcode.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fcode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sympy.utilities.codegen"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FCodePrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "doprint",
                        "class_name": "FCodePrinter"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fcode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "codegen"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sign(x)"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FCodePrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fcode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sympy.utilities.codegen"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sign"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sign"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Fortran"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-5033": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "load_dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "engine parameter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "register backend"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "setup.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "open_dataset"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "load_dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "engine parameter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "register_backend"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "open_dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "engine="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "load_dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if engine =="
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "open_dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "if engine ==",
                        "file_name": "xarray/backends/api.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "load_dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "engine parameter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "plugin registration"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "open_dataset",
                        "file_name": "xarray/backends/api.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "load_dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "engine"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "open_dataset",
                        "file_name": "xarray/backends/api.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "register_backend",
                        "file_name": "xarray/backends/plugins.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pydata__xarray-7393": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "stack"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "coords",
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "astype"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".dtype"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "stack"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dtype='i4'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dtype='i8'"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "stack",
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dtype"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "coords"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "stack"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "stack"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MultiIndex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dtype='i4'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dtype='i8'"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-15138": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StackingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StackingEstimator"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StackingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StackingCVClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StackingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StackingCVClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "final_estimator training",
                        "file_name": "<file_path_identified_from_class_search>"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "use_features_in_secondary"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "final_estimator.fit"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StackingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StackingEstimator"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit",
                        "file_name": "sklearn/ensemble/_stacking.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StackingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StackingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "use_features_in_secondary",
                        "file_name": "path/to/StackingClassifier"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StackingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "StackingClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_final_estimator",
                        "class_name": "StackingClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "use_features_in_secondary"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-16750": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Chr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_sql",
                        "class_name": "Chr"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "output_field ="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Chr"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Chr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "output_field",
                        "file_name": "django/db/models/expressions.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Chr"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Value"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Chr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CharField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "int(value)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Chr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "Chr",
                        "class_name": "expressions.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotate(first_letter=Chr(Value"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-21596": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Lambda"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "imageset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "intersect"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "is_subset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Reals"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "intersect",
                        "file_name": "sympy/sets/sets.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "is_subset",
                        "file_name": "sympy/sets/sets.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "imageset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Lambda"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "intersect"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Reals"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "imageset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Lambda"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "intersect"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Reals"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Lambda"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "imageset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Reals"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "intersect",
                        "class_name": "ImageSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__contains__",
                        "class_name": "ImageSet"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "intersect"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "in"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Lambda"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "imageset"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ImageSet",
                        "file_name": "sympy/sets/sets.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "intersect",
                        "file_name": "sympy/sets/sets.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-10893": [
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "rmtree",
                        "file_name": "src/_pytest/pathlib.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TestCaseFunction"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "addDuration",
                        "class_name": "TestCaseFunction"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/pathlib.py",
                        "line_no_str": "147",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rmtree("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TestCaseFunction"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "addDuration",
                        "class_name": "TestCaseFunction"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/pathlib.py",
                        "line_no_str": "147",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TestCaseFunction"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "rmtree",
                        "file_name": "_pytest/pathlib.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "rm_rf",
                        "file_name": "_pytest/pathlib.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TestCaseFunction"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "rmtree(",
                        "file_name": "src/_pytest/pathlib.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/pathlib.py",
                        "line_no_str": "147",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TestCaseFunction"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12039": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Columns",
                        "file_name": "django/db/backends/ddl_references.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "opclasses"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Columns"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class Columns",
                        "file_name": "django/db/backends/ddl_references.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "sql_create_index",
                        "class_name": "Index"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "col_suffixes passed to django.db.backends.ddl_references.Columns"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ticket #30903"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ddl_references"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/backends/ddl_references.py",
                        "line_no_str": "87",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Columns",
                        "file_name": "ddl_references.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "ddl_references.py",
                        "line_no_str": "87",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Columns"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CREATE INDEX"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "col_suffixes"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-16858": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Distribution"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Continuous"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Discrete"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_set"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self."
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Normal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Binomial"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Poisson"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_parameters"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_attributes"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "rv",
                        "file_name": "sympy/stats/rv.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "distribution",
                        "file_name": "sympy/stats/distribution.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "rv"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "__init__",
                        "file_name": "sympy/stats/*.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "set_params()"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "sympy.stats"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docstring"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "comments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "distribution"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parameter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "attribute"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Normal"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Binomial"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Poisson"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sympy.stats"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Distribution"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sympy.stats"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pdf"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-9104": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Runner"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "trio_main",
                        "file_name": "qtrio/_core.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "qtrio/_core.py",
                        "line_no_str": "556",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "trio_main",
                        "file_name": "qtrio/_core.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "qtrio/_core.py",
                        "line_no_str": "556",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Runner"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conf.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Runner",
                        "file_name": "qtrio/_core.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "trio_main",
                        "file_name": "qtrio/_core.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "qtrio/_core.py",
                        "line_no_str": "556",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Runner",
                        "file_name": "qtrio/_core.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "trio_main",
                        "class_name": "Runner"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "typing.Callable[...,"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx_autodoc_typehints"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        []
    ],
    "sympy__sympy-24353": [
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from py.__.test.item import Item",
                        "file_name": "sympy/utilities/benchmarking.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import py; print(py.__version__)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from py.__.test.item import Item",
                        "file_name": "sympy/utilities/benchmarking.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from py.__.test.item import Item"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__version__",
                        "file_name": "py/__init__.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "py.__version__"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "benchmarking.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from py.__.test.item import Item",
                        "file_name": "sympy/utilities/benchmarking.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "py.__version__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "Item",
                        "file_name": "sympy/utilities/benchmarking.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from py.__.test.item import Item",
                        "file_name": "sympy/utilities/benchmarking.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import py; print py.__version__"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/utilities/benchmarking.py",
                        "line_no_str": "4",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sympy.testing.benchmarking"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from py.__.test.item import Item"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from sympy.utilities import benchmarking"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from py.__.test.item import Item",
                        "file_name": "sympy/utilities/benchmarking.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "py.__version__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from py.__.test.item import Item"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-15596": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "degree"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "degree",
                        "file_name": "sympy/polys/polytools.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "degree"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RationalFunction"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "degree((x-2)/(x**2+1), x)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "degree"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "degree((x-2)/(x**2+1), x)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "degree",
                        "file_name": "sympy/polys/polytools.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "degree"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "degree((x-2)/(x**2+1), x)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "degree",
                        "file_name": "sympy/polys/polytools.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "degree"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "degree",
                        "file_name": "sympy/polys/polytools.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-14182": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RST"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "writer = Writer(**writer_kwargs)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RST"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class RST"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "RST"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "RST"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RST"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_get_writer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "header_rows"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RST"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QTable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "header_rows"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RST"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_get_writer",
                        "class_name": "ascii.core"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pydata__xarray-3635": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.nanpercentile"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "quantile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.nanpercentile"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.nanpercentile"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "quantile"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.nanpercentile"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "quantile",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.nanpercentile"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-9234": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handleRedirect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "configureAllowedRedirects"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parseRedirect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "processRedirect"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpClient"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UrlValidator"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validateLink"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "checkLink"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Config"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Settings"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sendRequest"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handleRequest"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "HTTP redirect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "processLink"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parseUrl"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "external link"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "URL validation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "redirect"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkCheck"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "checkLink"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validateRedirect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handleRedirect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "allowed redirects"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "redirect whitelist"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linkcheck/output.txt"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "HTTP request"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "HTTP response"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "configuration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "settings"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "generate report"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "log output"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "processURL"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "verifyURL"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_redirect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "report_error"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "allowed redirects"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "post"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "HTTP"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "error"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "validateLink",
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "checkRedirect",
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "allowed redirects"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "url config"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linkcheck"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "redirect"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkChecker"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LinkCheck"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handleRedirect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "checkRedirect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "output.txt"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "redirect",
                        "file_name": "sphinx/builders/linkcheck.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "check",
                        "file_name": "sphinx/builders/linkcheck.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-10323": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "literalinclude"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "literalinclude directive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "prepend"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dedent"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "literalinclude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "prepend"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dedent"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extensions",
                        "file_name": "doc/en/developer/source/conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from sphinx.directives import"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from sphinx.ext import"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. literalinclude::"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "literalinclude",
                        "file_name": "sphinx/directives/code.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "literalinclude"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "prepend"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "append"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dedent"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "literalinclude"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "literalinclude"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LiteralIncludeDirective"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "LiteralInclude",
                        "file_name": "sphinx/directives/code.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15166": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "make_key",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "make_query",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "quote"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "uppercase"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_base_set",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "query",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_many",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_base_set",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "make_key",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete",
                        "class_name": "DatabaseCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cursor.execute"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "quote_name"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14558": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "bound_data",
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "form = JSONForm({})"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "bound_data",
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "form = JSONForm({})"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "bound_data",
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "form = JSONForm({})"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "bound_data",
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "JSONField(required=False)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "form.as_p()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Form"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "bound_data",
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_p",
                        "class_name": "Form"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-14085": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ast_parser"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ast_parser"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "raise SympifyError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\u03b1"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "alpha"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "sympify",
                        "file_name": "sympy/core/sympify.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parse_expr",
                        "file_name": "sympy/core/ast_parser.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Symbol('alpha')"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_expr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Symbol"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "sympify",
                        "file_name": "sympy/core/sympify.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parse_expr",
                        "file_name": "sympy/core/ast_parser.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Transform"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Symbol"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parse_expr",
                        "file_name": "sympy/parsing/sympy_parser.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "standard_transformations",
                        "file_name": "sympy/parsing/sympy_parser.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_expr"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Greek letters"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sympify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "parse_expr",
                        "file_name": "sympy/core/ast_parser.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Symbol"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-12915": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StaticFilesHandlerMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_response_async"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "await self.get_response_async(request)",
                        "file_name": "django/core/handlers/asgi.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIHandler"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StaticFilesHandlerMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_response_async",
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_response_async",
                        "class_name": "StaticFilesHandlerMixin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_response_async"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_response_async"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StaticFilesHandlerMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__call__",
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ASGIHandler",
                        "file_name": "django/core/handlers/asgi.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StaticFilesHandlerMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_response_async"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_response",
                        "class_name": "StaticFilesHandlerMixin"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StaticFilesHandlerMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_response_async",
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_response_async"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "await self._middleware_chain(request)",
                        "file_name": "django/core/handlers/base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-19553": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Normalize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesImage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_norm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "connect",
                        "class_name": "CallbackRegistry"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_clim"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Normalize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesImage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_clim",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "callbacksSM.connect"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_clim"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ScalarMappable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_callback"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "remove_callback"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Normalize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesImage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_clim"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "im.callbacksSM.connect('changed', update)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Normalize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesImage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_clim",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "connect"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "connect",
                        "file_name": "lib/matplotlib/cbook/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "autoscale",
                        "file_name": "lib/matplotlib/colors.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "callbacksSM.connect"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Normalize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_clim",
                        "class_name": "AxesImage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "callbacksSM.connect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "connect"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AxesImage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "colorbar"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-8801": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. autoclass::"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "attribute docstring"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inherited member documentation"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autoclass:: example.Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_directive_header",
                        "class_name": "autodoc"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "filter_members",
                        "class_name": "autodoc"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": ":members:",
                        "file_name": "autodoc.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": ":inherited-members:",
                        "file_name": "autodoc.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "autoclass"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inherited members"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "annotations"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. autoclass::"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Autodoc"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_members"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_content"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "document_members"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter_members"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "attr1: int  #: docstring"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Documenter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "autoclass"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "filter_members",
                        "file_name": "sphinx/ext/autodoc/__init__.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_object_members",
                        "file_name": "sphinx/ext/autodoc/__init__.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16514": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogEntry"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdminSite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_queryset"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogEntry"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "register"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdminSite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_queryset",
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_queryset",
                        "file_name": "django/contrib/admin/options.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogEntry"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdminSite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "register",
                        "class_name": "AdminSite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LogEntry.objects.create"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdminSite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogEntry"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "log_addition",
                        "class_name": "AdminSite"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "log_change",
                        "class_name": "AdminSite"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "log_deletion",
                        "class_name": "AdminSite"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_queryset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "LogEntry.objects.filter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LogEntry"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdminSite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "log_entry",
                        "class_name": "AdminSite"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_queryset",
                        "class_name": "AdminSite"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "log_addition",
                        "file_name": "django/contrib/admin/options.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "log_change",
                        "file_name": "django/contrib/admin/options.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "log_deletion",
                        "file_name": "django/contrib/admin/options.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "register",
                        "class_name": "AdminSite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "get_queryset",
                        "file_name": "django/contrib/admin/views/main.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13472": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "/Users/Thomas/.local/miniconda3/envs/4cast/lib/python3.6/site-packages/sklearn/ensemble/gradient_boosting.py",
                        "line_no_str": "1421",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/ensemble/gradient_boosting.py",
                        "line_no_str": "1421",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit",
                        "file_name": "sklearn/ensemble/gradient_boosting.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pipeline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "ElasticNet"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GradientBoostingRegressor"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit",
                        "file_name": "sklearn/ensemble/gradient_boosting.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-7101": [
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "xarray/core/coordinates.py",
                        "line_no_str": "389",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "assign_coords"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__len__",
                        "file_name": "xarray/core/dataset.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "assign_coords",
                        "file_name": "xarray/core/common.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "_coord_names",
                        "file_name": "xarray/core/dataset.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "assign_coords",
                        "class_name": "Dataset"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__len__",
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_coord_names"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "assign_coords",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "_coord_names",
                        "file_name": "xarray/core/dataset.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "assign_coords"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def __len__(self):"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_coord_names"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "xarray/core/coordinates.py",
                        "line_no_str": "389",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "assign_coords"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__len__"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "xarray/core/coordinates.py",
                        "line_no_str": "389",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "assign_coords"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__len__"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13112": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Category"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ForeignKey(Category"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "name = 'DJ_RegLogin'",
                        "file_name": "apps.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Category"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Content"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class DJ_RegLoginConfig"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "reverse"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Category"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Content"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "DJ_RegLoginConfig",
                        "file_name": "apps.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "INSTALLED_APPS"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Category"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Content"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "INSTALLED_APPS",
                        "file_name": "settings.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class DJ_RegLoginConfig",
                        "file_name": "apps.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Category"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Content"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DJ_RegLogin"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "INSTALLED_APPS",
                        "file_name": "settings.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Category"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Content"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "DJ_RegLoginConfig",
                        "file_name": "apps.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "INSTALLED_APPS",
                        "file_name": "settings.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "models.Model"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "verbose_name = 'Contents'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "'DJ_RegLogin'",
                        "file_name": "settings.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-20639": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "printing.pretty"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "str"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pi**(1/E)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "pi",
                        "file_name": "sympy/printing/pretty/pretty.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "E",
                        "file_name": "sympy/printing/pretty/pretty.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "**",
                        "file_name": "sympy/printing/pretty/pretty.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "printing.pretty"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pi**(1/E)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pretty"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pi**(1/E)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PrettyPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "latex",
                        "class_name": "PrettyPrinter"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Pow",
                        "class_name": "PrettyPrinter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "printing.pretty"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PrettyPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pretty"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pi**"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "printing.pretty"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "render",
                        "class_name": "[ClassFromPreviousStep]"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pi"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "E"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "str"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7305": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_arglist"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "could not parse arglist"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "py:method"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "could not parse arglist"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "BinOp"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse arglist"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "BinOp"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse arglist"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "BinOp"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_arglist"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_signature"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PythonDomain"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "default argument parsing"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-16067": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "clean",
                        "class_name": "DecimalField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_python",
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "run_validators",
                        "class_name": "DecimalField"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Field"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "run_validators"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "clean",
                        "class_name": "DecimalField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_python",
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DecimalValidator(8, 7)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "clean"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_python"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "clean",
                        "class_name": "DecimalField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Decimal("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "7c6590af5f199c9ede970758877b5c1eb7e9b3a6"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DecimalValidator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "clean",
                        "class_name": "DecimalField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_python"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-15971": [
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class PrettyPrinter",
                        "file_name": "pretty.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "lerchphi",
                        "file_name": "pretty.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "lerchphi"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "PrettyPrinter",
                        "file_name": "pretty.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "lerchphi",
                        "file_name": "pretty.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "lerchphi"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "lerchphi"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PrettyPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "pretty",
                        "class_name": "PrettyPrinter"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "PrettyPrinter",
                        "file_name": "sympy/printing/pretty/pretty.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class PrettyPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def _print_",
                        "file_name": "pretty.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lerchphi"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lerchphi"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def _print",
                        "file_name": "pretty.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "_print_",
                        "file_name": "pretty.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11692": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Document"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "OuterRef"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Subquery"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".union("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "|"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OuterRef"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Subquery"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "union"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Document"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Subquery"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "OuterRef"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".union("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": " | "
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Document"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "OuterRef('id')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Subquery"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Subquery"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "OuterRef"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "union"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "|"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "contains a reference to an outer query"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14681": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "File"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "FileAdmin",
                        "file_name": "app/admin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "save"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_uploaded_file"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "except"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "File",
                        "file_name": "app/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "admin.site.register(File)",
                        "file_name": "app/admin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CsrfViewMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FileUploadHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FILE_UPLOAD_MAX_MEMORY_SIZE"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FILE_UPLOAD_TEMP_DIR"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CSRF"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "File"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "csrf_exempt"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "MEDIA_ROOT",
                        "file_name": "settings.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "FILE_UPLOAD_MAX_MEMORY_SIZE",
                        "file_name": "settings.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_uploaded_file"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FileField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "File",
                        "file_name": "app/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "admin.site.register(File)",
                        "file_name": "app/admin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "MEDIA_URL = '/media/'",
                        "file_name": "csrfbug/settings.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "MEDIA_ROOT = 'media/'",
                        "file_name": "csrfbug/settings.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "FILE_UPLOAD_MAX_MEMORY_SIZE = 1024 * 1024",
                        "file_name": "csrfbug/settings.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "FILE_UPLOAD_TEMP_DIR = MEDIA_ROOT + 'tmp'",
                        "file_name": "csrfbug/settings.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_upload"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "File"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CSRF"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "FileField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FILE_UPLOAD_MAX_MEMORY_SIZE"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MEDIA_ROOT"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FILE_UPLOAD_TEMP_DIR"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-6548": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polyval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_clean_interp_index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DataArray.get_index"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polyval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_clean_interp_index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "coord.name"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polyval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_clean_interp_index",
                        "file_name": "xarray/core/missing.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "get_index",
                        "file_name": "xarray/core/common.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polyval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_clean_interp_index"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_index",
                        "class_name": "DataArray"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polyval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_clean_interp_index"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_clean_interp_index",
                        "file_name": "xarray/core/missing.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16485": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ValueError: valid range for prec is [1, MAX_PREC]"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ValueError: valid range for prec"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "floatformat('0.00', 0)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "floatformat(Decimal('0.00'), 0)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "valid range for prec"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "floatformat"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def floatformat"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-8554": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LocallyLinearEmbedding"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Isomap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SpectralEmbedding"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "check_array",
                        "file_name": "sklearn/manifold/locally_linear.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "check_array",
                        "file_name": "sklearn/manifold/isomap.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "check_array",
                        "file_name": "sklearn/manifold/spectral_embedding_.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "LocallyLinearEmbedding",
                        "file_name": "locally_linear.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit_transform",
                        "file_name": "locally_linear.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_fit_transform",
                        "file_name": "locally_linear.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "locally_linear.py",
                        "line_no_str": "629",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Isomap",
                        "file_name": "isomap.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "check_array",
                        "file_name": "isomap.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "SpectralEmbedding",
                        "file_name": "spectral_embedding_.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "check_array",
                        "file_name": "spectral_embedding_.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "LocallyLinearEmbedding",
                        "file_name": "locally_linear.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "locally_linear.py",
                        "line_no_str": "629",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Isomap",
                        "file_name": "isomap.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "isomap.py",
                        "line_no_str": "103",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "isomap.py",
                        "line_no_str": "202",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SpectralEmbedding"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "check_array",
                        "file_name": "spectral_embedding_.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "LocallyLinearEmbedding",
                        "file_name": "locally_linear.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "locally_linear.py",
                        "line_no_str": "629",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Isomap",
                        "file_name": "isomap.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "isomap.py",
                        "line_no_str": "103",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "isomap.py",
                        "line_no_str": "202",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LocallyLinearEmbedding"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Isomap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "LocallyLinearEmbedding"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "LocallyLinearEmbedding"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "Isomap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "Isomap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check_array(X, dtype=float)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/manifold/locally_linear.py",
                        "line_no_str": "629",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-12486": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GMM"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GaussianMixture"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "roc_auc_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "y_pred[:, 1]",
                        "file_name": "scorer.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GMM"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__call__",
                        "file_name": "scorer.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "y_pred = y_pred[:, 1]"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GMM"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "y_pred = y_pred[:, 1]",
                        "file_name": "scorer.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GaussianMixture"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__call__",
                        "file_name": "scorer.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GMM"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GMM"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "y_pred[:, 1]"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__call__",
                        "file_name": "*/python2.7/site-packages/sklearn/metrics/scorer.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "astropy__astropy-8005": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Planck15.Tcmb0"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "default_cosmology.get"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "with_H0 equivalency"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from ..cosmology import Planck15\\nT_cmb = Planck15.Tcmb0"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from .. import cosmology\\nH0 = cosmology.default_cosmology.get().H0"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "with_H0"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "default_cosmology.get()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Planck15"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "WMAP9"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "default_cosmology"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "thermodynamic_temperature"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "with_H0 equivalency"
                    },
                    "call_ok": false
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "thermodynamic_temperature"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "with_H0"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "default_cosmology.get()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Planck15.Tcmb0"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Planck15"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Planck15.Tcmb0"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cosmology.default_cosmology.get().H0"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "thermodynamic_temperature equivalency"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "with_H0 equivalency"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-12798": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ff"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rf"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ff"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rf"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "falling factorial"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rising factorial"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ff"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rf"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ff"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rf"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ff",
                        "file_name": "sympy/functions/combinatorial/factorials.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "rf",
                        "file_name": "sympy/functions/special/error_functions.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ff",
                        "file_name": "sympy/integrals/integrals.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "rf",
                        "file_name": "sympy/simplify/combsimp.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ff"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rf"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ff"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rf"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ff"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rf"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ff"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rf"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-5808": [
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "lexer=python3",
                        "file_name": "src/_pytest/pastebin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/pastebin.py",
                        "line_no_str": "68",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "PastebinPlugin",
                        "file_name": "src/_pytest/pastebin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "create_new_paste",
                        "file_name": "src/_pytest/pastebin.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pytest_addoption"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/pastebin.py",
                        "line_no_str": "68",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "create_new_paste",
                        "file_name": "src/_pytest/pastebin.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pastebin"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/pastebin.py",
                        "line_no_str": "68",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "lexer=python3",
                        "file_name": "src/_pytest/pastebin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "create_new_paste",
                        "file_name": "src/_pytest/pastebin.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "prepare_content",
                        "file_name": "src/_pytest/pastebin.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "lexer=python3",
                        "file_name": "src/_pytest/pastebin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Pastebin",
                        "file_name": "src/_pytest/pastebin.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "--pastebin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "bpaste.net"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "urlopen"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "src/_pytest/pastebin.py",
                        "line_no_str": "68",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "create_new_paste"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "urlopen"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11053": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "configure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UserSettingsHolder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getattr__",
                        "class_name": "UserSettingsHolder"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UserSettingsHolder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "configure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "settings.configure()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "configure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getattr__",
                        "class_name": "UserSettingsHolder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "isupper()"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "configure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UserSettingsHolder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getattr__",
                        "class_name": "UserSettingsHolder"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "configure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UserSettingsHolder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getattr__",
                        "class_name": "UserSettingsHolder"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-25794": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "scatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linewidths"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "edgecolors"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "scatter",
                        "file_name": "lib/matplotlib/axes/_axes.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "linewidths",
                        "file_name": "lib/matplotlib/axes/_axes.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "edgecolors",
                        "file_name": "lib/matplotlib/axes/_axes.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "scatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "scatter",
                        "class_name": "Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "edgecolor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "edgecolors"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linewidth"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linewidths"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "singular and plural forms"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "scatter"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "scatter",
                        "file_name": "lib/matplotlib/axes/_axes.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "scatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linewidths"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linewidth"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "edgecolors"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "edgecolor"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "scatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linewidths"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "linewidth"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "edgecolors"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "edgecolor"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-9999": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render_to_latex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexTranslator"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_glossary"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_samp"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": ":samp:",
                        "file_name": "latex_writer.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "glossary to LaTeX"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "render rst to LaTeX"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "glossary LaTeX"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rst LaTeX conversion"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "glossary"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":samp:"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "rst to latex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "convert rst"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "glossary"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex format"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex template"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_glossary"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_samp"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LaTeXBuilder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "write",
                        "class_name": "LaTeXBuilder"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-13838": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__repr__",
                        "file_name": "astropy/table/table.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_base_repr_",
                        "file_name": "astropy/table/table.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_pformat_table",
                        "file_name": "astropy/table/pprint.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_pformat_col",
                        "file_name": "astropy/table/pprint.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_pformat_col_iter",
                        "file_name": "astropy/table/pprint.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__getitem__",
                        "file_name": "astropy/table/_column_mixins.pyx"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_pformat_table",
                        "class_name": "TableFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_pformat_col",
                        "class_name": "TableFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_repr_html_",
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "yield format_col_str(idx)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_repr_html_",
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_base_repr_",
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_pformat_table",
                        "class_name": "TableFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_pformat_col",
                        "class_name": "TableFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def _pformat_col_iter(self, col, max_lines,"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "base_getitem"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "column_getitem"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__repr__",
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_base_repr_",
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TableFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_pformat_table",
                        "class_name": "TableFormatter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Table"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QTable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Table.__repr__"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Table._base_repr_"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_pformat_table",
                        "class_name": "TableFormatter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_pformat_col",
                        "class_name": "TableFormatter"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16139": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UserChangeForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "UserChangeForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "password.help_text = password.help_text.format"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UserChangeForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "UserChangeForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "../password/"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UserChangeForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "UserChangeForm"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UserChangeForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "UserChangeForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class UserChangeForm(forms.ModelForm):"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "<a href=\"{}\">this form</a>"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "change_view"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "UserChangeForm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "UserChangeForm"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-13852": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polylog"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_func"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class PolyLog"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "polylog"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "expand_func"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polylog"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp_polar(-I*pi)"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "polylog"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "exp_polar(-I*pi)",
                        "file_name": "sympy/functions/special/zeta_functions.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polylog"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diff"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "log"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "polylog"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "exp_polar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polylog"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp_polar(-I*pi)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "polylog"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand_func"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp_polar(-I*pi)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diff"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "polylog",
                        "file_name": "sympy/functions/special/zeta_functions.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13689": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Count"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "GROUP BY"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_group_by_cols",
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_sql",
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "construct_group_by",
                        "file_name": "django/db/models/sql/compiler.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "values"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "aggregate"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SQLCompiler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Count"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "GROUP BY"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BooleanField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Count"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_group_by_cols"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "annotate",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "values",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "as_sql"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ExpressionWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "values"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Count"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-15018": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "call_command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "add_arguments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_duration_to_time"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_time"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "call_command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_arguments",
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_duration_to_time"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_time"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_arguments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "call_command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse_duration_to_time"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse_time"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "call_command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_duration_to_time"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_time"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseCommand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "call_command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def add_arguments(self, parser)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_duration_to_time"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_time"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-12760": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "davies_bouldin_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": ".local/lib/python3.7/site-packages/sklearn/metrics/cluster/unsupervised.py",
                        "line_no_str": "342",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "intra_dists[k] = np.average(pairwise_distances("
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "davies_bouldin_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "score = (intra_dists[:, None] + intra_dists) / centroid_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": ".local/lib/python3.7/site-packages/sklearn/metrics/cluster/unsupervised.py",
                        "line_no_str": "342",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "davies_bouldin_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "score = (intra_dists[:, None] + intra_dists) / centroid_distances"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "davies_bouldin_score",
                        "file_name": "unsupervised.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "score = (intra_dists[:, None] + intra_dists) / centroid_distances",
                        "file_name": "unsupervised.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pairwise_distances"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "davies_bouldin_score"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "score = (intra_dists[:, None] + intra_dists) / centroid_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pairwise_distances"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.allclose(intra_dists, 0) or np.allclose(centroid_distances, 0)"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-13264": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def simplify(expr, ratio=1.7, measure=count_ops, fu=False, max_rec_steps=0):"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "simplify",
                        "file_name": "sympy/simplify/simplify.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "measure(expr) > ratio*measure(original_expr)"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/simplify/simplify.py",
                        "line_no_str": "610",
                        "window_size_str": "20"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "simplify",
                        "file_name": "sympy/simplify/simplify.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "simplify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def simplify(expr, ratio=1.7, measure=count_ops, fu=False"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13800": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MessageStorage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get",
                        "class_name": "BaseStorage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set",
                        "class_name": "BaseStorage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "encode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "serialize"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CookieStorage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "encode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_cookie"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "messages="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MessageStorage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CookieStorage"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "serialize"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "encode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "escape"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "messages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_cookie"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "messages=\"123\\\\\"NOTRECEIVED"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "messages",
                        "file_name": "django/contrib/messages/storage/cookie.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "encode",
                        "file_name": "django/contrib/messages/storage/cookie.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "escape",
                        "file_name": "django/contrib/messages/storage/cookie.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "contrib.messages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_cookie"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "messages="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "escape"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "storage/cookie.py",
                        "file_name": "django/contrib/messages/storage/cookie.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CookieStorage"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15277": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_resolve_output_field",
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CharField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "CharField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CharField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_resolve_output_field",
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MaxLengthValidator"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_resolve_output_field",
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CharField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "CharField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CharField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "CharField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_resolve_output_field",
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.validators.append(validators.MaxLengthValidator(self.max_length))"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "BinaryField"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CharField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_resolve_output_field",
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MaxLengthValidator"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__init__",
                        "file_name": "django/db/models/fields/__init__.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13454": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GenericForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EmptyFieldListFilter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "GenericForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "list_filter = (('resource_contract', admin.EmptyFieldListFilter)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GenericForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EmptyFieldListFilter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "list_filter = (("
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GenericForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EmptyFieldListFilter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelAdmin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "empty_strings_allowed"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GenericForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EmptyFieldListFilter"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GenericForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EmptyFieldListFilter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-22711": [
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "RangeSlider",
                        "file_name": "matplotlib/widgets.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "set_val",
                        "file_name": "matplotlib/widgets.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "matplotlib/widgets.py",
                        "line_no_str": "915",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RangeSlider"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_val",
                        "class_name": "RangeSlider"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "/matplotlib/widgets.py",
                        "line_no_str": "915",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "RangeSlider",
                        "file_name": "matplotlib/widgets.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "matplotlib/widgets.py",
                        "line_no_str": "915",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RangeSlider"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "set_val",
                        "class_name": "RangeSlider"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "/matplotlib/widgets.py",
                        "line_no_str": "915",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "RangeSlider",
                        "file_name": "matplotlib/widgets.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "set_val",
                        "file_name": "matplotlib/widgets.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "matplotlib/widgets.py",
                        "line_no_str": "915",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16369": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SitemapGenerator"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "I18n"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_sitemap"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cartesian product items languages"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "url language"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "i18n"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "url routing"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_sitemap"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "i18n"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "I18n"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_cartesian_product"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "language_url_integration"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "i18n"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Sitemap",
                        "file_name": "django/contrib/sitemaps/__init__.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_sitemap"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "i18n"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cartesian product"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "translate_url"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-10397": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RidgeCV"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "RidgeCV"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "RidgeCV"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RidgeCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "RidgeCV"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "alphas=[1, 10, 100, 1000]"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_BaseRidgeCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "fit",
                        "file_name": "sklearn/linear_model/ridge.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RidgeCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "RidgeCV"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Integers to negative integer powers are not allowed"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_BaseRidgeCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "alphas="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RidgeCV"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "RidgeCV"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "alphas=",
                        "file_name": "sklearn/linear_model/ridge.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RidgeCV"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "RidgeCV"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_BaseRidgeCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "RegressorMixin"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-12497": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "If you want to create a recursive relationship, use ForeignKey"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_through_fields"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ManyToManyField"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "use ForeignKey(\"%s\", symmetrical=False, through=\"%s\")"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "If you want to create a recursive relationship, use ForeignKey"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "symmetrical=False, through="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "If you want to create a recursive relationship, use ForeignKey"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_through_fields"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "symmetrical=False"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "through_fields have been set"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "use ForeignKey(\"%s\", symmetrical=False, through=\"%s\")"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16670": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StreamingHttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "StreamingHttpResponse",
                        "file_name": "http/response.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FileResponse is not async compatible"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iter__",
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__aiter__",
                        "class_name": "StreamingHttpResponse"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/http/response.py",
                        "line_no_str": "534",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StreamingHttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/http/response.py",
                        "line_no_str": "534",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__aiter__",
                        "class_name": "StreamingHttpResponse"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iter__",
                        "class_name": "StreamingHttpResponse"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StreamingHttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "StreamingHttpResponse must consume synchronous iterators in order to serve them asynchronously. Use an asynchronous iterator instead."
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iter__",
                        "class_name": "StreamingHttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StreamingHttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FileResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "StreamingHttpResponse must consume synchronous iterators in order to serve them asynchronously. Use an asynchronous iterator instead."
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__iter__",
                        "class_name": "StreamingHttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_set_streaming_content",
                        "class_name": "StreamingHttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "asynchronous iterator"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ASGIStaticFilesHandler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StreamingHttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "StreamingHttpResponse must consume synchronous iterators in order to serve them asynchronously.",
                        "file_name": "django/http/response.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FileResponse"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13617": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "group_by",
                        "class_name": "Query"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "group_by = []",
                        "file_name": "django/db/models/sql/query.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "django_date_trunc"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "django_date_extract"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "group_by",
                        "class_name": "Query"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if isinstance(expr, Ref) and expr.refs not in field_names"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "group_by",
                        "class_name": "Query"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Ref"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "resolve_expression"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "group_by",
                        "class_name": "Query"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class Query(BaseExpression):"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "if isinstance(expr, Ref) and expr.refs not in field_names:",
                        "file_name": "django/db/models/sql/query.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "if isinstance(expr, Ref) and expr.refs not in field_names + annotation_names:",
                        "file_name": "django/db/models/sql/query.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "django_date_trunc"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "django_date_extract"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-17845": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Interval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Interval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "Interval"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "FiniteSet"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__str__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Set"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def __str__(self):"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Interval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "Interval"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "FiniteSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Interval(0,1)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FiniteSet(1,2,3)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "Set"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Interval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "Interval"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "FiniteSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "str(object) is valid code to create object"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Interval"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "Interval"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__str__",
                        "class_name": "FiniteSet"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-16046": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if str_number[0] == \"-"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "format_number"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "admin_list_display"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if str_number[0] == \"-"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if str_number[0] == \"-"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "IndexError: string index out of range"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if str_number[0] == \"-"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if str_number[0] == \"-"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "format_number"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "list_display"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-10435": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "write_inline_code"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinxcode{\\\\sphinxupquote{"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LaTeXWriter"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "code",
                        "file_name": "sphinx/writers/latex.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LaTeXWriter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LaTeXTranslator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_inline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "depart_inline"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\sphinxcode"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\sphinxupquote"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. role:: python(code)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class: highlight"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "highlight"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinxcode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\sphinxupquote{"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "code role"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "whitespace"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "latex formatter"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LaTeXWriter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_inline_code"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\sphinxcode"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\PYG"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "highlight"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\sphinxcode{\\\\sphinxupquote{"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\PYG"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_Inline"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "depart_Inline"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. role:: python(code)"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11810": [
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "select_related",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_clone",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "prefetch_related",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelA"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelB"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ModelC"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_related"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_clone",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_related"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_clone",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "select_related",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_clone",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "select_related"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_clone"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "select_related",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_clone",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13467": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean_squared_error"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Scorer"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_scorer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "neg_mean_squared_error"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean_squared_error"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scorer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean_squared_error"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scorer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean_squared_error"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SCORERS"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mean_squared_error"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "scorer"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pylint-dev__pylint-5613": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "run_pyreverse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pyreverse -o png -p"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "run_pyreverse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import pylint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sys.argv"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "run_pyreverse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PNG"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pyreverse -o png -p"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pyreverse"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PyreverseRun"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "pyreverse"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "PyreverseRun"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "run_pyreverse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pyreverse -o png -p"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "pyreverse"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Run"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "run_pyreverse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pyreverse -o png -p"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Run"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-18477": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "min_fixed"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "max_fixed"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Printer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "print"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "strip_zeros"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "StringPrinter"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Float",
                        "class_name": "Printer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "StrPrinter",
                        "file_name": "sympy/printing/str.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MpmathPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mpmath_printer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "latex_printer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FloatPrinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "strip_zeros"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "strip_zeros"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Float printer LaTeX"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Float printer string"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "min_fixed"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "max_fixed"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MpmathPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "strip_zeros"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "print_float"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MpmathPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Float"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LatexPrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "strip_zeros"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-9797": [
        [],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Parent",
                        "file_name": "src/spam.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Child",
                        "file_name": "src/spam.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "method",
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "method",
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc",
                        "file_name": "docs/conf.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "method"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Parent",
                        "file_name": "src/spam.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Child",
                        "file_name": "src/spam.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extensions = [\"sphinx.ext.autodoc\"]",
                        "file_name": "docs/conf.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "method"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Parent",
                        "file_name": "src/spam.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Child",
                        "file_name": "src/spam.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "method",
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "method",
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "@classmethod",
                        "file_name": "src/spam.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Return an integer."
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "method"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "method",
                        "class_name": "Parent"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "method",
                        "class_name": "Child"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "extensions",
                        "file_name": "docs/conf.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class Parent",
                        "file_name": "src/spam.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class Child",
                        "file_name": "src/spam.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-7500": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cleanup_numbered_dir"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "try_cleanup"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mktemp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "getbasetemp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".lock"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TempPathFactory"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "cleanup_numbered_dir",
                        "file_name": "_pytest/pathlib.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "try_cleanup",
                        "file_name": "_pytest/pathlib.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "mktemp",
                        "file_name": "_pytest/tmpdir.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "root.glob(\"garbage-*\")",
                        "file_name": "_pytest/pathlib.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "cleanup_candidates(root,",
                        "file_name": "_pytest/pathlib.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cleanup_numbered_dir"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "try_cleanup"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TempPathFactory"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def test_temp(tmp_path_factory):"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TempPathFactory"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cleanup_numbered_dir"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "try_cleanup"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mktemp",
                        "class_name": "TempPathFactory"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cleanup_numbered_dir"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "try_cleanup"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "TempPathFactory",
                        "file_name": "_pytest/tmpdir.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "mktemp",
                        "file_name": "_pytest/tmpdir.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "getbasetemp",
                        "file_name": "_pytest/tmpdir.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "make_numbered_dir_with_cleanup",
                        "file_name": "_pytest/pathlib.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "cleanup_numbered_dir",
                        "file_name": "_pytest/pathlib.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-2922": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "average"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "average"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataStructure"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "sum",
                        "class_name": "Dataset"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "mean",
                        "class_name": "Dataset"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "weight"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataStructure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "average"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "weighted_average"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ds"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "average"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "geo data"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "weights"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dimensions"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class",
                        "file_name": "xarray/core/dataset.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class",
                        "file_name": "xarray/core/dataarray.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "class",
                        "file_name": "xarray/core/variable.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13915": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "min_max_axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_sparse_min_max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_sparse_min_or_max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_min_or_max_axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_minor_reduce"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indptr"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "min_max_axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_sparse_min_max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_sparse_min_or_max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_min_or_max_axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "indptr"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "min_max_axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_sparse_min_max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_sparse_min_or_max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_min_or_max_axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "reduceat(X.data, X.indptr[major_index])"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "min_max_axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_sparse_min_max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_sparse_min_or_max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_minor_reduce"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "min_max_axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_sparse_min_max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_sparse_min_or_max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_min_or_max_axis"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_minor_reduce"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13341": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TemplateView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ListView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "TemplateView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "ListView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "kwargs.get"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "ContextMixin"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "MultipleObjectTemplateResponseMixin"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TemplateView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "TemplateView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ListView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_object_or_404"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_context_data"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TemplateView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "TemplateView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_object_or_404"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Error binding parameter 0 - probably unsupported type"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TemplateView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "TemplateView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ListView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "ListView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_context_data"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "get_object_or_404"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TemplateView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ListView"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_context_data",
                        "class_name": "TemplateView"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_object_or_404"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Error binding parameter 0 - probably unsupported type"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-13315": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "formfield"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "limit_choices_to=Q("
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "limit_choices_to",
                        "class_name": "ForeignKey"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "limit_choices_to",
                        "file_name": "tests.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "formfield",
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "limit_choices_to"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "formfield"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "limit_choices_to"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "formfield",
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Q"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "formfield",
                        "class_name": "ForeignKey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "limit_choices_to"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-3095": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "copy"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "coords={'x': ['foo'], 'y': ('x', ['bar'])}"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "copy",
                        "file_name": "xarray/core/dataset.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "copy",
                        "file_name": "xarray/core/dataarray.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IndexVariable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "IndexVariable"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "IndexVariable"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dtype='<U*'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dtype='object'"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "Dataset"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "DataArray"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "Variable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "copy",
                        "class_name": "IndexVariable"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13485": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CalibratedClassifierCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_array"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CalibratedClassifierCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CalibratedClassifierCV(check_array"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CalibratedClassifierCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CalibratedClassifierCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "check_array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit",
                        "file_name": "sklearn/calibration.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "predict_proba",
                        "file_name": "sklearn/calibration.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "predict",
                        "file_name": "sklearn/calibration.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "check_array",
                        "file_name": "sklearn/calibration.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CalibratedClassifierCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_array"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "CalibratedClassifierCV"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7762": [
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/builders/linkcheck.py",
                        "line_no_str": "111",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "HTTP headers"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "CheckExternalLinksBuilder",
                        "file_name": "sphinx/builders/linkcheck.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/builders/linkcheck.py",
                        "line_no_str": "111",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "headers",
                        "file_name": "sphinx/builders/linkcheck.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "CheckExternalLinksBuilder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "queue_request",
                        "file_name": "sphinx/builders/linkcheck.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/builders/linkcheck.py",
                        "line_no_str": "111",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sphinx/builders/linkcheck.py",
                        "line_no_str": "111",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "CheckExternalLinksBuilder",
                        "file_name": "sphinx/builders/linkcheck.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "CheckExternalLinksBuilder",
                        "file_name": "sphinx/builders/linkcheck.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "headers={",
                        "file_name": "sphinx/builders/linkcheck.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "check_uri",
                        "file_name": "sphinx/builders/linkcheck.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15828": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "deconstruct",
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "deconstruct",
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "violation_error_message"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "deconstruct",
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "deconstruct",
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "violation_error_message"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "deconstruct",
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__eq__",
                        "class_name": "BaseConstraint"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "violation_error_message"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-10443": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dtype=np.float64"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_dtype",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dtype="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "dtype=",
                        "file_name": "<TfidfVectorizer file path from the first search>"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dtype"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit_transform",
                        "class_name": "TfidfVectorizer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dtype=np.float64"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16281": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "OperationalError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "migrate"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.CreateModel(name='Foo'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.CreateModel(name='Bar'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin.site.register(Foo"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Foo",
                        "file_name": "app/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ManyToManyField",
                        "file_name": "app/migrations/"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Foo",
                        "file_name": "app/admin.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "save",
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField self-referential"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "admin.site.register(Foo)"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ManyToManyField",
                        "file_name": "django/db/migrations/state.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ManyToManyField",
                        "file_name": "django/db/models/fields/related.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.AlterField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self_referential"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "makemigrations"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "migrate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ManyToManyField",
                        "file_name": "django/db/migrations/autodetector.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ManyToManyField('self')",
                        "file_name": "django/db/migrations/operations/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField('self')"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AddField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AlterField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ManyToManyField",
                        "file_name": "django/db/models/fields/related.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.CreateModel(name='Foo')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.CreateModel(name='Bar')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "migrations.AlterField(model_name='foo', name='bar')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "save",
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "ManyToManyField",
                        "file_name": "django/db/models/fields/related.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AlterField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ManyToManyField"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-11831": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "reduce",
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_handle_finite_sets",
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Naturals0"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Naturals0"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FiniteSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "intersect"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__len__"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Naturals0"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__len__",
                        "class_name": "Intersection"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_handle_finite_sets",
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_handle_finite_sets",
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Naturals0"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "intersect"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "reduce"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__new__",
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_handle_finite_sets",
                        "class_name": "Intersection"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__len__"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "psf__requests-2754": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Redirect /index.html"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".htaccess"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "URLEncoder"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ApacheConfig"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "encoding"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.get"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "redirect"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "urlencode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "quote"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "requests.get"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "url encode"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "redirect"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "404"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Not Found"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Redirect"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".htaccess"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "IDN"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "character encoding"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ApacheConfig"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": ".htaccess"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "encode_url"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "redirect"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "IDN"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Punycode"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "redirect"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "htaccess"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "pylint-dev__pylint-4604": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type comments"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "unused import"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parse import"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "analyze import usage"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "import handling"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "comments parsing"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "symbol tracking"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type annotation handling"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ASTVisitor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "visit_Import"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "visit_ImportFrom"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "TypeHint"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type comments handling"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Comment parsing"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type comments and their handling in pylint's documentation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unused import checks in pylint"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "how pylint analyzes code to track symbol usage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "modifying pylint codebase to handle type comments"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "unused-import"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type comments"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "# type:"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unused import"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type comment"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_import"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_comment"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_unused_imports"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type: abc.ABC"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type: ABC"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "process_module"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_Assign"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_type_comment"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "astroid"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pylintrc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "[pylint."
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pyproject.toml"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "setup.cfg"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "[tool.pylint."
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "`pylint"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "AddMessage"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "BaseChecker"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "IAstroidChecker"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "astroid"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "type: "
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-11438": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "classify_diop"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diophantine"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "classify_diop"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diophantine"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "classify_diop"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diophantine"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "classify_diop"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diophantine"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "classify_diop"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diophantine"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-25960": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Figure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subfigures",
                        "class_name": "Figure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "lib/matplotlib/figure.py",
                        "line_no_str": "1550",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "wspace",
                        "file_name": "lib/matplotlib/figure.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "hspace",
                        "file_name": "lib/matplotlib/figure.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Figure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subfigures",
                        "class_name": "Figure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "lib/matplotlib/figure.py",
                        "line_no_str": "1552",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Figure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subfigures",
                        "class_name": "Figure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "lib/matplotlib/figure.py",
                        "line_no_str": "1552",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "subfigures",
                        "file_name": "lib/matplotlib/figure.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Figure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "subfigures",
                        "file_name": "lib/matplotlib/figure.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "wspace",
                        "file_name": "lib/matplotlib/figure.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "hspace",
                        "file_name": "lib/matplotlib/figure.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Figure"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subfigures",
                        "class_name": "Figure"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "wspace"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "hspace"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "lib/matplotlib/figure.py",
                        "line_no_str": "1552",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-15678": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "idiff",
                        "file_name": "./sympy/geometry/util.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "solve(eq.diff(x), dydx)[0].subs(derivs)",
                        "file_name": "./sympy/geometry/util.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "raise ValueError(\"expecting x-dependent symbol(s) but got: %s\" % y)",
                        "file_name": "./sympy/geometry/util.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "idiff"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "solve(eq.diff(x), dydx)[0].subs(derivs)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "raise ValueError(\"expecting x-dependent symbol(s) but got: %s\" % y)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "eq.diff(x)",
                        "file_name": "./sympy/geometry/util.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "solve(",
                        "file_name": "./sympy/geometry/util.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "idiff",
                        "file_name": "./sympy/geometry/util.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Eq"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "f(x)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "idiff",
                        "file_name": "sympy/geometry/util.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "idiff"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "solve(eq.diff(x), dydx)[0].subs(derivs)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "raise ValueError(\"expecting x-dependent symbol(s) but got: %s\" % y)"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-10687": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Lasso"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "Lasso"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fit_intercept=False"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Lasso"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "Lasso"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "coef_"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Lasso"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "Lasso"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fit_intercept=False"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "ElasticNet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "coef_",
                        "file_name": "sklearn/linear_model/coordinate_descent.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "fit_intercept=False",
                        "file_name": "sklearn/linear_model/coordinate_descent.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Lasso"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "Lasso"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ElasticNet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "enet_path"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Lasso"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "Lasso"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ElasticNet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "ElasticNet"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11525": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mail_admins"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mail_managers"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MANAGERS"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mail_admins"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mail_managers"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MANAGERS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ADMINS"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mail_admins"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mail_managers"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MANAGERS ="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mail_admins"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mail_managers"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MANAGERS ="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_email"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mail_admins"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "mail_managers"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MANAGERS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ADMINS"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-13309": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Min"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rewrite"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Min"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rewrite"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Piecewise"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Min"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rewrite"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "rewrite",
                        "file_name": "sympy/core/basic.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Min"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Piecewise"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "rewrite"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Min"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "rewrite",
                        "class_name": "Min"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "rewrite",
                        "class_name": "Max"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Piecewise"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-16056": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\mathrm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\text"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "print_text"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "amsmath"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\mathrm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\text"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\mathrm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\text"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "print_text"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "config"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_config"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_config"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\mathrm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\text"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-18605": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Idx"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Idx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__new__",
                        "class_name": "Idx"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Idx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__new__",
                        "class_name": "Idx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Idx object requires an integer dimension"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Idx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__new__",
                        "class_name": "Idx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "is_integer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Idx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__new__",
                        "class_name": "Idx"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "is_integer"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-7188": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "context_processors.auth"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "INSTALLED_APPS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.contrib.auth"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "context_processors.auth"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_user"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "auth"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "INSTALLED_APPS"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "middleware"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "context_processors"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.contrib.auth.middleware.AuthenticationMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.contrib.auth.context_processors.auth"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AuthenticationMiddleware"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "auth"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "django.contrib.auth in INSTALLED_APPS"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from django.contrib.auth.models",
                        "file_name": "django/contrib/auth/middleware.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from django.contrib.auth.models",
                        "file_name": "django/contrib/auth/context_processors.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14430": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EmptyResultSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_aggregation",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "except EmptyResultSet",
                        "file_name": "django/db/models/sql/query.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Coalesce"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EmptyResultSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "raise EmptyResultSet()",
                        "file_name": "django/db/models/lookups.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_aggregation",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Coalesce"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Coalesce"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Value"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "EmptyResultSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_aggregation",
                        "file_name": "django/db/models/sql/query.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Coalesce"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EmptyResultSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_aggregation",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "raise EmptyResultSet()",
                        "file_name": "django/db/models/lookups.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "build_filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "EmptyResultSet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/models/lookups.py",
                        "line_no_str": "222",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get_aggregation",
                        "file_name": "django/db/models/sql/query.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-14544": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_features_in_"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_transformers",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "n_features_in_",
                        "file_name": "<path_to_ColumnTransformer_file>"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_column_consistency"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "n_features_in_",
                        "file_name": "ColumnTransformer"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "_BaseComposition"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TransformerMixin"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "ColumnTransformer",
                        "file_name": "sklearn/compose/_column_transformer.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/compose/_column_transformer.py",
                        "line_no_str": "522",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "transform",
                        "class_name": "ColumnTransformer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "remainder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_features_in_"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7615": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RSTParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "escape sequence"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "visit_textblock"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RSTParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TextRenderer"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "render"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RSTParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_text"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RSTParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_rst"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "backslash"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "RSTParser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TextElement"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "backslash"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "\\\\"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "extensions"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "docutils"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "difference from docutils"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "visit_literal_block"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "escape"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "conf.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "setup()"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-25232": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IterativeImputer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SimpleImputer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IterativeImputer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SimpleImputer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IterativeImputer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SimpleImputer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "IterativeImputer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IterativeImputer"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "IterativeImputer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SimpleImputer"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_initial_imputation",
                        "class_name": "IterativeImputer"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "fit",
                        "file_name": "sklearn/impute/_base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-13185": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "matrix[i, j]"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def sub_in_matrixsymbols"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "symbols"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "cse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subs",
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "subs"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Matrix"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-13974": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TensorProduct"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tensor_product_simp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pauli"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TensorProduct"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tensor_product_simp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "expand",
                        "class_name": "TensorProduct"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "subs",
                        "class_name": "TensorProduct"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tp(1,1)*tp(1,1)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TensorProduct"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tensor_product_simp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TensorProduct"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tensor_product_simp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "expand"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pauli"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "TensorProduct"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tensor_product_simp"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "expand(tensorproduct=True)"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7593": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_restructuredtext"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "convert_to_html"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":kbd:"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Role"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Directive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "roles"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "directives"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":kbd:`"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "roles.html#role-kbd"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":kbd:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "method_name",
                        "class_name": "class_name"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "code_str",
                        "file_name": "file_path"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_role"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "role"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HTMLWriter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HTMLBuilder"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_role"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "parse_text"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_kbd_role"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":kbd:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "generate_html"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "<kbd>"
                    },
                    "call_ok": false
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Role"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "directive"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HTMLWriter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Builder"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Role"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Roles"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "process_roles"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "role"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "visit_kbd",
                        "class_name": "RoleVisitor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "visit_kbd"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":kbd:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "roles.register_local_role"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pytest-dev__pytest-5227": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_LOG_FORMAT ="
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "settings.py",
                        "line_no_str": "50",
                        "window_size_str": "5"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_LOG_FORMAT"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_LOG_FORMAT"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_LOG_FORMAT"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "DEFAULT_LOG_FORMAT"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "logging.basicConfig"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "psf__requests-5414": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "InvalidUrl"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "requests/models.py",
                        "line_no_str": "401",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "idna codec"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get",
                        "file_name": "requests/models.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.url = PreparedRequest.prepare_url(url, params)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "raise InvalidUrl"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "idna codec"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "PreparedRequest"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "InvalidUrl"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "UnicodeError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "requests/models.py",
                        "line_no_str": "401",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "get",
                        "file_name": "requests/api.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "InvalidUrl"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "InvalidURL"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "requests/models.py",
                        "line_no_str": "401",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "prepare_url"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "raise InvalidUrl"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "requests/models.py",
                        "line_no_str": "401",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "InvalidUrl"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "idna codec"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-22734": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tripcolor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_scale_norm"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tripcolor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_scale_norm"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tripcolor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_scale_norm"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tripcolor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_scale_norm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "clim="
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "tripcolor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_scale_norm"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "kwargs"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-11310": [
        [
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fit"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "n_jobs"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "BaseSearchCV"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "BaseSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mean_fit_time"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "GridSearchCV"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_fit",
                        "file_name": "sklearn/grid_search.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "BaseSearchCV"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "cv_results_"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "psf__requests-3362": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "iter_content"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "decode_unicode=True"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "r.text"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "iter_content"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "r.text"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "text",
                        "class_name": "Response"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self.encoding",
                        "file_name": "requests/models.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "iter_content",
                        "class_name": "Response"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "text",
                        "class_name": "Response"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Response"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "iter_content",
                        "class_name": "Response"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "text",
                        "class_name": "Response"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Response"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "iter_content"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "text"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-18698": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sqf_list"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sqf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "polynomial multiplication"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "factorization"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sqf_list"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqf_list"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "sqf_list",
                        "file_name": "sympy/polys/polytools.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "sqf_list",
                        "file_name": "sympy/polys/sqfreetools.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sqf_list"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sqf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqf_list"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sqf_list"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sqf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqf_list((x**2 + 1) * (x - 1)**2 * (x - 2)**3 * (x - 3)**3)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sqf_list(x**5 - 2*x**4 - 2*x**3 + 4*x**2 + x - 2)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sqf"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "sqf_list"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "sqf_list",
                        "file_name": "sympy/polys/polytools.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-26242": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_params",
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validate_parameter_constraints"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_params",
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validate_parameter_constraints"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "validate_parameter_constraints",
                        "file_name": "sklearn/utils/_param_validation.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "_validate_params",
                        "file_name": "sklearn/base.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_params",
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_parameter_constraints"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_params",
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validate_parameter_constraints"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_params",
                        "class_name": "BaseWeightBoosting"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sklearn/base.py",
                        "line_no_str": "600",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_validate_params",
                        "class_name": "AdaBoostClassifier"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validate_parameter_constraints"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "`base_estimator` parameter of AdaBoostClassifier"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "matplotlib__matplotlib-26024": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_mathtext_data.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "tex2uni",
                        "file_name": "_mathtext_data.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "tex2uni",
                        "file_name": "_mathtext_data.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "lib/matplotlib/_mathtext_data.py",
                        "line_no_str": "466",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "tex2uni",
                        "file_name": "_mathtext_data.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "math text"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "unicode",
                        "file_name": "lib/matplotlib/mathtext.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "tex2uni",
                        "file_name": "_mathtext_data.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "tex2uni"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "tex2uni",
                        "file_name": "_mathtext_data.py"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "lib/matplotlib/_mathtext_data.py",
                        "line_no_str": "463",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "tex2uni",
                        "file_name": "_mathtext_data.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def tex2uni"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-12171": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Derivative",
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Float",
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Derivative",
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Float",
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def _print_Derivative(self, expr):"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def _print_Float(self, expr):"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Derivative",
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Float",
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Derivative",
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Float",
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Derivative",
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_print_Float",
                        "class_name": "MCodePrinter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Derivative"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "1.0e-4"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-7350": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Attributes: directive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":noindex: option Sphinx"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Sphinx extension option parsing"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Attributes:"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":noindex:"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle_directive_options"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "process_index_options"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Napoleon"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "parse_directive_options",
                        "class_name": "NapoleonDirective"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle_noindex_option",
                        "class_name": "NapoleonDirective"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Attributes:"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":noindex:"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Napoleon"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "process_attributes_directive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": ":noindex:",
                        "file_name": "conf.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. automodule::"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "index_nodes"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "process_directive_options"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "build_index"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "directive options"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "process_directive_options"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "build_index"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "parsing of reStructuredText directives"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Sphinx's extension mechanisms"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Sphinx's core parsing engine"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Napoleon extension source files"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Sphinxcontrib-napoleon"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Attributes directive"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":noindex:"
                    },
                    "call_ok": true
                }
            ],
            [],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "napoleon Attributes"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "napoleon :noindex:"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinxcontrib-napoleon"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    ],
    "sympy__sympy-24066": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SI"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_collect_factor_and_dimension",
                        "class_name": "SI"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp("
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sympy.physics.units"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dimensionless"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "exp(",
                        "file_name": "sympy/physics/units.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SI"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_collect_factor_and_dimension",
                        "class_name": "SI"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "is_dimensionless"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp("
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_collect_factor_and_dimension",
                        "file_name": "sympy/physics/units/systems/si.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "exp(",
                        "file_name": "sympy/physics/units/systems/si.py"
                    },
                    "call_ok": false
                }
            ],
            [],
            [],
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "units",
                        "file_name": "sympy/physics/units.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SI"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_collect_factor_and_dimension",
                        "class_name": "SI"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "exp"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SI"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_collect_factor_and_dimension",
                        "class_name": "SI"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "is_dimensionless"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp("
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SI"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_collect_factor_and_dimension",
                        "class_name": "SI"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_dimension_system"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "exp(expr)"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "is_dimensionless"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-17176": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bool_map"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_finger"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Xor(A1,A2,A3)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from sympy.logic.boolalg import _finger"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Xor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bool_map"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_finger"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bool_map"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Xor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Xor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_finger"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "Xor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bool_map"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_finger"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Xor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "bool_map"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_finger"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_finger((A1 & A2 & A3) | (~A1 & ~A2 & A3) | (A1 & ~A2 & ~A3) | (~A1 & A2 & ~A3))"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "_finger((A1 & A2 & ~A3) | (~A1 & ~A2 & ~A3) | (A1 & ~A2 & A3) | (~A1 & A2 & A3))"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "sympy__sympy-15599": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mod"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "doit",
                        "file_name": "sympy/core/mod.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def test_Mod():",
                        "file_name": "sympy/core/tests/test_arit.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mod"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "doit",
                        "file_name": "sympy/core/mod.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def test_Mod():",
                        "file_name": "sympy/core/tests/test_arit.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "test_Mod"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Mod",
                        "file_name": "sympy/core/mod.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "doit",
                        "file_name": "sympy/core/mod.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "test_Mod",
                        "file_name": "sympy/core/tests/test_arit.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Mod(3*i, 2)"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "Mod",
                        "file_name": "sympy/core/mod.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "def test_Mod():",
                        "file_name": "sympy/core/tests/test_arit.py"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mod"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def test_Mod():"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Mod"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "doit",
                        "class_name": "Mod"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "Mod(",
                        "file_name": "sympy/core/mod.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "sympy/core/mod.py",
                        "line_no_str": "123",
                        "window_size_str": "5"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-20139": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__new__",
                        "file_name": "sympy/matrices/expressions/matexpr.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "init",
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MatrixSymbol("
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13325": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_key"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "LocMemcache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete_many",
                        "class_name": "BaseMemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "PyLibMCCache"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "LocMemCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete_many",
                        "class_name": "BaseMemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "PyLibMCCache"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "validate_key"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LocMemcache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "LocMemcache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseMemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete_many",
                        "class_name": "BaseMemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PyLibMCCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "PyLibMCCache"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "validate_key("
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "LocMemCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete_many",
                        "class_name": "BaseMemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "PyLibMCCache"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "LocMemcache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseMemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PyLibMCCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "LocMemcache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete_many",
                        "class_name": "BaseMemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "delete",
                        "class_name": "MemcachedCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "touch",
                        "class_name": "PyLibMCCache"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.validate_key(key)"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "self.validate_key",
                        "file_name": "django/core/cache/backends/memcached.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11088": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinaryField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "effective_default",
                        "file_name": "django/db/backends/base/schema.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "database_backwards"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "database_forwards"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "BinaryField default"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "effective_default",
                        "file_name": "site-packages/django/db/backends/base/schema.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinaryField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "alter_field",
                        "file_name": "site-packages/django/db/backends/postgresql/schema.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "alter_field",
                        "file_name": "site-packages/django/db/backends/base/schema.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SchemaEditor"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "effective_default"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "site-packages/django/db/backends/base/schema.py",
                        "line_no_str": "197",
                        "window_size_str": "10"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinaryField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "unapply_migration"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "database_backwards"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinaryField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "effective_default",
                        "file_name": "django/db/backends/base/schema.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "alter_field",
                        "file_name": "django/db/backends/base/schema.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_alter_field",
                        "file_name": "django/db/backends/base/schema.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_alter_field",
                        "file_name": "django/db/backends/postgresql/schema.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "get_code_around_line",
                    "arguments": {
                        "file_name": "django/db/backends/base/schema.py",
                        "line_no_str": "197",
                        "window_size_str": "10"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BinaryField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "effective_default",
                        "file_name": "django/db/backends/base/schema.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "alter_field",
                        "file_name": "django/db/backends/base/schema.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "alter_field",
                        "file_name": "django/db/backends/postgresql/schema.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "unapply_migration",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_migrate_all_backwards",
                        "file_name": "django/db/migrations/executor.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "pydata__xarray-3406": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "groupby"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_combine",
                        "file_name": "core/groupby.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_maybe_reorder",
                        "file_name": "core/groupby.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "inverse_permutation",
                        "file_name": "core/nputils.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "apply",
                        "class_name": "GroupBy"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_combine",
                        "class_name": "GroupBy"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_maybe_reorder",
                        "class_name": "GroupBy"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inverse_permutation"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "groupby"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_combine"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_maybe_reorder"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inverse_permutation"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "groupby"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_combine"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def _maybe_reorder(xarray_obj, dim, positions):"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def inverse_permutation(indices):"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "groupby",
                        "class_name": "Dataset"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "apply"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def _combine(self, applied):"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def _maybe_reorder(xarray_obj, dim, positions):"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inverse_permutation"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "groupby("
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13431": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "aggregate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "F"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "annotate",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "aggregate",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "F"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Max"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sum"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "aggregate",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "annotate",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "SQLCompiler"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "field alias"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "aggregate",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "aggregate"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "annotate"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14016": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__or__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pickle"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__or__",
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getstate__",
                        "class_name": "Q"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__setstate__",
                        "class_name": "Q"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__or__",
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getstate__",
                        "class_name": "Q"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__setstate__",
                        "class_name": "Q"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_combine",
                        "class_name": "Q"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__or__",
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "Q"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__or__",
                        "class_name": "Q"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__reduce__",
                        "class_name": "Q"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "__reduce__"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "Q"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13028": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ProductMetaDataType"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ProductMetaData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "filter",
                        "class_name": "ProductMetaData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_filterable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "objects.filter(metadata_type="
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ProductMetaDataType"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ProductMetaData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "filter",
                        "class_name": "ProductMetaData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_filterable"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ProductMetaDataType"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ProductMetaData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "filter",
                        "class_name": "ProductMetaData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_filterable"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ProductMetaDataType"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ProductMetaData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_filterable"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ProductMetaDataType"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "ProductMetaData"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "check_filterable"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ProductMetaData.objects.filter(value=\"Dark Vador\", metadata_type=self.brand_metadata)"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-16858": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_db_prep_value",
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_prep_value",
                        "class_name": "JSONField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "connection.ops.adapt_json_value"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_prep_value",
                        "class_name": "JSONField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_db_prep_value",
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "connection.ops.adapt_json_value(value, self.encoder)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_prep_value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_db_prep_value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "connection.ops.adapt_json_value(value, self.encoder)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_prep_value",
                        "class_name": "JSONField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_db_prep_value",
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "connection.ops.adapt_json_value"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_prep_value",
                        "class_name": "JSONField"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_db_prep_value",
                        "class_name": "JSONField"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "connection.ops.adapt_json_value(value, self.encoder)"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-14584": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDatabaseWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "execute",
                        "class_name": "BaseDatabaseWrapper"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_connection_params"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.alias"
                    },
                    "call_ok": true
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDatabaseWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "logger"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "database alias"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDatabaseWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "log"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "logger.info"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "logger.debug"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDatabaseWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "execute",
                        "class_name": "BaseDatabaseWrapper"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "self.alias"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "logger"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseDatabaseWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_connection_params",
                        "class_name": "BaseDatabaseWrapper"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "log",
                        "class_name": "BaseDatabaseWrapper"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "execute"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "execute",
                        "file_name": "django/db/backends/utils.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "mwaskom__seaborn-3180": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "relplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_titles"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ticklabel_format"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "matplotlib"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "relplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_titles"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ticklabel_format"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "relplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_titles"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ticklabel_format"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FacetGrid"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "relplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "facet_kws"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_titles"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "ticklabel_format"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "matplotlib.axes.Axes"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "set_xlabel"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "set_ylabel"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "add_legend",
                        "file_name": "seaborn/axisgrid.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "relplot"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "set_titles"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "ticklabel_format"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "facet_kws"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sharex"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sharey"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "col_wrap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "height"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-9902": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Unit"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. py:data::"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Unit"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "from .module2 import Unit",
                        "file_name": "my_library/module1.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. py:data:: mol"
                    },
                    "call_ok": false
                }
            ],
            [],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Unit"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from .module2 import Unit"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. py:data:: mol\\n:type: Unit"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": ".. py:data::",
                        "file_name": "my_library/module1.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Unit"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": ".. py:data:: mol",
                        "file_name": "my_library/module1.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from .module2 import Unit"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Unit"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.autodoc"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ".. py:data:: mol"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "autodoc",
                        "file_name": "doc/conf.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-15011": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dummify"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "dummify=True"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SyntaxError"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "lambdify"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MatrixSymbol"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-16943": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fps"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FormalPowerSeries"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fps"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pow"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "if isinstance"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fps"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Pow"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class FormalPowerSeries"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fps"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FormalPowerSeries"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Symbol"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "fps"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "fps(x ** 2)"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class sympy.core.power.Pow"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FormalPowerSeries"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Pow"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "return f",
                        "file_name": "sympy/series/formal.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-13551": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PasswordResetTokenGenerator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_make_hash_value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "change_email"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "email change"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PasswordResetTokenGenerator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_make_hash_value",
                        "class_name": "PasswordResetTokenGenerator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AbstractBaseUser"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PasswordResetTokenGenerator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_make_hash_value"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AbstractBaseUser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "email changes"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PasswordResetTokenGenerator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_make_hash_value",
                        "class_name": "PasswordResetTokenGenerator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AbstractBaseUser"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_session_auth_hash"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "email"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "PasswordResetTokenGenerator"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_make_hash_version",
                        "class_name": "PasswordResetTokenGenerator"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "AbstractBaseUser"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11707": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Subquery"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getstate__",
                        "class_name": "Subquery"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseExpression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "pickle.dumps"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@deconstructible"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Subquery"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getstate__",
                        "class_name": "Subquery"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@deconstructible"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "test_pickle_subquery_queryset_not_evaluated"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Subquery"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseExpression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getstate__",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Subquery"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getstate__",
                        "class_name": "Subquery"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseExpression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@deconstructible"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "QuerySet.__getstate__"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Subquery"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseExpression"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "@deconstructible"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getstate__",
                        "class_name": "Subquery"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__getstate__",
                        "class_name": "BaseExpression"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-11133": [
        [
            [],
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "memoryview"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "HttpResponse"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "content",
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "content",
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "make_bytes",
                        "class_name": "HttpResponse"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "content",
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "content",
                        "class_name": "HttpResponse"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_bytes"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sphinx-doc__sphinx-10614": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inheritance_diagram"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "url path svg"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "relative url"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "embed svg object"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "InheritanceDiagram"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "make_path_relative"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "svg"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "path"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "inheritance_diagram"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "svg"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "sphinx.ext.inheritance_diagram"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "path generation"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "modify path"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "embed svg"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "object tag svg"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-15128": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "change_aliases",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "combine",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "table_alias",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "join",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "qs1 | qs2"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "change_aliases",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "combine",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "join",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "table_alias",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Baz"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Qux"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "change_aliases",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "combine",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "table_alias",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "join",
                        "class_name": "Query"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "change_aliases"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "combine"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Baz"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Qux"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "combine",
                        "file_name": "django/db/models/sql/query.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "change_aliases",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "combine",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "table_alias",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "join",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Qux"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Foo"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Bar"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Baz"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "qux.foos.all()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Foo.objects.filter("
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "django__django-7475": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diffsettings"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "DiffSettingsCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_arguments",
                        "class_name": "DiffSettingsCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": "DiffSettingsCommand"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "diffsettings.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "diffsettings"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "add_arguments"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from django.conf import settings"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diffsettings"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "class DiffSettingsCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "handle",
                        "class_name": "DiffSettingsCommand"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "from django.conf import settings"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "diffsettings"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "settings"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "diffsettings",
                        "file_name": "manage.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "handle"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Command"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_arguments",
                        "class_name": "Command"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-10904": [
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "IOError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "EnvironmentError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "WindowsError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mmap.error"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "socket.error"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "select.error"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SMTPException"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "IOError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "EnvironmentError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "WindowsError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mmap.error"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "socket.error"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "select.error"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SMTPException"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "IOError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "EnvironmentError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "WindowsError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mmap.error"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "socket.error"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "select.error"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SMTPException"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "IOError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "EnvironmentError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "WindowsError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mmap.error"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "socket.error"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "select.error"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SMTPException"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "IOError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "EnvironmentError"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "WindowsError"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "mmap.error"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "socket.error"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "select.error"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "SMTPException"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-16255": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_latest_lastmod",
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "max() arg is an empty sequence"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_latest_lastmod",
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "return max([self.lastmod(item) for item in self.items()])"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_latest_lastmod",
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "items",
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "index",
                        "file_name": "django/contrib/sitemaps/views.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "def get_latest_lastmod(self):"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_latest_lastmod",
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "max(",
                        "file_name": "/usr/local/lib/python3.10/site-packages/django/contrib/sitemaps/__init__.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "get_latest_lastmod",
                        "class_name": "Sitemap"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "index",
                        "file_name": "django/contrib/sitemaps/views.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "except TypeError:",
                        "file_name": "django/contrib/sitemaps/__init__.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15382": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "filter",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "objects.none()"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "get_compiler"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "filter",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "EmptyResultSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "as_sql"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "MyModel.objects.filter(~models.Exists(MyModel.objects.none()), name='test')"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "as_sql",
                        "class_name": "Exists"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "MyModel"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "filter",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "none",
                        "class_name": "QuerySet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "EmptyResultSet"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Exists"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "filter"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "EmptyResultSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "#33018"
                    },
                    "call_ok": false
                }
            ],
            []
        ]
    ],
    "scikit-learn__scikit-learn-13328": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HuberRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "HuberRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "_huber_loss_and_gradient",
                        "class_name": "HuberRegressor"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_huber_loss_and_gradient"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HuberRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "HuberRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "X > 0"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "np.asarray"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HuberRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "HuberRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_huber_loss_and_gradient"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HuberRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "_huber_loss_and_gradient"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "X_non_outliers = -axis0_safe_slice(X, ~outliers_mask, n_non_outliers)"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "HuberRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "fit",
                        "class_name": "HuberRegressor"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "-axis0_safe_slice"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "astropy__astropy-14413": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_string"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unicode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "console"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_string"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decompose"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "f'{(u.m**-1):unicode}'"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "f'{(u.eV*u.s**2).decompose():unicode}'"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_string"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "u.m**-1"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "u.eV*u.s**2"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decompose"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "to_string"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decompose"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":unicode"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": ":console"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Unit"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "to_string",
                        "class_name": "Unit"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "unicode"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "console"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "decompose"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "sympy__sympy-17139": [
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "simplify",
                        "file_name": "simplify/simplify.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "TR6",
                        "file_name": "simplify/fu.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_TR56",
                        "file_name": "simplify/fu.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__lt__",
                        "class_name": "Expr"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "simplify",
                        "file_name": "/home/e/se/sympy/simplify/simplify.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "TR6",
                        "file_name": "/home/e/se/sympy/simplify/fu.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_TR56",
                        "file_name": "/home/e/se/sympy/simplify/fu.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__lt__",
                        "file_name": "/home/e/se/sympy/core/expr.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "simplify",
                        "file_name": "sympy/simplify/simplify.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "trigsimp",
                        "file_name": "sympy/simplify/trigsimp.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_futrig",
                        "file_name": "sympy/simplify/trigsimp.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "bottom_up",
                        "file_name": "sympy/simplify/simplify.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "TR6",
                        "file_name": "sympy/simplify/fu.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__lt__",
                        "file_name": "sympy/core/expr.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "simplify",
                        "file_name": "sympy/simplify/simplify.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "trigsimp",
                        "file_name": "sympy/simplify/trigsimp.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "bottom_up",
                        "file_name": "sympy/simplify/simplify.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "_futrig",
                        "file_name": "sympy/simplify/trigsimp.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "TR6",
                        "file_name": "sympy/simplify/fu.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class_in_file",
                    "arguments": {
                        "class_name": "Expr",
                        "file_name": "sympy/core/expr.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "TR6",
                        "file_name": "sympy/simplify/fu.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "bottom_up",
                        "file_name": "sympy/simplify/simplify.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "bottom_up",
                        "file_name": "sympy/simplify/trigsimp.py"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "__lt__",
                        "file_name": "sympy/core/expr.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-15671": [
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "BaseFormSet"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "clean"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "default_error_messages"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FormSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inlineformset_factory"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "FormSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "error_messages"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FormSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "__init__",
                        "class_name": "FormSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "clean",
                        "class_name": "FormSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inlineformset_factory"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "default_error_messages",
                        "file_name": "formset.py"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FormSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "default_error_messages",
                        "class_name": "FormSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "FormSet(error_messages="
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "FormSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "add_error",
                        "class_name": "FormSet"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "error_messages"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "error_messages",
                        "file_name": "<file name from the result of search_class('FormSet')>"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "inlineformset_factory"
                    },
                    "call_ok": true
                }
            ],
            [
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "BaseFormSet",
                        "file_name": "django/forms/formsets.py"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code_in_file",
                    "arguments": {
                        "code_str": "default_error_messages",
                        "file_name": "django/forms/formsets.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ],
    "django__django-9003": [
        [
            [
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "combine"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Invoice"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "combine",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "assert set(change_map.keys()).intersection(set(change_map.values())) == set()"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Invoice"
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Invoice"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_method",
                    "arguments": {
                        "method_name": "combine"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Invoice.objects.filter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "filtered_invoices |= invoices.filter"
                    },
                    "call_ok": false
                }
            ],
            [
                {
                    "func_name": "search_method_in_file",
                    "arguments": {
                        "method_name": "combine",
                        "file_name": "django/db/models/sql/query.py"
                    },
                    "call_ok": true
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "combine",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Invoice"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "combine"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Invoice.objects.filter("
                    },
                    "call_ok": false
                }
            ],
            []
        ],
        [
            [
                {
                    "func_name": "search_method_in_class",
                    "arguments": {
                        "method_name": "combine",
                        "class_name": "Query"
                    },
                    "call_ok": true
                },
                {
                    "func_name": "search_class",
                    "arguments": {
                        "class_name": "Invoice"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "Invoice.objects.filter"
                    },
                    "call_ok": false
                },
                {
                    "func_name": "search_code",
                    "arguments": {
                        "code_str": "change_map"
                    },
                    "call_ok": true
                }
            ],
            []
        ]
    ]
}