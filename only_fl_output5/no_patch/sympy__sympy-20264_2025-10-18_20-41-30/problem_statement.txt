RecursionError occured while convert sympy expression to latex when expression like Pow(1/n,-1)
Hello,
Thanks for awesome library  :)
I find issue but I can't figure out why the following phenomena occur, so I write an issue.

I use `sympy 1.62` and i tried to latex function to change sympy expression to latex.
But RecursionError occured while change  Pow(Rational(1,n), evaluate=False) result to latex.
It error occured only when (numerator = 1 and denominator=Positive integer bigger than 1) or (numerator = -1 and denominator=Negative integer lower than -1) .
Below is code of i runned:

```python
In [1]: from sympy import *
In [2]: latex(Pow(Rational(1,2),-1, evaluate=False))
---------------------------------------------------------------------------
RecursionError                            Traceback (most recent call last)
<ipython-input-31-3a386932456f> in <module>
----> 1 latex(Pow(Rational(1,2),-1, evaluate=False))

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/latex.py in latex(expr, full_prec, min, max, fold_frac_powers, fold_func_brackets, fold_short_frac, inv_trig_style, itex, ln_notation, long_frac_ratio, mat_delim, mat_str, mode, mul_symbol, order, symbol_names, root_notation, mat_symbol_style, imaginary_unit, gothic_re_im, decimal_separator, perm_cyclic, parenthesize_super)
   2803     }
   2804 
-> 2805     return LatexPrinter(settings).doprint(expr)
   2806 
   2807 

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/latex.py in doprint(self, expr)
    232 
    233     def doprint(self, expr):
--> 234         tex = Printer.doprint(self, expr)
    235 
    236         if self._settings['mode'] == 'plain':

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/printer.py in doprint(self, expr)
    249     def doprint(self, expr):
    250         """Returns printer's representation for expr (as a string)"""
--> 251         return self._str(self._print(expr))
    252 
    253     def _print(self, expr, **kwargs):

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/printer.py in _print(self, expr, **kwargs)
    287                 printmethod = '_print_' + cls.__name__
    288                 if hasattr(self, printmethod):
--> 289                     return getattr(self, printmethod)(expr, **kwargs)
    290             # Unknown object, fall back to the emptyPrinter. Checks what type of
    291             # decimal separator to print.

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/latex.py in _print_Pow(self, expr)
    612                 return r"%s^{%s}" % (expr.base, expr.exp)
    613             # things like 1/x
--> 614             return self._print_Mul(expr)
    615         else:
    616             if expr.base.is_Function:

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/latex.py in _print_Mul(self, expr)
    531             # use the original expression here, since fraction() may have
    532             # altered it when producing numer and denom
--> 533             tex += convert(expr)
    534 
    535         else:

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/latex.py in convert(expr)
    496         def convert(expr):
    497             if not expr.is_Mul:
--> 498                 return str(self._print(expr))
    499             else:
    500                 _tex = last_term_tex = ""

... last 4 frames repeated, from the frame below ...

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/printer.py in _print(self, expr, **kwargs)
    287                 printmethod = '_print_' + cls.__name__
    288                 if hasattr(self, printmethod):
--> 289                     return getattr(self, printmethod)(expr, **kwargs)
    290             # Unknown object, fall back to the emptyPrinter. Checks what type of
    291             # decimal separator to print.

RecursionError: maximum recursion depth exceeded while calling a Python object

In [3]: latex(Pow(Rational(1,1),-1, evaluate=False))
Out[3]: '1^{-1}'

In [4]: latex(Pow(Rational(1,2.5),-1, evaluate=False))
Out[4]: '\\frac{1}{\\frac{2}{5}}'

In [5]: latex(Pow(Rational(1,-2),-1, evaluate=False))
Out[5]: '\\frac{1}{- \\frac{1}{2}}'

In [6]: latex(Pow(Rational(1,0),-1, evaluate=False))
Out[6]: '\\frac{1}{\\tilde{\\infty}}'

In [7]: latex(Pow(Rational(-1,5),-1, evaluate=False))
Out[7]: '\\frac{1}{- \\frac{1}{5}}'

In [8]: latex(Pow(Rational(-1,-5),-1, evaluate=False))
---------------------------------------------------------------------------
RecursionError                            Traceback (most recent call last)
<ipython-input-32-ea66262fffb9> in <module>
----> 1 latex(Pow(Rational(-1,-5),-1, evaluate=False))

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/latex.py in latex(expr, full_prec, min, max, fold_frac_powers, fold_func_brackets, fold_short_frac, inv_trig_style, itex, ln_notation, long_frac_ratio, mat_delim, mat_str, mode, mul_symbol, order, symbol_names, root_notation, mat_symbol_style, imaginary_unit, gothic_re_im, decimal_separator, perm_cyclic, parenthesize_super)
   2803     }
   2804 
-> 2805     return LatexPrinter(settings).doprint(expr)
   2806 
   2807 

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/latex.py in doprint(self, expr)
    232 
    233     def doprint(self, expr):
--> 234         tex = Printer.doprint(self, expr)
    235 
    236         if self._settings['mode'] == 'plain':

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/printer.py in doprint(self, expr)
    249     def doprint(self, expr):
    250         """Returns printer's representation for expr (as a string)"""
--> 251         return self._str(self._print(expr))
    252 
    253     def _print(self, expr, **kwargs):

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/printer.py in _print(self, expr, **kwargs)
    287                 printmethod = '_print_' + cls.__name__
    288                 if hasattr(self, printmethod):
--> 289                     return getattr(self, printmethod)(expr, **kwargs)
    290             # Unknown object, fall back to the emptyPrinter. Checks what type of
    291             # decimal separator to print.

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/latex.py in _print_Pow(self, expr)
    612                 return r"%s^{%s}" % (expr.base, expr.exp)
    613             # things like 1/x
--> 614             return self._print_Mul(expr)
    615         else:
    616             if expr.base.is_Function:

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/latex.py in _print_Mul(self, expr)
    531             # use the original expression here, since fraction() may have
    532             # altered it when producing numer and denom
--> 533             tex += convert(expr)
    534 
    535         else:

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/latex.py in convert(expr)
    496         def convert(expr):
    497             if not expr.is_Mul:
--> 498                 return str(self._print(expr))
    499             else:
    500                 _tex = last_term_tex = ""

... last 4 frames repeated, from the frame below ...

~/opt/anaconda3/lib/python3.7/site-packages/sympy/printing/printer.py in _print(self, expr, **kwargs)
    287                 printmethod = '_print_' + cls.__name__
    288                 if hasattr(self, printmethod):
--> 289                     return getattr(self, printmethod)(expr, **kwargs)
    290             # Unknown object, fall back to the emptyPrinter. Checks what type of
    291             # decimal separator to print.

RecursionError: maximum recursion depth exceeded while calling a Python object
```
