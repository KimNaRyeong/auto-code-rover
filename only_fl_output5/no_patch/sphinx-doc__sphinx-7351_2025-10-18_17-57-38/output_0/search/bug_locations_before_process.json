[
    {
        "file": "sphinx/environment/adapters/toctree.py",
        "class": "",
        "method": "",
        "intended_behavior": "This file should incorporate a mechanism to explicitly manage or warn about file extension preferences or conflicts when processing toctree directives. The logic should either allow for a configuration option specifying the order of preference for file extensions or, if such an option isn\u2019t set, log a warning when a potential conflict is detected (e.g., when both a.md and a.rst are present). This would help ensure that users are made aware of potential unexpected behaviors in documentation builds and can specify preferences to align Sphinx's behavior with their expectations."
    },
    {
        "file": "sphinx/application.py",
        "class": "",
        "method": "add_source_parser",
        "intended_behavior": "Within these files, particularly around the add_source_parser method, there should be an enhancement to handle and prioritize which parser to use when multiple extensions are applicable for the same filename. This might include improving the mechanism for registering source parsers to include priority settings or developing a new approach to parser selection that accommodates user-defined preferences. The goal is to create a predictable and transparent method that decides which file to include when there's a conflict between files of different extensions that could be processed by different parsers."
    },
    {
        "file": "sphinx/registry.py",
        "class": "",
        "method": "add_source_parser",
        "intended_behavior": "Within these files, particularly around the add_source_parser method, there should be an enhancement to handle and prioritize which parser to use when multiple extensions are applicable for the same filename. This might include improving the mechanism for registering source parsers to include priority settings or developing a new approach to parser selection that accommodates user-defined preferences. The goal is to create a predictable and transparent method that decides which file to include when there's a conflict between files of different extensions that could be processed by different parsers."
    }
]