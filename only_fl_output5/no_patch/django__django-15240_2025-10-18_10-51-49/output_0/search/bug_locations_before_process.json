[
    {
        "file": "django/db/migrations/executor.py",
        "class": "MigrationExecutor",
        "method": "record_migration",
        "intended_behavior": "Enhance the 'record_migration' method to include a verification step before recording migrations as applied. This step should check whether each migration mentioned in the 'replaces' list still exists within the migration directory. If a migration file does not exist (and is not part of a squashed migration's 'replaces' list), the method should not record it in the 'django_migrations' table. This preserves the functionality of accurately tracking applied migrations while preventing inaccuracies due to deleted migration files."
    },
    {
        "file": "django/db/migrations/recorder.py",
        "class": "",
        "method": "",
        "intended_behavior": "Implement a new method within 'MigrationRecorder' named something like 'cleanup_nonexistent_migrations'. This method should iterate over entries in the 'django_migrations' table, compare them with the migration files present in the project, and remove any entries that do not have a corresponding migration file and are not listed in the 'replaces' attribute of squashed migrations. This method could be called from the 'MigrationExecutor' before or after the migration process to ensure the 'django_migrations' table remains accurate, facilitating the automatic cleanup of the table to reflect only extant migrations or those explicitly replaced in the context of squashed migrations."
    }
]