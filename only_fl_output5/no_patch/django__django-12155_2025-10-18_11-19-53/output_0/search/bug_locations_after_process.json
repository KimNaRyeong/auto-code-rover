[
    {
        "rel_file_path": "django/contrib/admindocs/utils.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/django__django/setup_django__django__3.1/django/contrib/admindocs/utils.py",
        "start": 27,
        "end": 39,
        "class_name": null,
        "method_name": "trim_docstring",
        "code": "27 def trim_docstring(docstring):\n28     \"\"\"\n29     Uniformly trim leading/trailing whitespace from docstrings.\n30 \n31     Based on https://www.python.org/dev/peps/pep-0257/#handling-docstring-indentation\n32     \"\"\"\n33     if not docstring or not docstring.strip():\n34         return ''\n35     # Convert tabs to spaces and split into lines\n36     lines = docstring.expandtabs().splitlines()\n37     indent = min(len(line) - len(line.lstrip()) for line in lines if line.lstrip())\n38     trimmed = [lines[0].lstrip()] + [line[indent:].rstrip() for line in lines[1:]]\n39     return \"\\n\".join(trimmed).strip()\n",
        "intended_behavior": "The `trim_docstring` function should correctly handle docstrings where text starts on the first line by adjusting its indentation measurement logic. To resolve the issue and preserve existing functionality:\n\n- The `indent` calculation should be updated to skip the indentation of the first line when computing the minimum indentation level for the rest of the docstring. This ensures the first line is considered separately from the indentation correction applied to subsequent lines.\n- Specifically, changing the line `37` from:\n  ```python\n  indent = min(len(line) - len(line.lstrip()) for line in lines if line.lstrip())\n  ```\n  to:\n  ```python\n  indent = min(len(line) - len(line.lstrip()) for line in lines[1:] if line.lstrip())\n  ```\n  This modification ensures that the calculation of `indent` ignores the first line, thereby preventing a scenario where the indentation level of the first line incorrectly influences or causes errors in processing the subsequent lines. \n- Ensure that this change does not affect docstrings that already conform to Django's practice (i.e., where the first line is empty), thereby maintaining backward compatibility and preserving the functionality for existing Django codebases.\n- The first line will still be stripped of leading spaces (to remove any unnecessary indentation), but its lack of leading spaces won't incorrectly set the indentation level for the rest of the docstring.\n- This behavior allows docstrings that follow the more common Python convention (where the description starts on the first line) to be processed without errors, making the `trim_docstring` function more flexible and robust."
    }
]