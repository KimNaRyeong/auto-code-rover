count_ops is slow for large expressions
It seems that this script was hanging inside `count_ops`:

```
moorepants@garuda:pydy.wiki(master)$ SYMPY_CACHE_SIZE=10000 ipython
Python 3.5.1 |Continuum Analytics, Inc.| (default, Dec  7 2015, 11:16:01) 
Type "copyright", "credits" or "license" for more information.

IPython 4.1.2 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: %paste
   In [1]: from pydy.models import n_link_pendulum_on_cart

   In [2]: sys = n_link_pendulum_on_cart(3)

   In [3]: x_dot = sys.eom_method.rhs()

   In [4]: %time jac = x_dot.jacobian(sys.states)
## -- End pasted text --
CPU times: user 2.2 s, sys: 4 ms, total: 2.21 s
Wall time: 2.2 s

In [2]: %paste
   In [5]: sys = n_link_pendulum_on_cart(4)

   In [6]: x_dot = sys.eom_method.rhs()

   In [7]: %time jac = x_dot.jacobian(sys.states)
## -- End pasted text --
^C---------------------------------------------------------------------------
KeyboardInterrupt                         Traceback (most recent call last)
<ipython-input-2-1039ec729c05> in <module>()
      3 x_dot = sys.eom_method.rhs()
      4 
----> 5 get_ipython().magic('time jac = x_dot.jacobian(sys.states)')

/home/moorepants/miniconda3/lib/python3.5/site-packages/IPython/core/interactiveshell.py in magic(self, arg_s)
   2161         magic_name, _, magic_arg_s = arg_s.partition(' ')
   2162         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)
-> 2163         return self.run_line_magic(magic_name, magic_arg_s)
   2164 
   2165     #-------------------------------------------------------------------------

/home/moorepants/miniconda3/lib/python3.5/site-packages/IPython/core/interactiveshell.py in run_line_magic(self, magic_name, line)
   2082                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals
   2083             with self.builtin_trap:
-> 2084                 result = fn(*args,**kwargs)
   2085             return result
   2086 

<decorator-gen-60> in time(self, line, cell, local_ns)

/home/moorepants/miniconda3/lib/python3.5/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k)
    191     # but it's overkill for just that one bit of state.
    192     def magic_deco(arg):
--> 193         call = lambda f, *a, **k: f(*a, **k)
    194 
    195         if callable(arg):

/home/moorepants/miniconda3/lib/python3.5/site-packages/IPython/core/magics/execution.py in time(self, line, cell, local_ns)
   1175         else:
   1176             st = clock2()
-> 1177             exec(code, glob, local_ns)
   1178             end = clock2()
   1179             out = None

<timed exec> in <module>()

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/matrices/matrices.py in jacobian(self, X)
   1551         # m is the number of functions and n is the number of variables
   1552         # computing the Jacobian is now easy:
-> 1553         return self._new(m, n, lambda j, i: self[j].diff(X[i]))
   1554 
   1555     def QRdecomposition(self):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/matrices/dense.py in _new(cls, *args, **kwargs)
    601     @classmethod
    602     def _new(cls, *args, **kwargs):
--> 603         rows, cols, flat_list = cls._handle_creation_inputs(*args, **kwargs)
    604         self = object.__new__(cls)
    605         self.rows = rows

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/matrices/matrices.py in _handle_creation_inputs(cls, *args, **kwargs)
    207                     flat_list.extend(
    208                         [cls._sympify(op(cls._sympify(i), cls._sympify(j)))
--> 209                         for j in range(cols)])
    210 
    211             # Matrix(2, 2, [1, 2, 3, 4])

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/matrices/matrices.py in <listcomp>(.0)
    207                     flat_list.extend(
    208                         [cls._sympify(op(cls._sympify(i), cls._sympify(j)))
--> 209                         for j in range(cols)])
    210 
    211             # Matrix(2, 2, [1, 2, 3, 4])

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/matrices/matrices.py in <lambda>(j, i)
   1551         # m is the number of functions and n is the number of variables
   1552         # computing the Jacobian is now easy:
-> 1553         return self._new(m, n, lambda j, i: self[j].diff(X[i]))
   1554 
   1555     def QRdecomposition(self):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/mul.py in _eval_derivative(self, s)
    832         terms = []
    833         for i in range(len(args)):
--> 834             d = args[i].diff(s)
    835             if d:
    836                 terms.append(self.func(*(args[:i] + [d] + args[i + 1:])))

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/add.py in _eval_derivative(self, s)
    351     @cacheit
    352     def _eval_derivative(self, s):
--> 353         return self.func(*[a.diff(s) for a in self.args])
    354 
    355     def _eval_nseries(self, x, n, logx):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/add.py in <listcomp>(.0)
    351     @cacheit
    352     def _eval_derivative(self, s):
--> 353         return self.func(*[a.diff(s) for a in self.args])
    354 
    355     def _eval_nseries(self, x, n, logx):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/mul.py in _eval_derivative(self, s)
    832         terms = []
    833         for i in range(len(args)):
--> 834             d = args[i].diff(s)
    835             if d:
    836                 terms.append(self.func(*(args[:i] + [d] + args[i + 1:])))

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/add.py in _eval_derivative(self, s)
    351     @cacheit
    352     def _eval_derivative(self, s):
--> 353         return self.func(*[a.diff(s) for a in self.args])
    354 
    355     def _eval_nseries(self, x, n, logx):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/add.py in <listcomp>(.0)
    351     @cacheit
    352     def _eval_derivative(self, s):
--> 353         return self.func(*[a.diff(s) for a in self.args])
    354 
    355     def _eval_nseries(self, x, n, logx):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/mul.py in _eval_derivative(self, s)
    832         terms = []
    833         for i in range(len(args)):
--> 834             d = args[i].diff(s)
    835             if d:
    836                 terms.append(self.func(*(args[:i] + [d] + args[i + 1:])))

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/add.py in _eval_derivative(self, s)
    351     @cacheit
    352     def _eval_derivative(self, s):
--> 353         return self.func(*[a.diff(s) for a in self.args])
    354 
    355     def _eval_nseries(self, x, n, logx):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/add.py in <listcomp>(.0)
    351     @cacheit
    352     def _eval_derivative(self, s):
--> 353         return self.func(*[a.diff(s) for a in self.args])
    354 
    355     def _eval_nseries(self, x, n, logx):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/mul.py in _eval_derivative(self, s)
    832         terms = []
    833         for i in range(len(args)):
--> 834             d = args[i].diff(s)
    835             if d:
    836                 terms.append(self.func(*(args[:i] + [d] + args[i + 1:])))

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/add.py in _eval_derivative(self, s)
    351     @cacheit
    352     def _eval_derivative(self, s):
--> 353         return self.func(*[a.diff(s) for a in self.args])
    354 
    355     def _eval_nseries(self, x, n, logx):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/add.py in <listcomp>(.0)
    351     @cacheit
    352     def _eval_derivative(self, s):
--> 353         return self.func(*[a.diff(s) for a in self.args])
    354 
    355     def _eval_nseries(self, x, n, logx):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/mul.py in _eval_derivative(self, s)
    832         terms = []
    833         for i in range(len(args)):
--> 834             d = args[i].diff(s)
    835             if d:
    836                 terms.append(self.func(*(args[:i] + [d] + args[i + 1:])))

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/power.py in _eval_derivative(self, s)
    982     def _eval_derivative(self, s):
    983         from sympy import log
--> 984         dbase = self.base.diff(s)
    985         dexp = self.exp.diff(s)
    986         return self * (dexp * log(self.base) + dbase * self.exp/self.base)

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/add.py in _eval_derivative(self, s)
    351     @cacheit
    352     def _eval_derivative(self, s):
--> 353         return self.func(*[a.diff(s) for a in self.args])
    354 
    355     def _eval_nseries(self, x, n, logx):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/add.py in <listcomp>(.0)
    351     @cacheit
    352     def _eval_derivative(self, s):
--> 353         return self.func(*[a.diff(s) for a in self.args])
    354 
    355     def _eval_nseries(self, x, n, logx):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/mul.py in _eval_derivative(self, s)
    832         terms = []
    833         for i in range(len(args)):
--> 834             d = args[i].diff(s)
    835             if d:
    836                 terms.append(self.func(*(args[:i] + [d] + args[i + 1:])))

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in diff(self, *symbols, **assumptions)
   2864         new_symbols = list(map(sympify, symbols))  # e.g. x, 2, y, z
   2865         assumptions.setdefault("evaluate", True)
-> 2866         return Derivative(self, *new_symbols, **assumptions)
   2867 
   2868     ###########################################################################

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, expr, *variables, **assumptions)
   1141                     old_v = v
   1142                     v = new_v
-> 1143                 obj = expr._eval_derivative(v)
   1144                 nderivs += 1
   1145                 if not is_symbol:

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/power.py in _eval_derivative(self, s)
    984         dbase = self.base.diff(s)
    985         dexp = self.exp.diff(s)
--> 986         return self * (dexp * log(self.base) + dbase * self.exp/self.base)
    987 
    988     def _eval_evalf(self, prec):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in __new__(cls, *args, **options)
    388 
    389         pr = max(cls._should_evalf(a) for a in result.args)
--> 390         pr2 = min(cls._should_evalf(a) for a in result.args)
    391         if pr2 > 0:
    392             return result.evalf(mlib.libmpf.prec_to_dps(pr))

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in <genexpr>(.0)
    388 
    389         pr = max(cls._should_evalf(a) for a in result.args)
--> 390         pr2 = min(cls._should_evalf(a) for a in result.args)
    391         if pr2 > 0:
    392             return result.evalf(mlib.libmpf.prec_to_dps(pr))

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in _should_evalf(cls, arg)
    411         # Don't use as_real_imag() here, that's too much work
    412         a, b = Wild('a'), Wild('b')
--> 413         m = arg.match(a + b*S.ImaginaryUnit)
    414         if not m or not (m[a].is_Float or m[b].is_Float):
    415             return -1

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/basic.py in match(self, pattern, old)
   1489         """
   1490         pattern = sympify(pattern)
-> 1491         return pattern.matches(self, old=old)
   1492 
   1493     def count_ops(self, visual=None):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/add.py in matches(self, expr, repl_dict, old)
    365 
    366     def matches(self, expr, repl_dict={}, old=False):
--> 367         return AssocOp._matches_commutative(self, expr, repl_dict, old)
    368 
    369     @staticmethod

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/operations.py in _matches_commutative(self, expr, repl_dict, old)
    215                     d1 = w.matches(last_op, repl_dict)
    216                     if d1 is not None:
--> 217                         d2 = self.xreplace(d1).matches(expr, d1)
    218                         if d2 is not None:
    219                             return d2

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/add.py in matches(self, expr, repl_dict, old)
    365 
    366     def matches(self, expr, repl_dict={}, old=False):
--> 367         return AssocOp._matches_commutative(self, expr, repl_dict, old)
    368 
    369     @staticmethod

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/operations.py in _matches_commutative(self, expr, repl_dict, old)
    201             newexpr = self._combine_inverse(expr, exact)
    202             if not old and (expr.is_Add or expr.is_Mul):
--> 203                 if newexpr.count_ops() > expr.count_ops():
    204                     return None
    205             return newpattern.matches(newexpr, repl_dict)

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/expr.py in count_ops(self, visual)
   1017         """wrapper for count_ops that returns the operation count."""
   1018         from .function import count_ops
-> 1019         return count_ops(self, visual)
   1020 
   1021     def args_cnc(self, cset=False, warn=True, split_1=True):

/home/moorepants/miniconda3/lib/python3.5/site-packages/sympy/core/function.py in count_ops(expr, visual)
   2378                 a.is_Pow or
   2379                 a.is_Function or
-> 2380                 isinstance(a, Derivative) or
   2381                     isinstance(a, Integral)):
   2382 

KeyboardInterrupt: 

In [3]: 
```

