[
    {
        "rel_file_path": "testing/conftest.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/pytest-dev__pytest/setup_pytest-dev__pytest__4.6/testing/conftest.py",
        "start": 1,
        "end": 57,
        "class_name": null,
        "method_name": null,
        "code": "1 import sys\n2 \n3 import pytest\n4 \n5 if sys.gettrace():\n6 \n7     @pytest.fixture(autouse=True)\n8     def restore_tracing():\n9         \"\"\"Restore tracing function (when run with Coverage.py).\n10 \n11         https://bugs.python.org/issue37011\n12         \"\"\"\n13         orig_trace = sys.gettrace()\n14         yield\n15         if sys.gettrace() != orig_trace:\n16             sys.settrace(orig_trace)\n17 \n18 \n19 @pytest.hookimpl(hookwrapper=True, tryfirst=True)\n20 def pytest_collection_modifyitems(config, items):\n21     \"\"\"Prefer faster tests.\n22 \n23     Use a hookwrapper to do this in the beginning, so e.g. --ff still works\n24     correctly.\n25     \"\"\"\n26     fast_items = []\n27     slow_items = []\n28     slowest_items = []\n29     neutral_items = []\n30 \n31     spawn_names = {\"spawn_pytest\", \"spawn\"}\n32 \n33     for item in items:\n34         try:\n35             fixtures = item.fixturenames\n36         except AttributeError:\n37             # doctest at least\n38             # (https://github.com/pytest-dev/pytest/issues/5070)\n39             neutral_items.append(item)\n40         else:\n41             if \"testdir\" in fixtures:\n42                 if spawn_names.intersection(item.function.__code__.co_names):\n43                     item.add_marker(pytest.mark.uses_pexpect)\n44                     slowest_items.append(item)\n45                 else:\n46                     slow_items.append(item)\n47                 item.add_marker(pytest.mark.slow)\n48             else:\n49                 marker = item.get_closest_marker(\"slow\")\n50                 if marker:\n51                     slowest_items.append(item)\n52                 else:\n53                     fast_items.append(item)\n54 \n55     items[:] = fast_items + neutral_items + slow_items + slowest_items\n56 \n57     yield\n",
        "intended_behavior": "The code within these potential locations should safely import modules or handle imports in a way that doesn't intrude on the normal operation of doctest or pytest's wrapping/unwrapping mechanisms. This could involve ensuring that any dynamic imports are done in a way that doesn't conflict with the wrapped objects or functions that pytest or other libraries might use for their internal processing; checking and possibly refactoring the use of decorators or meta-programming techniques that might obscure the visibility or alter the expected structure of objects, particularly those related to the test collection phase; if a custom plugin or extension for pytest is involved, verifying that it properly uses the plugin hooks and adheres to the contracts expected by pytest, particularly around test collection, fixture setup, and teardown."
    }
]