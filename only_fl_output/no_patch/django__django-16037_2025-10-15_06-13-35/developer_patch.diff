diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py
--- a/django/db/models/expressions.py
+++ b/django/db/models/expressions.py
@@ -1501,6 +1501,14 @@ def __invert__(self):
         clone.negated = not self.negated
         return clone
 
+    def get_group_by_cols(self, alias=None):
+        # self.query only gets limited to a single row in the .exists() call
+        # from self.as_sql() so deferring to Query.get_group_by_cols() is
+        # inappropriate.
+        if alias is None:
+            return [self]
+        return super().get_group_by_cols(alias)
+
     def as_sql(self, compiler, connection, template=None, **extra_context):
         query = self.query.exists(using=connection.alias)
         try:
diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -160,7 +160,10 @@ def get_group_by(self, select, order_by):
         expressions = self.collapse_group_by(expressions, having_group_by)
 
         for expr in expressions:
-            sql, params = self.compile(expr)
+            try:
+                sql, params = self.compile(expr)
+            except EmptyResultSet:
+                continue
             sql, params = expr.select_format(self, sql, params)
             params_hash = make_hashable(params)
             if (sql, params_hash) not in seen:
