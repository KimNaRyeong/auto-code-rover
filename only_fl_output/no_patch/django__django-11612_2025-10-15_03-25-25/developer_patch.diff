diff --git a/django/db/backends/postgresql/schema.py b/django/db/backends/postgresql/schema.py
--- a/django/db/backends/postgresql/schema.py
+++ b/django/db/backends/postgresql/schema.py
@@ -2,6 +2,7 @@
 
 from django.db.backends.base.schema import BaseDatabaseSchemaEditor
 from django.db.backends.ddl_references import IndexColumns
+from django.db.backends.utils import strip_quotes
 
 
 class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
@@ -67,9 +68,9 @@ def _alter_column_type_sql(self, model, old_field, new_field, new_type):
         if self._field_data_type(old_field) != self._field_data_type(new_field):
             self.sql_alter_column_type += ' USING %(column)s::%(type)s'
         # Make ALTER TYPE with SERIAL make sense.
-        table = model._meta.db_table
+        table = strip_quotes(model._meta.db_table)
         if new_type.lower() in ("serial", "bigserial"):
-            column = new_field.column
+            column = strip_quotes(new_field.column)
             sequence_name = "%s_%s_seq" % (table, column)
             col_type = "integer" if new_type.lower() == "serial" else "bigint"
             return (
diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py
--- a/django/db/backends/sqlite3/schema.py
+++ b/django/db/backends/sqlite3/schema.py
@@ -4,6 +4,7 @@
 from django.apps.registry import Apps
 from django.db.backends.base.schema import BaseDatabaseSchemaEditor
 from django.db.backends.ddl_references import Statement
+from django.db.backends.utils import strip_quotes
 from django.db.models import UniqueConstraint
 from django.db.transaction import atomic
 from django.db.utils import NotSupportedError
@@ -263,7 +264,7 @@ def is_self_referential(f):
         body_copy = copy.deepcopy(body)
         meta_contents = {
             'app_label': model._meta.app_label,
-            'db_table': 'new__%s' % model._meta.db_table,
+            'db_table': 'new__%s' % strip_quotes(model._meta.db_table),
             'unique_together': unique_together,
             'index_together': index_together,
             'indexes': indexes,
