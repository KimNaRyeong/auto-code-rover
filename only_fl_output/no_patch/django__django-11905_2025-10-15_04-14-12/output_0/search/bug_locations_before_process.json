[
    {
        "file": "django/db/models/query.py",
        "class": "",
        "method": "",
        "intended_behavior": "Within the query construction or filter application sections that handle the `__isnull` lookup, implement a validation step to ensure that the value provided for `__isnull` is strictly a boolean. If a non-boolean value is provided, the code should raise a ValueError with a clear message indicating that only boolean values are acceptable for `__isnull` lookups. This behavior will prevent misuse and maintain consistency across different usage scenarios."
    },
    {
        "file": "django/db/models/sql/query.py",
        "class": "",
        "method": "",
        "intended_behavior": "In the part of the code that translates Django query expressions (including `__isnull`) into SQL statements, ensure that a validation for `__isnull` values is performed early in the process. If a value other than a boolean is detected, raise an error before the SQL statement is constructed. This will preserve the integrity of the SQL queries generated and prevent potential database errors or unexpected behavior."
    }
]