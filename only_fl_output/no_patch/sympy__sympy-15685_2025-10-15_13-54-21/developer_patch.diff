diff --git a/sympy/physics/units/definitions.py b/sympy/physics/units/definitions.py
--- a/sympy/physics/units/definitions.py
+++ b/sympy/physics/units/definitions.py
@@ -50,22 +50,13 @@
 meter.set_dimension(length)
 meter.set_scale_factor(One)
 
-# gram; used to define its prefixed units
-g = gram = grams = Quantity("gram", abbrev="g")
-gram.set_dimension(mass)
-gram.set_scale_factor(One)
-
-# NOTE: the `kilogram` has scale factor 1000. In SI, kg is a base unit, but
-# nonetheless we are trying to be compatible with the `kilo` prefix. In a
-# similar manner, people using CGS or gaussian units could argue that the
-# `centimeter` rather than `meter` is the fundamental unit for length, but the
-# scale factor of `centimeter` will be kept as 1/100 to be compatible with the
-# `centi` prefix.  The current state of the code assumes SI unit dimensions, in
+# NOTE: the `kilogram` has scale factor of 1 in SI.
+# The current state of the code assumes SI unit dimensions, in
 # the future this module will be modified in order to be unit system-neutral
 # (that is, support all kinds of unit systems).
 kg = kilogram = kilograms = Quantity("kilogram", abbrev="kg")
 kilogram.set_dimension(mass)
-kilogram.set_scale_factor(kilo*gram)
+kilogram.set_scale_factor(One)
 
 s = second = seconds = Quantity("second", abbrev="s")
 second.set_dimension(time)
@@ -87,6 +78,9 @@
 candela.set_dimension(luminous_intensity)
 candela.set_scale_factor(One)
 
+g = gram = grams = Quantity("gram", abbrev="g")
+gram.set_dimension(mass)
+gram.set_scale_factor(kilogram/kilo)
 
 mg = milligram = milligrams = Quantity("milligram", abbrev="mg")
 milligram.set_dimension(mass)
