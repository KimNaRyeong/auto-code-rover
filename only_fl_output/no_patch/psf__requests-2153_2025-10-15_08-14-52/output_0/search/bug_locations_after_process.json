[
    {
        "rel_file_path": "requests/api.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/psf__requests/setup_psf__requests__2.3/requests/api.py",
        "start": 80,
        "end": 88,
        "class_name": null,
        "method_name": "post",
        "code": "80 def post(url, data=None, **kwargs):\n81     \"\"\"Sends a POST request. Returns :class:`Response` object.\n82 \n83     :param url: URL for the new :class:`Request` object.\n84     :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.\n85     :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n86     \"\"\"\n87 \n88     return request('post', url, data=data, **kwargs)\n",
        "intended_behavior": "The `post` method should be updated to include proper handling of `socket.timeout` exceptions by catching `socket.timeout` specifically and re-raising it as `requests.exceptions.Timeout` to maintain consistency within the application's error handling practices."
    },
    {
        "rel_file_path": "requests/sessions.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/psf__requests/setup_psf__requests__2.3/requests/sessions.py",
        "start": 495,
        "end": 503,
        "class_name": null,
        "method_name": "post",
        "code": "495     def post(self, url, data=None, **kwargs):\n496         \"\"\"Sends a POST request. Returns :class:`Response` object.\n497 \n498         :param url: URL for the new :class:`Request` object.\n499         :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.\n500         :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n501         \"\"\"\n502 \n503         return self.request('POST', url, data=data, **kwargs)\n",
        "intended_behavior": "The `post` method should be updated to include proper handling of `socket.timeout` exceptions by catching `socket.timeout` specifically and re-raising it as `requests.exceptions.Timeout` to maintain consistency within the application's error handling practices."
    },
    {
        "rel_file_path": "requests/sessions.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/psf__requests/setup_psf__requests__2.3/requests/sessions.py",
        "start": 495,
        "end": 503,
        "class_name": "Session",
        "method_name": "post",
        "code": "495     def post(self, url, data=None, **kwargs):\n496         \"\"\"Sends a POST request. Returns :class:`Response` object.\n497 \n498         :param url: URL for the new :class:`Request` object.\n499         :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.\n500         :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n501         \"\"\"\n502 \n503         return self.request('POST', url, data=data, **kwargs)\n",
        "intended_behavior": "The `post` method should be updated to include proper handling of `socket.timeout` exceptions by catching `socket.timeout` specifically and re-raising it as `requests.exceptions.Timeout` to maintain consistency within the application's error handling practices."
    }
]