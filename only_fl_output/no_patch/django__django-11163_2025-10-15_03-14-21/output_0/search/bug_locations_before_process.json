[
    {
        "file": "django/forms/models.py",
        "class": "",
        "method": "model_to_dict",
        "intended_behavior": "The condition checking whether a field is contained in the `fields` argument should accurately distinguish between `None` and an empty list (`[]`). When `fields` is `None`, the behavior should remain as currently implemented, including all fields by default unless they are in the `exclude` list. However, when `fields` is an empty list, it signifies that no fields were requested, and thus the function should return an empty dictionary. This can be achieved by adjusting the conditional from `if fields and f.name not in fields:` to `if fields is not None and f.name not in fields:`, ensuring that an empty list for `fields` results in an empty dictionary."
    }
]