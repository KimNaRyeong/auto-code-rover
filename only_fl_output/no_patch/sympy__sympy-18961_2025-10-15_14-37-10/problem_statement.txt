give `digits` a `bits` argument
Like `ibin`, I think a `bits` argument could be added to `digits` so the length would be padded with 0s if necessary to reach the given bit length:
```diff
diff --git a/sympy/ntheory/digits.py b/sympy/ntheory/digits.py
index 43d4333..20eb630 100644
--- a/sympy/ntheory/digits.py
+++ b/sympy/ntheory/digits.py
@@ -6,7 +6,7 @@
 from sympy.utilities.iterables import multiset, is_palindromic as _palindromic


-def digits(n, b=10):
+def digits(n, b=10, bits=None):
     """
     Return a list of the digits of ``n`` in base ``b``. The first
     element in the list is ``b`` (or ``-b`` if ``n`` is negative).
@@ -37,6 +37,8 @@ def digits(n, b=10):
         y.append(x)
         y.append(-b if n < 0 else b)
         y.reverse()
+        if bits is not None and len(y) - 1 < bits:
+            y = [b] + [0]*(bits - len(y) + 1) + y[1:]
         return y
```
Tests, too, should be added.
