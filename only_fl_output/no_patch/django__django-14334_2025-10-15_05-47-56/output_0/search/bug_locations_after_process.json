[
    {
        "rel_file_path": "django/utils/translation/trans_real.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/django__django/setup_django__django__4.0/django/utils/translation/trans_real.py",
        "start": 464,
        "end": 495,
        "class_name": null,
        "method_name": "get_supported_language_variant",
        "code": "464 def get_supported_language_variant(lang_code, strict=False):\n465     \"\"\"\n466     Return the language code that's listed in supported languages, possibly\n467     selecting a more generic variant. Raise LookupError if nothing is found.\n468 \n469     If `strict` is False (the default), look for a country-specific variant\n470     when neither the language code nor its generic variant is found.\n471 \n472     lru_cache should have a maxsize to prevent from memory exhaustion attacks,\n473     as the provided language codes are taken from the HTTP request. See also\n474     <https://www.djangoproject.com/weblog/2007/oct/26/security-fix/>.\n475     \"\"\"\n476     if lang_code:\n477         # If 'fr-ca' is not supported, try special fallback or language-only 'fr'.\n478         possible_lang_codes = [lang_code]\n479         try:\n480             possible_lang_codes.extend(LANG_INFO[lang_code]['fallback'])\n481         except KeyError:\n482             pass\n483         generic_lang_code = lang_code.split('-')[0]\n484         possible_lang_codes.append(generic_lang_code)\n485         supported_lang_codes = get_languages()\n486 \n487         for code in possible_lang_codes:\n488             if code in supported_lang_codes and check_for_language(code):\n489                 return code\n490         if not strict:\n491             # if fr-fr is not supported, try fr-ca.\n492             for supported_code in supported_lang_codes:\n493                 if supported_code.startswith(generic_lang_code + '-'):\n494                     return supported_code\n495     raise LookupError(lang_code)\n",
        "intended_behavior": "This function should prioritize the user's preferred language more accurately when multiple language codes are available and applicable. When evaluating possible language codes (possible_lang_codes), especially with variations like zh-hans and zh-hant, the code should ensure that a more specific match, such as zh-Hant-HK, is given precedence over a less specific or generic match when both are present in settings.LANGUAGES. This means enhancing the logic around lines 488 to 494 to better handle specificity and perhaps considering the order in which languages are listed in settings.LANGUAGES, ensuring it adheres to expected behavior when detailed and generic versions of a language code are both applicable. The function must continue to work as intended for languages without such complexities, ensuring backward compatibility and not affecting existing functionality beyond addressing the reported issue."
    }
]