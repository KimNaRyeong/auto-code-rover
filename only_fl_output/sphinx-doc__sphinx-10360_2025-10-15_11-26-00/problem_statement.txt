enum value with attribute misparsed
### Describe the bug

In C/C++, `enum` values can have an attribute like `__attribute__((__deprecated__))`, but these do not get properly parsed.

### How to Reproduce

Here is an example where this occurred. This enum has a deprecated value `JXL_TYPE_BOOLEAN`. The macro `JXL_DEPRECATED` is defined elsewhere, but it is included in `c_id_attributes` and `cpp_id_attributes`, so that shouldn't be the problem.

```
/** Data type for the sample values per channel per pixel.
 */
typedef enum {
  /** Use 32-bit single-precision floating point values, with range 0.0-1.0
   * (within gamut, may go outside this range for wide color gamut). Floating
   * point output, either JXL_TYPE_FLOAT or JXL_TYPE_FLOAT16, is recommended
   * for HDR and wide gamut images when color profile conversion is required. */
  JXL_TYPE_FLOAT = 0,

  /** DEPRECATED: Bitpacked 1-bit. As an alternative, use JXL_TYPE_UINT8.
   */
  JXL_TYPE_BOOLEAN JXL_DEPRECATED,
[...]
```

When building documentation from this, it is parsing it as if the enum value is `JXL_DEPRECATED`, not `JXL_TYPE_BOOLEAN` as it should be. When there are two or more enum values deprecated like this, it results in `Duplicate C++ declaration`.

### Expected behavior

Just like attributes for function definitions, attributes for enum values should be ignored when parsing.

### Your project

https://libjxl.readthedocs.io/en/latest/

### Screenshots

_No response_

### OS

Linux

### Python version

3.9.10

### Sphinx version

4.5.0

### Sphinx extensions

_No response_

### Extra tools

_No response_

### Additional context

_No response_
