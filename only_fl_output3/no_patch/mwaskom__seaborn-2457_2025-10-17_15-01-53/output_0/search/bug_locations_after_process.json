[
    {
        "rel_file_path": "seaborn/relational.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/mwaskom__seaborn/setup_mwaskom__seaborn__0.12/seaborn/relational.py",
        "start": 602,
        "end": 649,
        "class_name": null,
        "method_name": "lineplot",
        "code": "602 def lineplot(\n603     *,\n604     x=None, y=None,\n605     hue=None, size=None, style=None,\n606     data=None,\n607     palette=None, hue_order=None, hue_norm=None,\n608     sizes=None, size_order=None, size_norm=None,\n609     dashes=True, markers=None, style_order=None,\n610     units=None, estimator=\"mean\", ci=None, n_boot=1000, seed=None,\n611     sort=True, err_style=\"band\", err_kws=None,\n612     legend=\"auto\",\n613     errorbar=(\"ci\", 95),\n614     ax=None, **kwargs\n615 ):\n616 \n617     # Handle deprecation of ci parameter\n618     errorbar = _deprecate_ci(errorbar, ci)\n619 \n620     variables = _LinePlotter.get_semantics(locals())\n621     p = _LinePlotter(\n622         data=data, variables=variables,\n623         estimator=estimator, ci=ci, n_boot=n_boot, seed=seed,\n624         sort=sort, err_style=err_style, err_kws=err_kws, legend=legend,\n625         errorbar=errorbar,\n626     )\n627 \n628     p.map_hue(palette=palette, order=hue_order, norm=hue_norm)\n629     p.map_size(sizes=sizes, order=size_order, norm=size_norm)\n630     p.map_style(markers=markers, dashes=dashes, order=style_order)\n631 \n632     if ax is None:\n633         ax = plt.gca()\n634 \n635     if style is None and not {\"ls\", \"linestyle\"} & set(kwargs):  # XXX\n636         kwargs[\"dashes\"] = \"\" if dashes is None or isinstance(dashes, bool) else dashes\n637 \n638     if not p.has_xy_data:\n639         return ax\n640 \n641     p._attach(ax)\n642 \n643     # Other functions have color as an explicit param,\n644     # and we should probably do that here too\n645     color = kwargs.pop(\"color\", kwargs.pop(\"c\", None))\n646     kwargs[\"color\"] = _default_color(ax.plot, hue, color, kwargs)\n647 \n648     p.plot(ax, kwargs)\n649     return ax\n",
        "intended_behavior": "Inside the `lineplot` method, when `ci=None` is passed as an argument, it should issue a user warning indicating that the use of `ci` is deprecated and that `errorbar=None` should be used instead to explicitly remove error bars. This behavior preserves the functionality of disabling error bars while transitioning users to the new parameter. Implement or ensure that the `_deprecate_ci` function (referred in line 618) not only handles the parameter transformation but also emits a clear deprecation warning when `ci=None`. This warning should guide the user on how to use `errorbar=None` directly for future calls. Ensure that after the deprecation warning, the internal logic transforms or interprets `ci=None` to mean `errorbar=None` effectively removing error bars from the plot. This transformation needs to be handled in a way that does not disrupt existing functionality for users who haven't switched to the new parameter system."
    }
]