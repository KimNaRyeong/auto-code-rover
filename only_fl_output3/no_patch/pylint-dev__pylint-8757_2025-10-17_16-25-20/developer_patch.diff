diff --git a/pylint/checkers/similar.py b/pylint/checkers/similar.py
--- a/pylint/checkers/similar.py
+++ b/pylint/checkers/similar.py
@@ -889,8 +889,11 @@ def reduce_map_data(self, linter: PyLinter, data: list[list[LineSet]]) -> None:
         """Reduces and recombines data into a format that we can report on.
 
         The partner function of get_map_data()
+
+        Calls self.close() to actually calculate and report duplicate code.
         """
         Similar.combine_mapreduce_data(self, linesets_collection=data)
+        self.close()
 
 
 def register(linter: PyLinter) -> None:
diff --git a/pylint/lint/parallel.py b/pylint/lint/parallel.py
--- a/pylint/lint/parallel.py
+++ b/pylint/lint/parallel.py
@@ -130,7 +130,7 @@ def check_parallel(
     """Use the given linter to lint the files with given amount of workers (jobs).
 
     This splits the work filestream-by-filestream. If you need to do work across
-    multiple files, as in the similarity-checker, then implement the map/reduce mixin functionality.
+    multiple files, as in the similarity-checker, then implement the map/reduce functionality.
     """
     # The linter is inherited by all the pool's workers, i.e. the linter
     # is identical to the linter object here. This is required so that
