[
    {
        "rel_file_path": "sphinx/builders/_epub_base.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.0/sphinx/builders/_epub_base.py",
        "start": 256,
        "end": 286,
        "class_name": null,
        "method_name": "fix_ids",
        "code": "256     def fix_ids(self, tree: nodes.document) -> None:\n257         \"\"\"Replace colons with hyphens in href and id attributes.\n258 \n259         Some readers crash because they interpret the part as a\n260         transport protocol specification.\n261         \"\"\"\n262         for reference in tree.traverse(nodes.reference):\n263             if 'refuri' in reference:\n264                 m = self.refuri_re.match(reference['refuri'])\n265                 if m:\n266                     reference['refuri'] = self.fix_fragment(m.group(1), m.group(2))\n267             if 'refid' in reference:\n268                 reference['refid'] = self.fix_fragment('', reference['refid'])\n269 \n270         for target in tree.traverse(nodes.target):\n271             for i, node_id in enumerate(target['ids']):\n272                 if ':' in node_id:\n273                     target['ids'][i] = self.fix_fragment('', node_id)\n274 \n275             next_node = target.next_node(ascend=True)  # type: Node\n276             if isinstance(next_node, nodes.Element):\n277                 for i, node_id in enumerate(next_node['ids']):\n278                     if ':' in node_id:\n279                         next_node['ids'][i] = self.fix_fragment('', node_id)\n280 \n281         for desc_signature in tree.traverse(addnodes.desc_signature):\n282             ids = desc_signature.attributes['ids']\n283             newids = []\n284             for id in ids:\n285                 newids.append(self.fix_fragment('', id))\n286             desc_signature.attributes['ids'] = newids\n",
        "intended_behavior": "This code provides a pattern that may be mirrored or similarly implemented elsewhere in Sphinx, particularly for web documentation."
    },
    {
        "rel_file_path": "sphinx/builders/_epub_base.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.0/sphinx/builders/_epub_base.py",
        "start": 256,
        "end": 286,
        "class_name": "EpubBuilder",
        "method_name": "fix_ids",
        "code": "256     def fix_ids(self, tree: nodes.document) -> None:\n257         \"\"\"Replace colons with hyphens in href and id attributes.\n258 \n259         Some readers crash because they interpret the part as a\n260         transport protocol specification.\n261         \"\"\"\n262         for reference in tree.traverse(nodes.reference):\n263             if 'refuri' in reference:\n264                 m = self.refuri_re.match(reference['refuri'])\n265                 if m:\n266                     reference['refuri'] = self.fix_fragment(m.group(1), m.group(2))\n267             if 'refid' in reference:\n268                 reference['refid'] = self.fix_fragment('', reference['refid'])\n269 \n270         for target in tree.traverse(nodes.target):\n271             for i, node_id in enumerate(target['ids']):\n272                 if ':' in node_id:\n273                     target['ids'][i] = self.fix_fragment('', node_id)\n274 \n275             next_node = target.next_node(ascend=True)  # type: Node\n276             if isinstance(next_node, nodes.Element):\n277                 for i, node_id in enumerate(next_node['ids']):\n278                     if ':' in node_id:\n279                         next_node['ids'][i] = self.fix_fragment('', node_id)\n280 \n281         for desc_signature in tree.traverse(addnodes.desc_signature):\n282             ids = desc_signature.attributes['ids']\n283             newids = []\n284             for id in ids:\n285                 newids.append(self.fix_fragment('', id))\n286             desc_signature.attributes['ids'] = newids\n",
        "intended_behavior": "This code provides a pattern that may be mirrored or similarly implemented elsewhere in Sphinx, particularly for web documentation."
    }
]