[
    {
        "rel_file_path": "sphinx/ext/mathjax.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__4.0/sphinx/ext/mathjax.py",
        "start": 1,
        "end": 107,
        "class_name": null,
        "method_name": null,
        "code": "1 \"\"\"\n2     sphinx.ext.mathjax\n3     ~~~~~~~~~~~~~~~~~~\n4 \n5     Allow `MathJax <https://www.mathjax.org/>`_ to be used to display math in\n6     Sphinx's HTML writer -- requires the MathJax JavaScript library on your\n7     webserver/computer.\n8 \n9     :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n10     :license: BSD, see LICENSE for details.\n11 \"\"\"\n12 \n13 import json\n14 from typing import Any, Dict\n15 from typing import cast\n16 \n17 from docutils import nodes\n18 \n19 import sphinx\n20 from sphinx.application import Sphinx\n21 from sphinx.builders.html import StandaloneHTMLBuilder\n22 from sphinx.domains.math import MathDomain\n23 from sphinx.environment import BuildEnvironment\n24 from sphinx.errors import ExtensionError\n25 from sphinx.locale import _\n26 from sphinx.util.math import get_node_equation_number\n27 from sphinx.writers.html import HTMLTranslator\n28 \n29 \n30 def html_visit_math(self: HTMLTranslator, node: nodes.math) -> None:\n31     self.body.append(self.starttag(node, 'span', '', CLASS='math notranslate nohighlight'))\n32     self.body.append(self.builder.config.mathjax_inline[0] +\n33                      self.encode(node.astext()) +\n34                      self.builder.config.mathjax_inline[1] + '</span>')\n35     raise nodes.SkipNode\n36 \n37 \n38 def html_visit_displaymath(self: HTMLTranslator, node: nodes.math_block) -> None:\n39     self.body.append(self.starttag(node, 'div', CLASS='math notranslate nohighlight'))\n40     if node['nowrap']:\n41         self.body.append(self.encode(node.astext()))\n42         self.body.append('</div>')\n43         raise nodes.SkipNode\n44 \n45     # necessary to e.g. set the id property correctly\n46     if node['number']:\n47         number = get_node_equation_number(self, node)\n48         self.body.append('<span class=\"eqno\">(%s)' % number)\n49         self.add_permalink_ref(node, _('Permalink to this equation'))\n50         self.body.append('</span>')\n51     self.body.append(self.builder.config.mathjax_display[0])\n52     parts = [prt for prt in node.astext().split('\\n\\n') if prt.strip()]\n53     if len(parts) > 1:  # Add alignment if there are more than 1 equation\n54         self.body.append(r' \\begin{align}\\begin{aligned}')\n55     for i, part in enumerate(parts):\n56         part = self.encode(part)\n57         if r'\\\\' in part:\n58             self.body.append(r'\\begin{split}' + part + r'\\end{split}')\n59         else:\n60             self.body.append(part)\n61         if i < len(parts) - 1:  # append new line if not the last equation\n62             self.body.append(r'\\\\')\n63     if len(parts) > 1:  # Add alignment if there are more than 1 equation\n64         self.body.append(r'\\end{aligned}\\end{align} ')\n65     self.body.append(self.builder.config.mathjax_display[1])\n66     self.body.append('</div>\\n')\n67     raise nodes.SkipNode\n68 \n69 \n70 def install_mathjax(app: Sphinx, env: BuildEnvironment) -> None:\n71     if app.builder.format != 'html' or app.builder.math_renderer_name != 'mathjax':  # type: ignore  # NOQA\n72         return\n73     if not app.config.mathjax_path:\n74         raise ExtensionError('mathjax_path config value must be set for the '\n75                              'mathjax extension to work')\n76 \n77     builder = cast(StandaloneHTMLBuilder, app.builder)\n78     domain = cast(MathDomain, env.get_domain('math'))\n79     if domain.has_equations():\n80         # Enable mathjax only if equations exists\n81         options = {'async': 'async'}\n82         if app.config.mathjax_options:\n83             options.update(app.config.mathjax_options)\n84         builder.add_js_file(app.config.mathjax_path, **options)\n85 \n86         if app.config.mathjax_config:\n87             body = \"MathJax.Hub.Config(%s)\" % json.dumps(app.config.mathjax_config)\n88             builder.add_js_file(None, type=\"text/x-mathjax-config\", body=body)\n89 \n90 \n91 def setup(app: Sphinx) -> Dict[str, Any]:\n92     app.add_html_math_renderer('mathjax',\n93                                (html_visit_math, None),\n94                                (html_visit_displaymath, None))\n95 \n96     # more information for mathjax secure url is here:\n97     # https://docs.mathjax.org/en/latest/start.html#secure-access-to-the-cdn\n98     app.add_config_value('mathjax_path',\n99                          'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latest.js?'\n100                          'config=TeX-AMS-MML_HTMLorMML', 'html')\n101     app.add_config_value('mathjax_options', {}, 'html')\n102     app.add_config_value('mathjax_inline', [r'\\(', r'\\)'], 'html')\n103     app.add_config_value('mathjax_display', [r'\\[', r'\\]'], 'html')\n104     app.add_config_value('mathjax_config', None, 'html')\n105     app.connect('env-updated', install_mathjax)\n106 \n107     return {'version': sphinx.__display_version__, 'parallel_read_safe': True}\n",
        "intended_behavior": "Update any initialization and configuration scripts to be compatible with MathJax 3.0, as per the new setup and modular structure. This includes changing how MathJax scripts are included in the generated pages, ensuring any configuration passed to MathJax is done so according to the new format, and adjusting the Sphinx extension to reflect any new features or deprecated ones from MathJax 3.0."
    },
    {
        "rel_file_path": "sphinx/application.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__4.0/sphinx/application.py",
        "start": 872,
        "end": 901,
        "class_name": null,
        "method_name": "add_js_file",
        "code": "872     def add_js_file(self, filename: str, **kwargs: str) -> None:\n873         \"\"\"Register a JavaScript file to include in the HTML output.\n874 \n875         Add *filename* to the list of JavaScript files that the default HTML\n876         template will include.  The filename must be relative to the HTML\n877         static path , or a full URI with scheme.  If the keyword argument\n878         ``body`` is given, its value will be added between the\n879         ``<script>`` tags. Extra keyword arguments are included as\n880         attributes of the ``<script>`` tag.\n881 \n882         Example::\n883 \n884             app.add_js_file('example.js')\n885             # => <script src=\"_static/example.js\"></script>\n886 \n887             app.add_js_file('example.js', async=\"async\")\n888             # => <script src=\"_static/example.js\" async=\"async\"></script>\n889 \n890             app.add_js_file(None, body=\"var myVariable = 'foo';\")\n891             # => <script>var myVariable = 'foo';</script>\n892 \n893         .. versionadded:: 0.5\n894 \n895         .. versionchanged:: 1.8\n896            Renamed from ``app.add_javascript()``.\n897            And it allows keyword arguments as attributes of script tag.\n898         \"\"\"\n899         self.registry.add_js_file(filename, **kwargs)\n900         if hasattr(self.builder, 'add_js_file'):\n901             self.builder.add_js_file(filename, **kwargs)  # type: ignore\n",
        "intended_behavior": "Ensure that MathJax 3.0's JavaScript files are correctly referenced and loaded in the documentation output, respecting the new file structure and initialization requirements. This may involve dynamically loading JavaScript modules based on documentation needs or configuring the MathJax script loader for the new modular loading system."
    },
    {
        "rel_file_path": "sphinx/registry.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__4.0/sphinx/registry.py",
        "start": 365,
        "end": 367,
        "class_name": null,
        "method_name": "add_js_file",
        "code": "365     def add_js_file(self, filename: str, **attributes: str) -> None:\n366         logger.debug('[app] adding js_file: %r, %r', filename, attributes)\n367         self.js_files.append((filename, attributes))\n",
        "intended_behavior": "Ensure that MathJax 3.0's JavaScript files are correctly referenced and loaded in the documentation output, respecting the new file structure and initialization requirements. This may involve dynamically loading JavaScript modules based on documentation needs or configuring the MathJax script loader for the new modular loading system."
    },
    {
        "rel_file_path": "sphinx/builders/html/__init__.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__4.0/sphinx/builders/html/__init__.py",
        "start": 310,
        "end": 314,
        "class_name": null,
        "method_name": "add_js_file",
        "code": "310     def add_js_file(self, filename: str, **kwargs: str) -> None:\n311         if filename and '://' not in filename:\n312             filename = posixpath.join('_static', filename)\n313 \n314         self.script_files.append(JavaScript(filename, **kwargs))\n",
        "intended_behavior": "Ensure that MathJax 3.0's JavaScript files are correctly referenced and loaded in the documentation output, respecting the new file structure and initialization requirements. This may involve dynamically loading JavaScript modules based on documentation needs or configuring the MathJax script loader for the new modular loading system."
    }
]