[
    {
        "rel_file_path": "lib/mpl_toolkits/axes_grid1/axes_grid.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/matplotlib__matplotlib/setup_matplotlib__matplotlib__3.7/lib/mpl_toolkits/axes_grid1/axes_grid.py",
        "start": 13,
        "end": 17,
        "class_name": null,
        "method_name": "_tick_only",
        "code": "13 def _tick_only(ax, bottom_on, left_on):\n14     bottom_off = not bottom_on\n15     left_off = not left_on\n16     ax.axis[\"bottom\"].toggle(ticklabels=bottom_off, label=bottom_off)\n17     ax.axis[\"left\"].toggle(ticklabels=left_off, label=left_off)\n",
        "intended_behavior": "The `_tick_only` method should be updated to gracefully handle axes types where the `axis` attribute is not subscriptable, such as `GeoAxes`. An additional check should be introduced to either verify `ax.axis` is subscriptable before attempting to access it like a dictionary or to catch the `TypeError` and handle `GeoAxes` specifically. The goal is to preserve compatibility with `Axes` types that provide an `axis` attribute behaving as expected, while also accommodating `GeoAxes` or other axes where `axis` might be implemented differently."
    }
]