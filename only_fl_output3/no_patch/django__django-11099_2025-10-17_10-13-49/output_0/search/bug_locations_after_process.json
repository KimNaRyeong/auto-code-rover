[
    {
        "rel_file_path": "django/contrib/auth/validators.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/django__django/setup_django__django__3.0/django/contrib/auth/validators.py",
        "start": 9,
        "end": 15,
        "class_name": "ASCIIUsernameValidator",
        "method_name": null,
        "code": "9 class ASCIIUsernameValidator(validators.RegexValidator):\n10     regex = r'^[\\w.@+-]+$'\n11     message = _(\n12         'Enter a valid username. This value may contain only English letters, '\n13         'numbers, and @/./+/-/_ characters.'\n14     )\n15     flags = re.ASCII\n",
        "intended_behavior": "The intended behavior is to modify the `regex` attribute of the `ASCIIUsernameValidator` class to `r'\\A[\\w.@+-]+\\Z'`. This change ensures that the validator only accepts usernames that start and end with alphanumeric characters or special characters (., @, +, -, _), disallowing trailing newlines which were previously accepted due to the `$` behavior in regex. This preserves the intended validation functionality while correcting the oversight related to trailing newlines."
    },
    {
        "rel_file_path": "django/contrib/auth/validators.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/django__django/setup_django__django__3.0/django/contrib/auth/validators.py",
        "start": 19,
        "end": 25,
        "class_name": "UnicodeUsernameValidator",
        "method_name": null,
        "code": "19 class UnicodeUsernameValidator(validators.RegexValidator):\n20     regex = r'^[\\w.@+-]+$'\n21     message = _(\n22         'Enter a valid username. This value may contain only letters, '\n23         'numbers, and @/./+/-/_ characters.'\n24     )\n25     flags = 0\n",
        "intended_behavior": "The intended behavior is similar to that of the `ASCIIUsernameValidator`. Here, the `regex` attribute should be updated to `r'\\A[\\w.@+-]+\\Z'`. This adjustment makes sure that the validator accurately accepts a wide range of alphanumeric characters and specific symbols from various scripts without permitting trailing newlines. This change ensures the software behaves as expected in multi-linguistic contexts, maintaining its existing validation capabilities while adhering to the requirement that usernames must not end with a newline character."
    }
]