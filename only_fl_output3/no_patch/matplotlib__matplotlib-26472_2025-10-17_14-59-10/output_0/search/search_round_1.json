[
    {
        "role": "system",
        "content": "You are a software developer maintaining a large project.\nYou are working on an issue submitted to your project.\nThe issue contains a description marked between <issue> and </issue>.\nYour task is to invoke a few search API calls to gather sufficient code context for resolving the issue.\nThe collected context will later be sent to your colleage for writing a patch.\nDo not worry about test files or writing test; you are only interested in crafting a patch.\n"
    },
    {
        "role": "user",
        "content": "<issue>Switching to inline backend closes GUI windows\n### Bug report\n**Bug summary**\nWhen a plot is made with the `qt5` backend on and then the backend is changed to `inline`, the active plot window(s) are closed. This makes it very difficult to switch cleanly between backends within a notebook. The two mediocre workarounds I can see are:\n- always specify the backend before plotting (since you can't automatically \"switch back\")\n- use `plt.show(block=True)` and switch back to `inline` after the user is done with the GUI figure. This has the downside of locking the Notebook execution while the figure is live.\n**Code for reproduction**\nThe linked gist shows what I'd like to accomplish which is a context manager that enables matplotlib plotting in a GUI window from within a Notebook that is otherwise using the `inline` backend. Basically I want the notebook to use inline (for a variety of reasons), but I occasionally wish I could interact with the data in a separate figure.\nhttps://gist.github.com/flutefreak7/65d824358122360911e2d4c43085007a\nAs a side note, easy switching between `inline` and `notebook`/`widget` backends would also scratch part of this itch, but the interactive notebook backends still don't enable full screen usage or easily throwing a plot on another monitor. `ipyvolume` has full screen figured out, so that seems doable.\nHere's the context manager I wish worked:\n```python\n# Paste your code here\n@contextmanager\ndef window(block=False):\n%matplotlib qt5\nplt.ioff()\nyield\nplt.show()\n# The switch back to inline closes the qt5 plot\nplt.ion()\n%matplotlib inline\nwith window():\nplt.plot([1, 3, 2])\n```\n**Actual outcome**\nThe outcome of the above code is that a plot window flashes into existence for a split second, then is closed when the `%matplotlib inline` call is processed.\n**Expected outcome**\nIt would be great if plots created with the qt5 backend could stay visible while other plots with the inline backend were also being created.  If use `%gui qt` (to establish a reliable event loop) and create a bunch of Qt windows by other means, they live concurrently with the Notebook as long as the kernel is alive. I'd like matplotlib GUI figures to be able to live on regardless of the current backend.\n**Matplotlib version**\n* Operating system:\n* Matplotlib version: 3.1.1\n* Matplotlib backend (`print(matplotlib.get_backend())`): `inline` and `qt5agg`\n* Python version: 3.7.3\n* Jupyter version (if applicable):\n```\njupyter                           1.0.0\njupyter-client                    5.3.4\njupyter-console                   6.0.0\njupyter-contrib-core              0.3.3\njupyter-contrib-nbextensions      0.5.1\njupyter-core                      4.6.0\njupyter-highlight-selected-word   0.2.0\njupyter-latex-envs                1.4.6\njupyter-nbextensions-configurator 0.4.1\njupyterlab                        1.0.5\n```\n</issue>"
    },
    {
        "role": "user",
        "content": "Based on the files, classes, methods, and code statements from the issue related to the bug, you can use the following search APIs to get more context of the project.\n- search_class(class_name: str): Search for a class in the codebase.\n- search_class_in_file(self, class_name, file_name: str): Search for a class in a given file.\n- search_method_in_file(method_name: str, file_path: str): Search for a method in a given file..\n- search_method_in_class(method_name: str, class_name: str): Search for a method in a given class.\n- search_method(method_name: str): Search for a method in the entire codebase.\n- search_code(code_str: str): Search for a code snippet in the entire codebase.\n- search_code_in_file(code_str: str, file_path: str): Search for a code snippet in a given file file.\n- get_code_around_line(file_path: str, line_number: int, window_size: int): Get the code around a given line number in a file. window_size is the number of lines before and after the line number.\n\nYou must give correct number of arguments when invoking API calls.\n\nNote that you can use multiple search APIs in one round.\n\nNow analyze the issue and select necessary APIs to get more context of the project. Each API call must have concrete arguments as inputs."
    },
    {
        "role": "assistant",
        "content": "To effectively address the issue described, I would need to understand how the backend switching mechanism works within Matplotlib, particularly in the context of a Jupyter Notebook environment. There are several key components and actions described in the issue:\n\n1. The use of the `%matplotlib` magic command to switch backends (`qt5` to `inline`).\n2. The context manager that attempts to manage this backend switching process for temporary GUI interaction.\n3. The behavior of `plt.show()` in relation to blocking and the current backend state.\n4. How the current backend is determined and switched at runtime within the Matplotlib codebase.\n\nWith these points in mind, the following API calls will help gather the necessary context:\n\n- Use `search_code` to find occurrences of the backend switching logic, as this isn't tied to a specific class or method name but might be part of larger backend management functionality: `search_code(\"%matplotlib\")`, `search_code(\"plt.show\")`, and `search_code(\"plt.ion()\")`.\n\n- Given the mention of Matplotlib's backends, it's useful to see if there's a centralized way Matplotlib manages or switches between these, potentially within a named class or a method responsible for handling the backend state. We can try to identify if there's a specific class or function dedicated to this by looking for keywords like \"backend\" or \"switch_backend\": `search_method(\"switch_backend\")`.\n\n- Since the issue details a failure in the expected behavior of a context manager, investigating how the context switching is handled in the Matplotlib codebase could also yield insights. This would involve looking for related methods within the Matplotlib source code: `search_method(\"matplotlib.use\")`, as calling `matplotlib.use()` is another way to switch backends in scripts.\n\nLet's proceed with these API calls to gather the necessary context for resolving the issue:\n- `search_code(\"%matplotlib\")`\n- `search_code(\"plt.show\")`\n- `search_code(\"plt.ion()\")`\n- `search_method(\"switch_backend\")`\n- `search_method(\"matplotlib.use\")`"
    },
    {
        "role": "user",
        "content": "Result of search_code(\"%matplotlib\"):\n\nFound 9 snippets containing `%matplotlib` in the codebase:\n\nThey appeared in the following files:\n- <file>lib/matplotlib/__init__.py</file> (1 matches)\n- <file>lib/matplotlib/pyplot.py</file> (3 matches)\n- <file>lib/matplotlib/text.py</file> (1 matches)\n- <file>galleries/tutorials/images.py</file> (3 matches)\n- <file>galleries/examples/text_labels_and_annotations/autowrap.py</file> (1 matches)\n\n\nResult of search_code(\"plt.show\"):\n\nFound 672 snippets containing `plt.show` in the codebase:\n\nThey appeared in the following files:\n- <file>lib/matplotlib/animation.py</file> (1 matches)\n- <file>lib/matplotlib/figure.py</file> (1 matches)\n- <file>lib/matplotlib/lines.py</file> (1 matches)\n- <file>lib/matplotlib/text.py</file> (1 matches)\n- <file>lib/matplotlib/axes/_axes.py</file> (1 matches)\n- <file>lib/matplotlib/sphinxext/plot_directive.py</file> (3 matches)\n- <file>galleries/tutorials/artists.py</file> (3 matches)\n- <file>galleries/tutorials/lifecycle.py</file> (1 matches)\n- <file>galleries/tutorials/pyplot.py</file> (9 matches)\n- <file>galleries/examples/user_interfaces/toolmanager_sgskip.py</file> (1 matches)\n- <file>galleries/examples/user_interfaces/pylab_with_gtk4_sgskip.py</file> (1 matches)\n- <file>galleries/examples/user_interfaces/pylab_with_gtk3_sgskip.py</file> (1 matches)\n- <file>galleries/examples/user_interfaces/mplcvd.py</file> (1 matches)\n- <file>galleries/examples/widgets/menu.py</file> (1 matches)\n- <file>galleries/examples/widgets/polygon_selector_demo.py</file> (1 matches)\n- <file>galleries/examples/widgets/cursor.py</file> (1 matches)\n- <file>galleries/examples/widgets/check_buttons.py</file> (1 matches)\n- <file>galleries/examples/widgets/buttons.py</file> (1 matches)\n- <file>galleries/examples/widgets/textbox.py</file> (1 matches)\n- <file>galleries/examples/widgets/mouse_cursor.py</file> (1 matches)\n- <file>galleries/examples/widgets/span_selector.py</file> (1 matches)\n- <file>galleries/examples/widgets/annotated_cursor.py</file> (2 matches)\n- <file>galleries/examples/widgets/range_slider.py</file> (1 matches)\n- <file>galleries/examples/widgets/radio_buttons.py</file> (1 matches)\n- <file>galleries/examples/widgets/slider_snap_demo.py</file> (1 matches)\n- <file>galleries/examples/widgets/slider_demo.py</file> (1 matches)\n- <file>galleries/examples/widgets/lasso_selector_demo_sgskip.py</file> (1 matches)\n- <file>galleries/examples/widgets/multicursor.py</file> (1 matches)\n- <file>galleries/examples/widgets/rectangle_selector.py</file> (1 matches)\n- <file>galleries/examples/event_handling/resample.py</file> (1 matches)\n- <file>galleries/examples/event_handling/viewlims.py</file> (1 matches)\n- <file>galleries/examples/event_handling/cursor_demo.py</file> (1 matches)\n- <file>galleries/examples/event_handling/figure_axes_enter_leave.py</file> (1 matches)\n- <file>galleries/examples/event_handling/data_browser.py</file> (1 matches)\n- <file>galleries/examples/event_handling/pong_sgskip.py</file> (1 matches)\n- <file>galleries/examples/event_handling/close_event.py</file> (1 matches)\n- <file>galleries/examples/event_handling/zoom_window.py</file> (1 matches)\n- <file>galleries/examples/event_handling/looking_glass.py</file> (1 matches)\n- <file>galleries/examples/event_handling/poly_editor.py</file> (1 matches)\n- <file>galleries/examples/event_handling/timers.py</file> (1 matches)\n- <file>galleries/examples/event_handling/pick_event_demo.py</file> (1 matches)\n- <file>galleries/examples/event_handling/image_slices_viewer.py</file> (1 matches)\n- <file>galleries/examples/event_handling/legend_picking.py</file> (1 matches)\n- <file>galleries/examples/event_handling/pick_event_demo2.py</file> (1 matches)\n- <file>galleries/examples/event_handling/keypress_demo.py</file> (1 matches)\n- <file>galleries/examples/event_handling/coords_demo.py</file> (1 matches)\n- <file>galleries/examples/event_handling/path_editor.py</file> (1 matches)\n- <file>galleries/examples/event_handling/trifinder_event_demo.py</file> (1 matches)\n- <file>galleries/examples/event_handling/ginput_manual_clabel_sgskip.py</file> (1 matches)\n- <file>galleries/examples/event_handling/lasso_demo.py</file> (1 matches)\n- <file>galleries/examples/showcase/anatomy.py</file> (1 matches)\n- <file>galleries/examples/showcase/mandelbrot.py</file> (1 matches)\n- <file>galleries/examples/showcase/firefox.py</file> (1 matches)\n- <file>galleries/examples/showcase/stock_prices.py</file> (1 matches)\n- <file>galleries/examples/showcase/integral.py</file> (1 matches)\n- <file>galleries/examples/showcase/xkcd.py</file> (1 matches)\n- <file>galleries/examples/misc/patheffect_demo.py</file> (1 matches)\n- <file>galleries/examples/misc/custom_projection.py</file> (1 matches)\n- <file>galleries/examples/misc/set_and_get.py</file> (1 matches)\n- <file>galleries/examples/misc/findobj_demo.py</file> (1 matches)\n- <file>galleries/examples/misc/fig_x.py</file> (1 matches)\n- <file>galleries/examples/misc/tickedstroke_demo.py</file> (4 matches)\n- <file>galleries/examples/misc/keyword_plotting.py</file> (1 matches)\n- <file>galleries/examples/misc/fill_spiral.py</file> (1 matches)\n- <file>galleries/examples/misc/packed_bubbles.py</file> (1 matches)\n- <file>galleries/examples/misc/bbox_intersect.py</file> (1 matches)\n- <file>galleries/examples/misc/zorder_demo.py</file> (1 matches)\n- <file>galleries/examples/misc/logos2.py</file> (1 matches)\n- <file>galleries/examples/misc/customize_rc.py</file> (1 matches)\n- <file>galleries/examples/misc/anchored_artists.py</file> (1 matches)\n- <file>galleries/examples/misc/histogram_path.py</file> (1 matches)\n- <file>galleries/examples/misc/transoffset.py</file> (1 matches)\n- <file>galleries/examples/misc/demo_agg_filter.py</file> (1 matches)\n- <file>galleries/examples/misc/demo_ribbon_box.py</file> (1 matches)\n- <file>galleries/examples/misc/multiprocess_sgskip.py</file> (1 matches)\n- <file>galleries/examples/misc/table_demo.py</file> (1 matches)\n- <file>galleries/examples/misc/contour_manual.py</file> (1 matches)\n- <file>galleries/examples/misc/coords_report.py</file> (1 matches)\n- <file>galleries/examples/scales/symlog_demo.py</file> (1 matches)\n- <file>galleries/examples/scales/log_demo.py</file> (1 matches)\n- <file>galleries/examples/scales/asinh_demo.py</file> (1 matches)\n- <file>galleries/examples/scales/semilogx_demo.py</file> (1 matches)\n- <file>galleries/examples/scales/custom_scale.py</file> (1 matches)\n- <file>galleries/examples/scales/log_bar.py</file> (1 matches)\n- <file>galleries/examples/scales/scales.py</file> (1 matches)\n- <file>galleries/examples/scales/logit_demo.py</file> (1 matches)\n- <file>galleries/examples/scales/aspect_loglog.py</file> (1 matches)\n- <file>galleries/examples/scales/power_norm.py</file> (1 matches)\n- <file>galleries/examples/ticks/major_minor_demo.py</file> (2 matches)\n- <file>galleries/examples/ticks/tick_labels_from_values.py</file> (1 matches)\n- <file>galleries/examples/ticks/ticklabels_rotation.py</file> (1 matches)\n- <file>galleries/examples/ticks/dollar_ticks.py</file> (1 matches)\n- <file>galleries/examples/ticks/ticks_too_many.py</file> (1 matches)\n- <file>galleries/examples/ticks/colorbar_tick_labelling_demo.py</file> (1 matches)\n- <file>galleries/examples/ticks/scalarformatter.py</file> (1 matches)\n- <file>galleries/examples/ticks/date_concise_formatter.py</file> (5 matches)\n- <file>galleries/examples/ticks/date_demo_convert.py</file> (1 matches)\n- <file>galleries/examples/ticks/date_index_formatter.py</file> (1 matches)\n- <file>galleries/examples/ticks/custom_ticker1.py</file> (1 matches)\n- <file>galleries/examples/ticks/date_demo_rrule.py</file> (1 matches)\n- <file>galleries/examples/ticks/tick-formatters.py</file> (1 matches)\n- <file>galleries/examples/ticks/tick-locators.py</file> (1 matches)\n- <file>galleries/examples/ticks/tick_xlabel_top.py</file> (1 matches)\n- <file>galleries/examples/ticks/auto_ticks.py</file> (3 matches)\n- <file>galleries/examples/ticks/fig_axes_customize_simple.py</file> (1 matches)\n- <file>galleries/examples/ticks/centered_ticklabels.py</file> (1 matches)\n- <file>galleries/examples/ticks/date_precision_and_epochs.py</file> (2 matches)\n- <file>galleries/examples/ticks/tick_label_right.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/contour3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/tricontourf3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/surface3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/custom_shaded_3d_surface.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/stem3d_demo.py</file> (3 matches)\n- <file>galleries/examples/mplot3d/scatter3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/2dcollections3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/voxels_torus.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/subplot3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/surface3d_radial.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/tricontour3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/errorbar3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/contour3d_3.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/hist3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/contourf3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/text3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/contourf3d_2.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/contour3d_2.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/voxels.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/polys3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/lorenz_attractor.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/surface3d_2.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/voxels_rgb.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/lines3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/box3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/trisurf3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/3d_bars.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/view_planes_3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/quiver3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/projections.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/wire3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/wire3d_zero_stride.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/offset.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/pathpatch3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/surface3d_3.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/voxels_numpy_logo.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/bars3d.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/mixed_subplots.py</file> (1 matches)\n- <file>galleries/examples/mplot3d/trisurf3d_2.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/font_family_rc.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/demo_text_rotation_mode.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/annotation_demo.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/annotation_basic.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/text_fontdict.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/fancytextbox_demo.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/custom_legends.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/demo_text_path.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/date.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/label_subplots.py</file> (3 matches)\n- <file>galleries/examples/text_labels_and_annotations/dfrac_demo.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/angle_annotation.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/angles_on_bracket_arrows.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/legend.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/font_file.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/arrow_demo.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/align_ylabels.py</file> (2 matches)\n- <file>galleries/examples/text_labels_and_annotations/text_commands.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/mathtext_asarray.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/stix_fonts_demo.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/unicode_minus.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/legend_demo.py</file> (5 matches)\n- <file>galleries/examples/text_labels_and_annotations/demo_annotation_box.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/titles_demo.py</file> (3 matches)\n- <file>galleries/examples/text_labels_and_annotations/watermark_text.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/text_rotation_relative_to_line.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/autowrap.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/multiline.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/rainbow_text.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/mathtext_demo.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/text_alignment.py</file> (2 matches)\n- <file>galleries/examples/text_labels_and_annotations/annotation_polar.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/mathtext_examples.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/fonts_demo.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/annotate_transform.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/mathtext_fontfamily_example.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/placing_text_boxes.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/line_with_text.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/fancyarrow_demo.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/engineering_formatter.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/figlegend_demo.py</file> (2 matches)\n- <file>galleries/examples/text_labels_and_annotations/tex_demo.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/fonts_demo_kw.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/font_table.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/usetex_fonteffects.py</file> (1 matches)\n- <file>galleries/examples/text_labels_and_annotations/accented_text.py</file> (1 matches)\n- <file>galleries/examples/userdemo/connectionstyle_demo.py</file> (1 matches)\n- <file>galleries/examples/userdemo/simple_legend02.py</file> (1 matches)\n- <file>galleries/examples/userdemo/demo_gridspec06.py</file> (1 matches)\n- <file>galleries/examples/userdemo/simple_annotate01.py</file> (1 matches)\n- <file>galleries/examples/userdemo/custom_boxstyle01.py</file> (1 matches)\n- <file>galleries/examples/userdemo/demo_gridspec03.py</file> (1 matches)\n- <file>galleries/examples/userdemo/demo_gridspec01.py</file> (1 matches)\n- <file>galleries/examples/userdemo/annotate_explain.py</file> (1 matches)\n- <file>galleries/examples/userdemo/annotate_text_arrow.py</file> (1 matches)\n- <file>galleries/examples/userdemo/simple_legend01.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/gridspec_nested.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/share_axis_lims_views.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/auto_subplots_adjust.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/axes_box_aspect.py</file> (7 matches)\n- <file>galleries/examples/subplots_axes_and_figures/demo_constrained_layout.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/shared_axis_demo.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/align_labels_demo.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/gridspec_multicolumn.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/subplot.py</file> (2 matches)\n- <file>galleries/examples/subplots_axes_and_figures/demo_tight_layout.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/axes_props.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/ganged_plots.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/axes_margins.py</file> (2 matches)\n- <file>galleries/examples/subplots_axes_and_figures/gridspec_and_subplots.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/axes_demo.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/figure_size_units.py</file> (4 matches)\n- <file>galleries/examples/subplots_axes_and_figures/axhspan_demo.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/subfigures.py</file> (4 matches)\n- <file>galleries/examples/subplots_axes_and_figures/subplots_demo.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/axis_equal_demo.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/subplots_adjust.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/multiple_figs_demo.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/broken_axis.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/geo_demo.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/axes_zoom_effect.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/invert_axes.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/figure_title.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/fahrenheit_celsius_scales.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/secondary_axis.py</file> (4 matches)\n- <file>galleries/examples/subplots_axes_and_figures/zoom_inset_axes.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/axis_labels_demo.py</file> (1 matches)\n- <file>galleries/examples/subplots_axes_and_figures/two_scales.py</file> (1 matches)\n- <file>galleries/examples/pyplots/axline.py</file> (2 matches)\n- <file>galleries/examples/pyplots/pyplot_two_subplots.py</file> (1 matches)\n- <file>galleries/examples/pyplots/pyplot_simple.py</file> (1 matches)\n- <file>galleries/examples/pyplots/pyplot_text.py</file> (1 matches)\n- <file>galleries/examples/pyplots/pyplot_three.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/barchart.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/markevery_demo.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/eventplot_demo.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/scatter_masked.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/scatter_with_legend.py</file> (3 matches)\n- <file>galleries/examples/lines_bars_and_markers/xcorr_acorr_demo.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/scatter_hist.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/eventcollection_demo.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/multivariate_marker_plot.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/fill_between_alpha.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/span_regions.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/scatter_demo2.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/timeline.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/stem_plot.py</file> (2 matches)\n- <file>galleries/examples/lines_bars_and_markers/fill_betweenx_demo.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/line_demo_dash_control.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/linestyles.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/stairs_demo.py</file> (2 matches)\n- <file>galleries/examples/lines_bars_and_markers/errorbar_limits_simple.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/horizontal_barchart_distribution.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/gradient_bar.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/categorical_variables.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/bar_label_demo.py</file> (3 matches)\n- <file>galleries/examples/lines_bars_and_markers/csd_demo.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/psd_demo.py</file> (4 matches)\n- <file>galleries/examples/lines_bars_and_markers/simple_plot.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/step_demo.py</file> (2 matches)\n- <file>galleries/examples/lines_bars_and_markers/spectrum_demo.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/multicolored_line.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/joinstyle.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/barh.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/bar_stacked.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/bar_colors.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/lines_with_ticks_demo.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/vline_hline_demo.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/cohere.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/capstyle.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/stackplot_demo.py</file> (2 matches)\n- <file>galleries/examples/lines_bars_and_markers/masked_demo.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/fill.py</file> (2 matches)\n- <file>galleries/examples/lines_bars_and_markers/hat_graph.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/marker_reference.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/broken_barh.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/errorbar_subsample.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/filled_step.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/scatter_star_poly.py</file> (1 matches)\n- <file>galleries/examples/lines_bars_and_markers/curve_error_band.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/simple_axisline4.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/demo_imagegrid_aspect.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/demo_edge_colorbar.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/simple_axesgrid2.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/inset_locator_demo.py</file> (3 matches)\n- <file>galleries/examples/axes_grid1/parasite_simple2.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/parasite_simple.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/inset_locator_demo2.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/simple_axes_divider3.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/demo_axes_hbox_divider.py</file> (2 matches)\n- <file>galleries/examples/axes_grid1/demo_axes_grid.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/demo_axes_grid2.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/simple_axes_divider1.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/simple_axesgrid.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/demo_axes_rgb.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/demo_colorbar_with_axes_divider.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/demo_anchored_direction_arrows.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/make_room_for_ylabel_using_axesgrid.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/demo_colorbar_with_inset_locator.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/simple_colorbar.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/demo_colorbar_of_inset_axes.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/demo_fixed_size_axes.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/scatter_hist_locatable_axes.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/simple_anchored_artists.py</file> (1 matches)\n- <file>galleries/examples/axes_grid1/demo_axes_divider.py</file> (1 matches)\n- <file>galleries/examples/animation/animated_histogram.py</file> (1 matches)\n- <file>galleries/examples/animation/dynamic_image.py</file> (1 matches)\n- <file>galleries/examples/animation/simple_scatter.py</file> (1 matches)\n- <file>galleries/examples/animation/animate_decay.py</file> (1 matches)\n- <file>galleries/examples/animation/multiple_axes.py</file> (1 matches)\n- <file>galleries/examples/animation/bayes_update.py</file> (1 matches)\n- <file>galleries/examples/animation/pause_resume.py</file> (1 matches)\n- <file>galleries/examples/animation/strip_chart.py</file> (1 matches)\n- <file>galleries/examples/animation/simple_anim.py</file> (1 matches)\n- <file>galleries/examples/animation/unchained.py</file> (1 matches)\n- <file>galleries/examples/animation/random_walk.py</file> (1 matches)\n- <file>galleries/examples/animation/double_pendulum.py</file> (1 matches)\n- <file>galleries/examples/animation/rain.py</file> (1 matches)\n- <file>galleries/examples/specialty_plots/advanced_hillshading.py</file> (1 matches)\n- <file>galleries/examples/specialty_plots/radar_chart.py</file> (1 matches)\n- <file>galleries/examples/specialty_plots/topographic_hillshading.py</file> (1 matches)\n- <file>galleries/examples/specialty_plots/sankey_rankine.py</file> (1 matches)\n- <file>galleries/examples/specialty_plots/ishikawa_diagram.py</file> (1 matches)\n- <file>galleries/examples/specialty_plots/hinton_demo.py</file> (1 matches)\n- <file>galleries/examples/specialty_plots/mri_with_eeg.py</file> (1 matches)\n- <file>galleries/examples/specialty_plots/anscombe.py</file> (1 matches)\n- <file>galleries/examples/specialty_plots/sankey_basics.py</file> (1 matches)\n- <file>galleries/examples/specialty_plots/sankey_links.py</file> (1 matches)\n- <file>galleries/examples/specialty_plots/leftventricle_bullseye.py</file> (1 matches)\n- <file>galleries/examples/specialty_plots/skewt.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/fancybox_demo.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/scatter.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/arrow_guide.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/line_collection.py</file> (2 matches)\n- <file>galleries/examples/shapes_and_collections/path_patch.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/dolphin.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/artist_reference.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/compound_path.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/quad_bezier.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/ellipse_collection.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/collections.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/donut.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/ellipse_arrow.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/ellipse_demo.py</file> (2 matches)\n- <file>galleries/examples/shapes_and_collections/hatch_demo.py</file> (1 matches)\n- <file>galleries/examples/shapes_and_collections/patch_collection.py</file> (1 matches)\n- <file>galleries/examples/spines/centered_spines_with_arrows.py</file> (1 matches)\n- <file>galleries/examples/spines/spines.py</file> (1 matches)\n- <file>galleries/examples/spines/multiple_yaxis_with_spines.py</file> (1 matches)\n- <file>galleries/examples/spines/spines_dropped.py</file> (1 matches)\n- <file>galleries/examples/spines/spine_placement_demo.py</file> (1 matches)\n- <file>galleries/examples/axisartist/demo_floating_axes.py</file> (1 matches)\n- <file>galleries/examples/axisartist/simple_axis_pad.py</file> (1 matches)\n- <file>galleries/examples/axisartist/demo_ticklabel_alignment.py</file> (1 matches)\n- <file>galleries/examples/axisartist/demo_axis_direction.py</file> (1 matches)\n- <file>galleries/examples/axisartist/simple_axisline.py</file> (1 matches)\n- <file>galleries/examples/axisartist/demo_axisline_style.py</file> (1 matches)\n- <file>galleries/examples/axisartist/demo_curvelinear_grid.py</file> (1 matches)\n- <file>galleries/examples/axisartist/demo_parasite_axes.py</file> (1 matches)\n- <file>galleries/examples/axisartist/simple_axisline3.py</file> (1 matches)\n- <file>galleries/examples/axisartist/simple_axis_direction03.py</file> (1 matches)\n- <file>galleries/examples/axisartist/simple_axis_direction01.py</file> (1 matches)\n- <file>galleries/examples/axisartist/simple_axisartist1.py</file> (1 matches)\n- <file>galleries/examples/axisartist/axis_direction.py</file> (1 matches)\n- <file>galleries/examples/axisartist/demo_ticklabel_direction.py</file> (1 matches)\n- <file>galleries/examples/axisartist/demo_curvelinear_grid2.py</file> (1 matches)\n- <file>galleries/examples/axisartist/demo_parasite_axes2.py</file> (1 matches)\n- <file>galleries/examples/axisartist/demo_floating_axis.py</file> (1 matches)\n- <file>galleries/examples/pie_and_polar_charts/pie_features.py</file> (3 matches)\n- <file>galleries/examples/pie_and_polar_charts/polar_bar.py</file> (1 matches)\n- <file>galleries/examples/pie_and_polar_charts/polar_legend.py</file> (1 matches)\n- <file>galleries/examples/pie_and_polar_charts/polar_error_caps.py</file> (3 matches)\n- <file>galleries/examples/pie_and_polar_charts/nested_pie.py</file> (2 matches)\n- <file>galleries/examples/pie_and_polar_charts/bar_of_pie.py</file> (1 matches)\n- <file>galleries/examples/pie_and_polar_charts/pie_and_donut_labels.py</file> (2 matches)\n- <file>galleries/examples/pie_and_polar_charts/polar_demo.py</file> (1 matches)\n- <file>galleries/examples/pie_and_polar_charts/polar_scatter.py</file> (1 matches)\n- <file>galleries/examples/style_sheets/fivethirtyeight.py</file> (1 matches)\n- <file>galleries/examples/style_sheets/bmh.py</file> (1 matches)\n- <file>galleries/examples/style_sheets/plot_solarizedlight2.py</file> (1 matches)\n- <file>galleries/examples/style_sheets/ggplot.py</file> (1 matches)\n- <file>galleries/examples/style_sheets/grayscale.py</file> (1 matches)\n- <file>galleries/examples/style_sheets/dark_background.py</file> (1 matches)\n- <file>galleries/examples/style_sheets/style_sheets_reference.py</file> (1 matches)\n- <file>galleries/examples/statistics/confidence_ellipse.py</file> (3 matches)\n- <file>galleries/examples/statistics/time_series_histogram.py</file> (1 matches)\n- <file>galleries/examples/statistics/errorbars_and_boxes.py</file> (1 matches)\n- <file>galleries/examples/statistics/histogram_features.py</file> (1 matches)\n- <file>galleries/examples/statistics/hist.py</file> (1 matches)\n- <file>galleries/examples/statistics/histogram_cumulative.py</file> (1 matches)\n- <file>galleries/examples/statistics/multiple_histograms_side_by_side.py</file> (1 matches)\n- <file>galleries/examples/statistics/customized_violin.py</file> (1 matches)\n- <file>galleries/examples/statistics/boxplot_demo.py</file> (4 matches)\n- <file>galleries/examples/statistics/histogram_multihist.py</file> (1 matches)\n- <file>galleries/examples/statistics/errorbar_features.py</file> (1 matches)\n- <file>galleries/examples/statistics/bxp.py</file> (2 matches)\n- <file>galleries/examples/statistics/barchart_demo.py</file> (1 matches)\n- <file>galleries/examples/statistics/violinplot.py</file> (1 matches)\n- <file>galleries/examples/statistics/errorbar_limits.py</file> (1 matches)\n- <file>galleries/examples/statistics/histogram_histtypes.py</file> (1 matches)\n- <file>galleries/examples/statistics/errorbar.py</file> (1 matches)\n- <file>galleries/examples/statistics/boxplot_vs_violin.py</file> (1 matches)\n- <file>galleries/examples/statistics/hexbin_demo.py</file> (1 matches)\n- <file>galleries/examples/statistics/boxplot.py</file> (2 matches)\n- <file>galleries/examples/statistics/boxplot_color.py</file> (1 matches)\n- <file>galleries/examples/color/custom_cmap.py</file> (1 matches)\n- <file>galleries/examples/color/color_cycle_default.py</file> (1 matches)\n- <file>galleries/examples/color/color_by_yvalue.py</file> (1 matches)\n- <file>galleries/examples/color/colorbar_basics.py</file> (1 matches)\n- <file>galleries/examples/color/named_colors.py</file> (1 matches)\n- <file>galleries/examples/color/color_demo.py</file> (1 matches)\n- <file>galleries/examples/color/set_alpha.py</file> (1 matches)\n- <file>galleries/examples/units/annotate_with_units.py</file> (1 matches)\n- <file>galleries/examples/units/ellipse_with_units.py</file> (1 matches)\n- <file>galleries/examples/units/radian_demo.py</file> (1 matches)\n- <file>galleries/examples/units/units_sample.py</file> (1 matches)\n- <file>galleries/examples/units/artist_tests.py</file> (1 matches)\n- <file>galleries/examples/units/bar_unit_demo.py</file> (1 matches)\n- <file>galleries/examples/units/bar_demo2.py</file> (1 matches)\n- <file>galleries/examples/units/units_scatter.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/colormap_interactive_adjustment.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/pcolor_demo.py</file> (3 matches)\n- <file>galleries/examples/images_contours_and_fields/image_nonuniform.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/image_antialiasing.py</file> (4 matches)\n- <file>galleries/examples/images_contours_and_fields/quiver_simple_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/layer_images.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/barcode_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/colormap_normalizations.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/tricontour_smooth_delaunay.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/image_masked.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/watermark_image.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/contour_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/pcolormesh_levels.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/triplot_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/image_annotated_heatmap.py</file> (3 matches)\n- <file>galleries/examples/images_contours_and_fields/specgram_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/irregulardatagrid.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/quiver_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/contourf_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/contour_label_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/trigradient_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/contourf_hatching.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/affine_image.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/image_clip_path.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/image_transparency_blend.py</file> (2 matches)\n- <file>galleries/examples/images_contours_and_fields/tricontour_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/image_demo.py</file> (5 matches)\n- <file>galleries/examples/images_contours_and_fields/quadmesh_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/spy_demos.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/tricontour_smooth_user.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/barb_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/pcolormesh_grids.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/multi_image.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/colormap_normalizations_symlognorm.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/plot_streamplot.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/triinterp_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/interpolation_methods.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/tripcolor_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/contour_corner_mask.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/shading_example.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/image_zcoord.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/contours_in_optimization_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/figimage_demo.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/demo_bboximage.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/contourf_log.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/contour_image.py</file> (1 matches)\n- <file>galleries/examples/images_contours_and_fields/matshow.py</file> (1 matches)\n- <file>galleries/plot_types/arrays/imshow.py</file> (1 matches)\n- <file>galleries/plot_types/arrays/barbs.py</file> (1 matches)\n- <file>galleries/plot_types/arrays/streamplot.py</file> (1 matches)\n- <file>galleries/plot_types/arrays/pcolormesh.py</file> (1 matches)\n- <file>galleries/plot_types/arrays/contourf.py</file> (1 matches)\n- <file>galleries/plot_types/arrays/contour.py</file> (1 matches)\n- <file>galleries/plot_types/arrays/quiver.py</file> (1 matches)\n- <file>galleries/plot_types/unstructured/tripcolor.py</file> (1 matches)\n- <file>galleries/plot_types/unstructured/tricontourf.py</file> (1 matches)\n- <file>galleries/plot_types/unstructured/triplot.py</file> (1 matches)\n- <file>galleries/plot_types/unstructured/tricontour.py</file> (1 matches)\n- <file>galleries/plot_types/basic/fill_between.py</file> (1 matches)\n- <file>galleries/plot_types/basic/stackplot.py</file> (1 matches)\n- <file>galleries/plot_types/basic/scatter_plot.py</file> (1 matches)\n- <file>galleries/plot_types/basic/plot.py</file> (1 matches)\n- <file>galleries/plot_types/basic/bar.py</file> (1 matches)\n- <file>galleries/plot_types/basic/stem.py</file> (1 matches)\n- <file>galleries/plot_types/basic/stairs.py</file> (1 matches)\n- <file>galleries/plot_types/stats/errorbar_plot.py</file> (1 matches)\n- <file>galleries/plot_types/stats/violin.py</file> (1 matches)\n- <file>galleries/plot_types/stats/hist_plot.py</file> (1 matches)\n- <file>galleries/plot_types/stats/boxplot_plot.py</file> (1 matches)\n- <file>galleries/plot_types/stats/pie.py</file> (1 matches)\n- <file>galleries/plot_types/stats/eventplot.py</file> (1 matches)\n- <file>galleries/plot_types/stats/hist2d.py</file> (1 matches)\n- <file>galleries/plot_types/stats/ecdf.py</file> (1 matches)\n- <file>galleries/plot_types/stats/hexbin.py</file> (1 matches)\n- <file>galleries/plot_types/3D/scatter3d_simple.py</file> (1 matches)\n- <file>galleries/plot_types/3D/trisurf3d_simple.py</file> (1 matches)\n- <file>galleries/plot_types/3D/surface3d_simple.py</file> (1 matches)\n- <file>galleries/plot_types/3D/voxels_simple.py</file> (1 matches)\n- <file>galleries/plot_types/3D/wire3d_simple.py</file> (1 matches)\n- <file>galleries/users_explain/quick_start.py</file> (1 matches)\n- <file>galleries/users_explain/customizing.py</file> (1 matches)\n- <file>galleries/users_explain/axes/arranging_axes.py</file> (1 matches)\n- <file>galleries/users_explain/axes/tight_layout_guide.py</file> (2 matches)\n- <file>galleries/users_explain/axes/constrainedlayout_guide.py</file> (1 matches)\n- <file>galleries/users_explain/axes/legend_guide.py</file> (3 matches)\n- <file>galleries/users_explain/axes/colorbar_placement.py</file> (1 matches)\n- <file>galleries/users_explain/axes/axes_ticks.py</file> (1 matches)\n- <file>galleries/users_explain/artists/color_cycle.py</file> (1 matches)\n- <file>galleries/users_explain/artists/transforms_tutorial.py</file> (9 matches)\n- <file>galleries/users_explain/artists/patheffects_guide.py</file> (4 matches)\n- <file>galleries/users_explain/artists/paths.py</file> (3 matches)\n- <file>galleries/users_explain/artists/imshow_extent.py</file> (1 matches)\n- <file>galleries/users_explain/text/text_props.py</file> (1 matches)\n- <file>galleries/users_explain/text/text_intro.py</file> (17 matches)\n- <file>galleries/users_explain/colors/colors.py</file> (1 matches)\n- <file>galleries/users_explain/colors/colormaps.py</file> (3 matches)\n- <file>galleries/users_explain/colors/colormap-manipulation.py</file> (3 matches)\n- <file>galleries/users_explain/colors/colorbar_only.py</file> (1 matches)\n- <file>galleries/users_explain/colors/colormapnorms.py</file> (8 matches)\n- <file>galleries/users_explain/animations/animations.py</file> (2 matches)\n- <file>galleries/users_explain/animations/blitting.py</file> (2 matches)\n- <file>doc/conf.py</file> (1 matches)\n- <file>tools/run_examples.py</file> (1 matches)\n\n\nResult of search_code(\"plt.ion()\"):\n\nFound 3 snippets containing `plt.ion()` in the codebase:\n\n- Search result 1:\n```\n<file>lib/matplotlib/pyplot.py</file>\n <func>ioff</func>\n<code>\n568 \n569         # if interactive mode is on\n570         # then figures will be shown on creation\n571         plt.ion()\n572         # This figure will be shown immediately\n573         fig = plt.figure()\n574 \n\n</code>\n```\n- Search result 2:\n```\n<file>lib/matplotlib/pyplot.py</file>\n <func>ion</func>\n<code>\n612         # This figure will not be shown immediately\n613         fig = plt.figure()\n614 \n615         with plt.ion():\n616             # interactive mode will be on\n617             # figures will automatically be shown\n618             fig2 = plt.figure()\n\n</code>\n```\n- Search result 3:\n```\n<file>tools/memleak.py</file>\n\n<code>\n143 \n144     if args.interactive:\n145         import matplotlib.pyplot as plt\n146         plt.ion()\n147 \n148     run_memleak_test(\n149         MemleakTest(args.empty), args.iterations[0], args.report[0])\n\n</code>\n```\n\n\nResult of search_method(\"switch_backend\"):\n\nFound 1 methods with name switch_backend in the codebase:\n\n- Search result 1:\n```\n<file>lib/matplotlib/pyplot.py</file>\n <func>switch_backend</func>\n<code>\n283 def switch_backend(newbackend: str) -> None:\n284     \"\"\"\n285     Set the pyplot backend.\n286 \n287     Switching to an interactive backend is possible only if no event loop for\n288     another interactive backend has started.  Switching to and from\n289     non-interactive backends is always possible.\n290 \n291     If the new backend is different than the current backend then all open\n292     Figures will be closed via ``plt.close('all')``.\n293 \n294     Parameters\n295     ----------\n296     newbackend : str\n297         The case-insensitive name of the backend to use.\n298 \n299     \"\"\"\n300     global _backend_mod\n301     # make sure the init is pulled up so we can assign to it later\n302     import matplotlib.backends\n303 \n304     if newbackend is rcsetup._auto_backend_sentinel:\n305         current_framework = cbook._get_running_interactive_framework()\n306         mapping = {'qt': 'qtagg',\n307                    'gtk3': 'gtk3agg',\n308                    'gtk4': 'gtk4agg',\n309                    'wx': 'wxagg',\n310                    'tk': 'tkagg',\n311                    'macosx': 'macosx',\n312                    'headless': 'agg'}\n313 \n314         if current_framework in mapping:\n315             candidates = [mapping[current_framework]]\n316         else:\n317             candidates = []\n318         candidates += [\n319             \"macosx\", \"qtagg\", \"gtk4agg\", \"gtk3agg\", \"tkagg\", \"wxagg\"]\n320 \n321         # Don't try to fallback on the cairo-based backends as they each have\n322         # an additional dependency (pycairo) over the agg-based backend, and\n323         # are of worse quality.\n324         for candidate in candidates:\n325             try:\n326                 switch_backend(candidate)\n327             except ImportError:\n328                 continue\n329             else:\n330                 rcParamsOrig['backend'] = candidate\n331                 return\n332         else:\n333             # Switching to Agg should always succeed; if it doesn't, let the\n334             # exception propagate out.\n335             switch_backend(\"agg\")\n336             rcParamsOrig[\"backend\"] = \"agg\"\n337             return\n338     # have to escape the switch on access logic\n339     old_backend = dict.__getitem__(rcParams, 'backend')\n340 \n341     module = importlib.import_module(cbook._backend_module_name(newbackend))\n342 \n343     required_framework = module.FigureCanvas.required_interactive_framework\n344     if required_framework is not None:\n345         current_framework = cbook._get_running_interactive_framework()\n346         if (current_framework and required_framework\n347                 and current_framework != required_framework):\n348             raise ImportError(\n349                 \"Cannot load backend {!r} which requires the {!r} interactive \"\n350                 \"framework, as {!r} is currently running\".format(\n351                     newbackend, required_framework, current_framework))\n352 \n353     # Load the new_figure_manager() and show() functions from the backend.\n354 \n355     # Classically, backends can directly export these functions.  This should\n356     # keep working for backcompat.\n357     new_figure_manager = getattr(module, \"new_figure_manager\", None)\n358     show = getattr(module, \"show\", None)\n359 \n360     # In that classical approach, backends are implemented as modules, but\n361     # \"inherit\" default method implementations from backend_bases._Backend.\n362     # This is achieved by creating a \"class\" that inherits from\n363     # backend_bases._Backend and whose body is filled with the module globals.\n364     class backend_mod(matplotlib.backend_bases._Backend):\n365         locals().update(vars(module))\n366 \n367     # However, the newer approach for defining new_figure_manager and\n368     # show is to derive them from canvas methods.  In that case, also\n369     # update backend_mod accordingly; also, per-backend customization of\n370     # draw_if_interactive is disabled.\n371     if new_figure_manager is None:\n372         # Only try to get the canvas class if have opted into the new scheme.\n373         canvas_class = backend_mod.FigureCanvas\n374 \n375         def new_figure_manager_given_figure(num, figure):\n376             return canvas_class.new_manager(figure, num)\n377 \n378         def new_figure_manager(num, *args, FigureClass=Figure, **kwargs):\n379             fig = FigureClass(*args, **kwargs)\n380             return new_figure_manager_given_figure(num, fig)\n381 \n382         def draw_if_interactive() -> None:\n383             if matplotlib.is_interactive():\n384                 manager = _pylab_helpers.Gcf.get_active()\n385                 if manager:\n386                     manager.canvas.draw_idle()\n387 \n388         backend_mod.new_figure_manager_given_figure = (  # type: ignore[method-assign]\n389             new_figure_manager_given_figure)\n390         backend_mod.new_figure_manager = (  # type: ignore[method-assign]\n391             new_figure_manager)\n392         backend_mod.draw_if_interactive = (  # type: ignore[method-assign]\n393             draw_if_interactive)\n394 \n395     # If the manager explicitly overrides pyplot_show, use it even if a global\n396     # show is already present, as the latter may be here for backcompat.\n397     manager_class = getattr(getattr(backend_mod, \"FigureCanvas\", None),\n398                             \"manager_class\", None)\n399     # We can't compare directly manager_class.pyplot_show and FMB.pyplot_show because\n400     # pyplot_show is a classmethod so the above constructs are bound classmethods, and\n401     # thus always different (being bound to different classes).  We also have to use\n402     # getattr_static instead of vars as manager_class could have no __dict__.\n403     manager_pyplot_show = inspect.getattr_static(manager_class, \"pyplot_show\", None)\n404     base_pyplot_show = inspect.getattr_static(FigureManagerBase, \"pyplot_show\", None)\n405     if (show is None\n406             or (manager_pyplot_show is not None\n407                 and manager_pyplot_show != base_pyplot_show)):\n408         _pyplot_show = cast('Any', manager_class).pyplot_show\n409         backend_mod.show = _pyplot_show  # type: ignore[method-assign]\n410 \n411     _log.debug(\"Loaded backend %s version %s.\",\n412                newbackend, backend_mod.backend_version)\n413 \n414     rcParams['backend'] = rcParamsDefault['backend'] = newbackend\n415     _backend_mod = backend_mod\n416     for func_name in [\"new_figure_manager\", \"draw_if_interactive\", \"show\"]:\n417         globals()[func_name].__signature__ = inspect.signature(\n418             getattr(backend_mod, func_name))\n419 \n420     # Need to keep a global reference to the backend for compatibility reasons.\n421     # See https://github.com/matplotlib/matplotlib/issues/6092\n422     matplotlib.backends.backend = newbackend  # type: ignore[attr-defined]\n423     if not cbook._str_equal(old_backend, newbackend):\n424         close(\"all\")\n425 \n426     # make sure the repl display hook is installed in case we become\n427     # interactive\n428     install_repl_displayhook()\n\n</code>\n```\n\n\nResult of search_method(\"matplotlib.use\"):\n\nCould not find method matplotlib.use in the codebase.\n\n"
    },
    {
        "role": "user",
        "content": "Let's analyze collected context first.\nIf an API call could not find any code, you should think about what other API calls you can make to get more context.\nIf an API call returns some result, you should analyze the result and think about these questions:\n1. What does this part of the code do?\n2. What is the relationship between this part of the code and the bug?\n3. Given the issue description, what would be the intended behavior of this part of the code?\n"
    },
    {
        "role": "assistant",
        "content": "Based on the information gathered from the API calls, let's analyze the context around the issue of switching backends in Matplotlib, especially focusing on switching from the `qt5` backend to the `inline` backend within a Jupyter Notebook environment and how that leads to GUI windows being closed.\n\n### Analysis of the Collected Context\n\n#### Backend Switching Mechanism\n\n- **`%matplotlib inline` and Backend Switching**: The `%matplotlib` magic command used in Jupyter Notebooks is a way to configure the environment to display figures inline, as opposed to using an external or GUI backend (like `qt5`). This magic command directly interacts with Matplotlib's backend-switching mechanism. Unfortunately, the returned snippets do not include how this magic command interacts with Matplotlib's backend management, but the mechanism is implicitly involved when discussing GUI backends and inline plotting in notebooks.\n\n- **`plt.show()` Behavior**: The search results included snippets where `plt.show()` is used directly after switching the interactive mode on with `plt.ion()`. It suggests that the function is pivotal in rendering figures when in interactive mode. This is relevant considering the issue involves a GUI window not persisting as expected, which could relate to how `plt.show()` behaves across different backends.\n\n- **Interaction with Interactive Mode (`plt.ion()`)**: The search returned examples of toggling interactive mode on with `plt.ion()`. This mode is crucial in GUI backends for non-blocking figure display, enabling continued interaction in the console or notebook while figures are open. The issue could relate to how changing to the inline backend interacts with this interactive mode, possibly by implicitly toggling it off or interfering with its expected behavior.\n\n- **Switching Backends (`switch_backend`)**: The `switch_backend` function's documentation describes how switching between interactive and non-interactive backends is handled, including closing all open figures (with `plt.close('all')`) if the new backend is different. This mechanism is directly related to the issue, as it details an underlying cause for figures being closed upon a backend switch. The intended behavior appears to prevent conflicts or unexpected behavior from figures opened in different backends by starting fresh when a significant backend change is made.\n\n#### Intended Behavior and Relationship to the Bug\n\nGiven the issue description and the context gathered:\n1. **What does this part of the code do?** The described parts of the code manage how Matplotlib handles rendering figures in different environments (GUI vs. inline), toggles interactive mode, and switches between backends with potential closure of all figures during a significant backend switch.\n\n2. **Relationship to the bug**: The issue occurs because switching from a GUI backend (`qt5`) to the `inline` backend triggers behavior that automatically closes all open GUI windows. This is in line with the observed functionality of `switch_backend`, which is designed to close all Figures upon a backend switch to avoid conflicts or unstable states.\n\n3. **Intended Behavior**: The intended behavior when switching backends while aiming to keep GUI windows open seems to conflict with the built-in safeguard of closing figures to maintain a stable and expected state across backend transitions. However, for specific use cases within Jupyter Notebooks, it would be beneficial to allow for more flexibility in backend switching without losing GUI windows immediately, especially for interactive exploration and analysis purposes.\n\n### Moving Forward\n\nTo address this issue, considering what we've learned, an approach could be to investigate or propose a method for switching backends that does not necessitate closing all GUI figures, possibly by keeping track of figures opened with GUI backends separately from those intended for inline display. Additionally, enhancements in how matplotlib integrates with Jupyter's display mechanisms could offer a way to achieve the desired functionality, bridging between interactive GUI usage and inline plotting without losing the state of opened figures.\n\nGiven the limitations observed in directly addressing the bug with the current mechanics, a deeper dive into `matplotlib`'s backend management code, specifically around how interactive mode and backend switching are handled, may reveal opportunities for improvement or workarounds that could be applied either within Matplotlib itself or as part of a Jupyter Notebook integration."
    },
    {
        "role": "user",
        "content": "Based on your analysis, answer below questions:\n1. do we need more context: construct search API calls to get more context of the project. If you don't need more context, LEAVE THIS EMTPY.\n2. where are bug locations: buggy files, classes, and methods. Only include the necessary locations that need to be fixed. For each bug location, you should also describe the intended behavior of the code at that location, in order to resolve the issue. The intended behavior should preserve the existing functionality of the code. If you think two methods in the same class are buggy, you should provide two bug locations (E.g. Location 1: File: a.py, Class: A, Method: a. Location 2: File: a.py, Class: A, Method: b.). If you want to add a method to a class, you should only provide the file and class as bug location, and describe the new method in intended behavior. If you still need more context, LEAVE THIS EMPTY."
    },
    {
        "role": "assistant",
        "content": "1. \n\n2. \n- **Bug Location 1:**\n  - **File:** `lib/matplotlib/pyplot.py`\n  - **Class:** N/A\n  - **Method:** `switch_backend`\n  - **Intended Behavior:** The `switch_backend` function is key in handling the transition between different backends. To resolve the issue, an enhancement allowing for a softer transition specifically when moving from a GUI backend to an inline backend (and vice versa) could be integrated. This enhancement should preserve the capability to close figures when necessary (to avoid resource leaks or conflicts) but provide a mechanism or flag to keep GUI windows open if desired by the user. For instance, adding a parameter to `switch_backend` like `close_gui_figures=True` by default, which if set to `False`, would skip closing figures opened in GUI backends. This way, the existing functionality is preserved, and the user is given control over the behavior during backend switches within a Jupyter Notebook environment.\n\n- **Bug Location 2:**\n  - **File:** `lib/matplotlib/pyplot.py`\n  - **Class:** N/A\n  - **Method:** `ioff`, `ion`\n  - **Intended Behavior:** The documentation and behavior of `ioff` and `ion` (toggle interactive mode off and on) should explicitly address or manage the impact of these calls on GUI windows, especially in concert with backend switches. Although not directly buggy, enhancing the documentation and possibly the behavior of these methods to support a scenario like the mentioned bug could improve user experience. This could include checking the current backend and adjusting the behavior or providing warnings when an action (like toggling interactive mode or switching backends) might unexpectedly close or preserve GUI windows depending on the target backend.\n\nThese modifications aim to provide a more flexible and intuitive experience for users who frequently switch between interactive GUI backends and inline plotting within Jupyter Notebooks, enhancing the usability of Matplotlib in interactive and exploratory data analysis scenarios."
    }
]