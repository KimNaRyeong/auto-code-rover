[
    {
        "file": "sklearn/impute/_iterative.py",
        "class": "IterativeImputer",
        "method": "__init__",
        "intended_behavior": "The constructor of the `IterativeImputer` class should be modified to include a new parameter `fill_value`, which will be used when the `initial_strategy` is set to \"constant\". This parameter should allow any scalar value or `np.nan`, providing a default that maintains the current behavior when not explicitly set by the user. This change allows users to specify a custom initialization value for missing values, enhancing the flexibility of `IterativeImputer`. Existing functionality and default behavior of the class should remain unchanged when the `fill_value` parameter is not utilized (i.e., when `initial_strategy` is not \"constant\")."
    },
    {
        "file": "sklearn/impute/_iterative.py",
        "class": "IterativeImputer",
        "method": "_initial_imputation",
        "intended_behavior": "This method should be updated to utilize the `fill_value` parameter when performing the initial imputation with strategy \"constant\". The implementation should check if `initial_strategy` is \"constant\" and, if so, use the `fill_value` for replacing missing values. This adjustment ensures that `fill_value` directly influences the imputation process only in the context it's meant to (i.e., with \"constant\" strategy), without affecting other imputation strategies. The intended behavior is to provide a seamless way to customize initial missing values handling, which could be especially beneficial for datasets where a zero, the mean, or median value might not be the most appropriate initial guess."
    }
]