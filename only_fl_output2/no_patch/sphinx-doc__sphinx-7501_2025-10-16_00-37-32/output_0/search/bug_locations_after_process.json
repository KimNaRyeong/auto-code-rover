[
    {
        "rel_file_path": "doc/conf.py",
        "abs_file_path": "/home/kimnal0/auto-code-rover/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.0/doc/conf.py",
        "start": 1,
        "end": 163,
        "class_name": null,
        "method_name": null,
        "code": "1 # Sphinx documentation build configuration file\n2 \n3 import re\n4 \n5 import sphinx\n6 \n7 \n8 extensions = ['sphinx.ext.autodoc', 'sphinx.ext.doctest', 'sphinx.ext.todo',\n9               'sphinx.ext.autosummary', 'sphinx.ext.extlinks',\n10               'sphinx.ext.intersphinx',\n11               'sphinx.ext.viewcode', 'sphinx.ext.inheritance_diagram']\n12 \n13 master_doc = 'contents'\n14 templates_path = ['_templates']\n15 exclude_patterns = ['_build']\n16 \n17 project = 'Sphinx'\n18 copyright = '2007-2020, Georg Brandl and the Sphinx team'\n19 version = sphinx.__display_version__\n20 release = version\n21 show_authors = True\n22 \n23 html_theme = 'sphinx13'\n24 html_theme_path = ['_themes']\n25 modindex_common_prefix = ['sphinx.']\n26 html_static_path = ['_static']\n27 html_sidebars = {'index': ['indexsidebar.html', 'searchbox.html']}\n28 html_additional_pages = {'index': 'index.html'}\n29 html_use_opensearch = 'http://sphinx-doc.org'\n30 \n31 htmlhelp_basename = 'Sphinxdoc'\n32 \n33 epub_theme = 'epub'\n34 epub_basename = 'sphinx'\n35 epub_author = 'Georg Brandl'\n36 epub_publisher = 'http://sphinx-doc.org/'\n37 epub_uid = 'web-site'\n38 epub_scheme = 'url'\n39 epub_identifier = epub_publisher\n40 epub_pre_files = [('index.xhtml', 'Welcome')]\n41 epub_post_files = [('usage/installation.xhtml', 'Installing Sphinx'),\n42                    ('develop.xhtml', 'Sphinx development')]\n43 epub_exclude_files = ['_static/opensearch.xml', '_static/doctools.js',\n44                       '_static/jquery.js', '_static/searchtools.js',\n45                       '_static/underscore.js', '_static/basic.css',\n46                       '_static/language_data.js',\n47                       'search.html', '_static/websupport.js']\n48 epub_fix_images = False\n49 epub_max_image_width = 0\n50 epub_show_urls = 'inline'\n51 epub_use_index = False\n52 epub_guide = (('toc', 'contents.xhtml', 'Table of Contents'),)\n53 epub_description = 'Sphinx documentation generator system manual'\n54 \n55 latex_documents = [('contents', 'sphinx.tex', 'Sphinx Documentation',\n56                     'Georg Brandl', 'manual', 1)]\n57 latex_logo = '_static/sphinx.png'\n58 latex_elements = {\n59     'fontenc': r'\\usepackage[LGR,X2,T1]{fontenc}',\n60     'fontpkg': r'''\n61 \\usepackage[sc]{mathpazo}\n62 \\usepackage[scaled]{helvet}\n63 \\usepackage{courier}\n64 \\substitutefont{LGR}{\\rmdefault}{cmr}\n65 \\substitutefont{LGR}{\\sfdefault}{cmss}\n66 \\substitutefont{LGR}{\\ttdefault}{cmtt}\n67 \\substitutefont{X2}{\\rmdefault}{cmr}\n68 \\substitutefont{X2}{\\sfdefault}{cmss}\n69 \\substitutefont{X2}{\\ttdefault}{cmtt}\n70 ''',\n71     'passoptionstopackages': '\\\\PassOptionsToPackage{svgnames}{xcolor}',\n72     'preamble': '\\\\DeclareUnicodeCharacter{229E}{\\\\ensuremath{\\\\boxplus}}',\n73     'fvset': '\\\\fvset{fontsize=auto}',\n74     # fix missing index entry due to RTD doing only once pdflatex after makeindex\n75     'printindex': r'''\n76 \\IfFileExists{\\jobname.ind}\n77              {\\footnotesize\\raggedright\\printindex}\n78              {\\begin{sphinxtheindex}\\end{sphinxtheindex}}\n79 ''',\n80 }\n81 latex_show_urls = 'footnote'\n82 latex_use_xindy = True\n83 \n84 autodoc_member_order = 'groupwise'\n85 todo_include_todos = True\n86 extlinks = {'duref': ('http://docutils.sourceforge.net/docs/ref/rst/'\n87                       'restructuredtext.html#%s', ''),\n88             'durole': ('http://docutils.sourceforge.net/docs/ref/rst/'\n89                        'roles.html#%s', ''),\n90             'dudir': ('http://docutils.sourceforge.net/docs/ref/rst/'\n91                       'directives.html#%s', '')}\n92 \n93 man_pages = [\n94     ('contents', 'sphinx-all', 'Sphinx documentation generator system manual',\n95      'Georg Brandl', 1),\n96     ('man/sphinx-build', 'sphinx-build', 'Sphinx documentation generator tool',\n97      '', 1),\n98     ('man/sphinx-quickstart', 'sphinx-quickstart', 'Sphinx documentation '\n99      'template generator', '', 1),\n100     ('man/sphinx-apidoc', 'sphinx-apidoc', 'Sphinx API doc generator tool',\n101      '', 1),\n102     ('man/sphinx-autogen', 'sphinx-autogen', 'Generate autodoc stub pages',\n103      '', 1),\n104 ]\n105 \n106 texinfo_documents = [\n107     ('contents', 'sphinx', 'Sphinx Documentation', 'Georg Brandl',\n108      'Sphinx', 'The Sphinx documentation builder.', 'Documentation tools',\n109      1),\n110 ]\n111 \n112 # We're not using intersphinx right now, but if we did, this would be part of\n113 # the mapping:\n114 intersphinx_mapping = {'python': ('https://docs.python.org/3/', None)}\n115 \n116 # Sphinx document translation with sphinx gettext feature uses these settings:\n117 locale_dirs = ['locale/']\n118 gettext_compact = False\n119 \n120 \n121 # -- Extension interface -------------------------------------------------------\n122 \n123 from sphinx import addnodes  # noqa\n124 \n125 event_sig_re = re.compile(r'([a-zA-Z-]+)\\s*\\((.*)\\)')\n126 \n127 \n128 def parse_event(env, sig, signode):\n129     m = event_sig_re.match(sig)\n130     if not m:\n131         signode += addnodes.desc_name(sig, sig)\n132         return sig\n133     name, args = m.groups()\n134     signode += addnodes.desc_name(name, name)\n135     plist = addnodes.desc_parameterlist()\n136     for arg in args.split(','):\n137         arg = arg.strip()\n138         plist += addnodes.desc_parameter(arg, arg)\n139     signode += plist\n140     return name\n141 \n142 \n143 def setup(app):\n144     from sphinx.ext.autodoc import cut_lines\n145     from sphinx.util.docfields import GroupedField\n146     app.connect('autodoc-process-docstring', cut_lines(4, what=['module']))\n147     app.add_object_type('confval', 'confval',\n148                         objname='configuration value',\n149                         indextemplate='pair: %s; configuration value')\n150     app.add_object_type('setuptools-confval', 'setuptools-confval',\n151                         objname='setuptools configuration value',\n152                         indextemplate='pair: %s; setuptools configuration value')\n153     fdesc = GroupedField('parameter', label='Parameters',\n154                          names=['param'], can_collapse=True)\n155     app.add_object_type('event', 'event', 'pair: %s; event', parse_event,\n156                         doc_field_types=[fdesc])\n157 \n158     # workaround for RTD\n159     from sphinx.util import logging\n160     logger = logging.getLogger(__name__)\n161     app.info = lambda *args, **kwargs: logger.info(*args, **kwargs)\n162     app.warn = lambda *args, **kwargs: logger.warning(*args, **kwargs)\n163     app.debug = lambda *args, **kwargs: logger.debug(*args, **kwargs)\n",
        "intended_behavior": "Review and adjust the Sphinx configuration to ensure it is correctly handling case sensitivity for terms. This may involve setting configuration options that affect glossary behavior, or implementing a Sphinx extension if default behavior does not support case-sensitive term uniqueness. Furthermore, ensuring that the Sphinx version used supports the desired configuration or handling method is vital. If the case sensitivity issue cannot be resolved through configuration alone, a workaround could involve a custom Sphinx extension or preprocessing step to validate and adjust glossary terms for case sensitivity before Sphinx processing."
    }
]